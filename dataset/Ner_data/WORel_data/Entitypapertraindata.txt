JAXB	B-Entity
Bindings	O
File	O
Sets	O
@	O
XmlElement	O
type	O
to	O
String	O
instead	O
of	O
XMLGregorianCalendar	O
.	O
	
 -X-	O
I	O
can	O
manually	O
change	O
it	O
","	O
but	O
I	O
'd	O
rather	O
not	O
have	O
to	O
remember	O
to	O
update	O
it	O
every	O
time	O
the	O
jaxb	B-Entity
files	O
are	O
regenerated	O
.	O
 -X-	O
	
The	O
best	O
known	O
are	O
URL_http	O
:	O
/	O
/	O
nekohtml.sourceforge.net	O
/	O
[	O
NekoHTML	O
]	O
and	O
URL_http	O
:	O
/	O
/	O
jtidy.sourceforge.net	B-Entity
/	O
[	O
JTidy	O
]	O
.	O
	
 -X-	O
JTidy	B-Entity
is	O
more	O
intented	O
into	O
formatting	O
your	O
html	O
code	O
into	O
something	O
XML-	O
valid	O
","	O
but	O
is	O
still	O
very	O
useful	O
as	O
an	O
XML	O
parser	O
","	O
producing	O
a	O
DOM	O
tree	O
if	O
needed	O
.	O
 -X-	O
	
Another	O
choice	O
could	O
be	O
to	O
use	O
URL_http	O
:	O
/	O
/	O
github.com	O
/	O
whymirror	O
/	O
hpricot	O
[	O
hpricot	O
]	O
through	O
jRuby	B-Entity
.	O
	
SAX	O
is	O
not	O
what	O
I	O
want	O
and	O
main	O
purpose	O
of	O
JTidy	B-Entity
is	O
cleaning	O
an	O
XML	O
.	O
	
URL_http	O
:	O
/	O
/	O
tika.apache.org	O
/	O
[	O
Apache-Tika	B-Entity
]	O
is	O
the	O
best	O
choice	O
.	O
	
 -X-	O
See	O
its	O
URL_http	O
:	O
/	O
/	O
www.theserverside.com	O
/	O
news	O
/	O
thread.tss	O
?	O
thread_id=50059	O
[	O
announcement	O
]	O
on	O
TheServerSide	O
to	O
see	O
how	O
it	O
compare	O
to	O
JTidy	B-Entity
","	O
TagSoup	B-Entity
","	O
NekoHtml	B-Entity
.	O
 -X-	O
	
and	O
how	O
's	O
your	O
experience	O
with	O
dom4j	B-Entity
?	O
	
After	O
the	O
@	O
Voo	O
's	O
answer	O
let	O
me	O
ask	O
another	O
one	O
-	O
Should	O
I	O
use	O
java	O
's	O
in	O
built	O
classes	O
or	O
any	O
third	O
library	O
like	O
dom4j..	B-Entity
What	O
are	O
the	O
advantages	O
?	O
	
vtd-xml	B-Entity
will	O
be	O
the	O
one	O
to	O
beat	O
for	O
performance	O
/	O
memory	O
usage	O
and	O
ease	O
of	O
use	O
.	O
	
SAX	B-Entity
Parser	O
:	O
Solely	O
to	O
read	O
a	O
XML	O
document	O
.	O
	
They	O
're	O
defined	O
in	O
org.xml.sax.ContentHandler	B-Entity
and	O
there	O
's	O
an	O
empty	O
helper	O
class	O
DefaultHandler	B-Entity
.	O
	
StAx	B-Entity
Reader	O
/	O
Writer	O
:	O
This	O
works	O
with	O
a	O
datastream	O
oriented	O
interface	O
.	O
	
JAXB	B-Entity
:	O
The	O
newest	O
implementation	O
to	O
read	O
XML	O
documents	O
:	O
Is	O
part	O
of	O
Java	O
6	O
in	O
v2	O
.	O
	
You	O
read	O
the	O
document	O
with	O
a	O
class	O
that	O
implements	O
a	O
interface	O
to	O
javax.xml.bind.Unmarshaller	B-Entity
(	O
you	O
get	O
a	O
class	O
for	O
this	O
from	O
JAXBContext.newInstance	B-Entity
)	O
.	O
	
 -X-	O
Well	O
it	O
depends	O
-	O
not	O
all	O
APIs	O
have	O
the	O
same	O
capabilities	O
as	O
you	O
see	O
","	O
but	O
if	O
you	O
have	O
control	O
over	O
the	O
classes	O
you	O
use	O
to	O
map	O
the	O
XML	O
document	O
JAXB	B-Entity
is	O
my	O
personal	O
favorite	O
","	O
really	O
elegant	O
and	O
simple	O
solution	O
(	O
though	O
I	O
have	O
n't	O
used	O
it	O
for	O
really	O
large	O
documents	O
","	O
it	O
could	O
get	O
a	O
bit	O
complex	O
)	O
.	O
 -X-	O
	
 -X-	O
SAX	B-Entity
is	O
pretty	O
easy	O
to	O
use	O
too	O
and	O
just	O
stay	O
away	O
from	O
DOM	O
if	O
you	O
do	O
n't	O
have	O
a	O
really	O
good	O
reason	O
to	O
use	O
it	O
-	O
old	O
","	O
clunky	O
API	O
in	O
my	O
opinion	O
.	O
 -X-	O
	
JDOM	O
would	O
be	O
another	O
alternative	O
to	O
DOM4J	B-Entity
.	O
	
Both	O
are	O
wrappers	O
of	O
the	O
SAX	B-Entity
and	O
DOM	O
parsers	O
built	O
into	O
the	O
JDK	O
.	O
	
 -X-	O
The	O
W3C	O
Document	O
hierarchy	O
is	O
verbose	O
and	O
hard	O
to	O
use	O
","	O
so	O
both	O
DOM4J	B-Entity
and	O
JDOM	O
try	O
to	O
make	O
it	O
easier	O
.	O
 -X-	O
	
 -X-	O
I	O
like	O
Elliott	B-Entity
Rusty	I-Entity
Harold	I-Entity
","	O
so	O
I	O
tend	O
to	O
reach	O
for	O
JDOM	O
first	O
.	O
 -X-	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
download.oracle.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
javax	O
/	O
xml	O
/	O
parsers	O
/	O
SAXParserFa	B-Entity
ctory.html	I-Entity
[	O
URL_http	O
:	O
/	O
/	O
download.oracle.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
javax	O
/	O
xml	O
/	O
parsers	O
/	O
SAX	O
ParserFactory.html	O
]	O
Example	O
:	O
URL_http	O
:	O
/	O
/	O
www.mkyong.com	O
/	O
java	O
/	O
how-to-read-xml-file-in-java-sax-	O
parser	O
/	O
[	O
URL_http	O
:	O
/	O
/	O
www.mkyong.com	O
/	O
java	O
/	O
how-to-read-xml-file-in-java-sax-parser	O
/	O
]	O
	
 -X-	O
If	O
you	O
want	O
a	O
DOM-like	O
API	O
-	O
that	O
is	O
","	O
one	O
where	O
the	O
XML	O
parser	O
turns	O
the	O
document	O
into	O
a	O
tree	O
of	O
Element	O
and	O
Attribute	O
nodes	O
-	O
then	O
there	O
are	O
at	O
least	O
four	O
to	O
choose	O
from	O
:	O
DOM	O
itself	O
","	O
JDOM	B-Entity
","	O
DOM4J	B-Entity
","	O
and	O
XOM	B-Entity
.	O
 -X-	O
	
 -X-	O
My	O
own	O
preference	O
","	O
for	O
its	O
combination	O
of	O
simplicity	O
","	O
power	O
","	O
and	O
performance	O
","	O
is	O
XOM	B-Entity
.	O
 -X-	O
	
 -X-	O
And	O
of	O
course	O
","	O
there	O
are	O
other	O
styles	O
of	O
processing	O
:	O
low-level	O
parser	O
interfaces	O
(	O
SAX	B-Entity
and	O
StAX	B-Entity
)	O
","	O
data-object	O
binding	O
interfaces	O
(	O
JAXB	B-Entity
)	O
","	O
and	O
high-	O
level	O
declarative	O
languages	O
(	O
XSLT	O
","	O
XQuery	O
","	O
XPath	O
)	O
.	O
 -X-	O
	
 -X-	O
JAXP	B-Entity
is	O
then	O
implemented	O
by	O
different	O
providers	O
such	O
as	O
:	O
Oracle	O
","	O
Apache	O
","	O
etc	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
xstream.codehaus.org	O
/	O
[	O
XStream	B-Entity
]	O
is	O
pretty	O
good	O
at	O
serializing	O
object	O
to	O
XML	O
without	O
much	O
configuration	O
and	O
money	O
!	O
	
I	O
like	O
XStream	B-Entity
.	O
	
 -X-	O
The	O
 -X-	O
 -X-	O
Official	O
 -X-	O
 -X-	O
Java	O
API	O
for	O
this	O
is	O
now	O
JAXB	B-Entity
-	O
Java	O
API	O
for	O
XML	O
Binding	O
.	O
 -X-	O
	
The	O
reference	O
implementation	O
lives	O
at	O
URL_http	O
:	O
/	O
/	O
jaxb.java.net	B-Entity
/	O
[	O
URL_http	O
:	O
/	O
/	O
jaxb.java.net	O
/	O
]	O
.	O
	
 -X-	O
That	O
's	O
right	O
","	O
JAXB	B-Entity
is	O
definitely	O
the	O
best	O
option	O
!	O
.	O
 -X-	O
	
 -X-	O
You	O
may	O
want	O
to	O
look	O
at	O
URL_http	O
:	O
/	O
/	O
simple.sourceforge.net	O
/	O
[	O
Simple	O
]	O
","	O
its	O
the	O
closest	O
thing	O
I	O
've	O
found	O
to	O
the	O
System.Xml.Serialization	B-Entity
in	O
.Net	O
.	O
 -X-	O
	
JAXB	B-Entity
is	O
part	O
of	O
JDK	O
standard	O
edition	O
version	O
1.6+	O
.	O
	
CODETERM2	O
seems	O
as	O
easy	O
and	O
simpler	O
as	O
JAXB	B-Entity
but	O
I	O
could	O
not	O
find	O
any	O
licensing	O
information	O
to	O
evaluate	O
it	O
for	O
enterprise	O
use	O
.	O
	
 -X-	O
XStream	B-Entity
is	O
not	O
dead	O
","	O
it	O
is	O
just	O
mature	O
and	O
stable	O
--	O
meaning	O
there	O
is	O
n't	O
much	O
to	O
add	O
to	O
core	O
functionality	O
.	O
 -X-	O
	
 -X-	O
Same	O
is	O
actually	O
TRUE	O
for	O
JAXB	B-Entity
reference	O
implementation	O
","	O
not	O
much	O
activity	O
for	O
past	O
couple	O
of	O
years	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
xmlbeans.apache.org	O
/	O
[	O
XMLBeans	B-Entity
]	O
works	O
great	O
if	O
you	O
have	O
a	O
schema	O
for	O
your	O
XML	O
.	O
	
 -X-	O
Worth	O
mentioning	O
that	O
since	O
version	O
1.4	O
","	O
Java	O
had	O
the	O
classes	O
java.beans.XMLEncoder	B-Entity
and	O
java.beans.XMLDecoder	B-Entity
.	O
 -X-	O
	
 -X-	O
If	O
your	O
class	O
sticks	O
to	O
the	O
JavaBeans	B-Entity
specification	O
for	O
its	O
getters	O
and	O
setters	O
","	O
this	O
method	O
is	O
straightforward	O
to	O
use	O
and	O
you	O
do	O
n't	O
need	O
a	O
schema	O
.	O
 -X-	O
	
coding	O
and	O
decoding	O
run	O
over	O
a	O
InputStream	B-Entity
and	O
OutputStream	B-Entity
	
the	O
process	O
uses	O
the	O
familar	O
writeObject	B-Entity
and	O
readObject	B-Entity
methods	O
	
Usually	O
I	O
use	O
URL_http	O
:	O
/	O
/	O
jaxb.java.net	B-Entity
/	O
[	O
jaxb	O
]	O
or	O
URL_http	O
:	O
/	O
/	O
xmlbeans.apache.org	O
/	O
[	O
XMLBeans	O
]	O
if	O
I	O
need	O
to	O
create	O
objects	O
serializable	O
to	O
XML	O
.	O
	
 -X-	O
Now	O
","	O
I	O
can	O
see	O
that	O
URL_http	O
:	O
/	O
/	O
xstream.codehaus.org	O
/	O
[	O
XStream	B-Entity
]	O
might	O
be	O
very	O
useful	O
as	O
it	O
's	O
nonintrusive	O
and	O
has	O
really	O
simple	O
api	O
.	O
 -X-	O
	
@	O
Barak	O
Schiller	O
Thanks	O
for	O
posting	O
link	O
to	O
XStream	B-Entity
!	O
	
Problem	O
is	O
jaxb	B-Entity
and	O
xmlbeans	B-Entity
require	O
a	O
mapping	O
schema	O
and	O
arent	O
auto	O
...	O
	
Do	O
n't	O
forget	O
URL_http	O
:	O
/	O
/	O
jibx.sourceforge.net	B-Entity
/	O
[	O
JiBX	O
]	O
.	O
	
solution**	O
(	O
like	O
ORM	O
)	O
then	O
JAXB2	B-Entity
is	O
a	O
good	O
solution	O
.	O
 -X-	O
	
 -X-	O
Castor	O
provides	O
Java-to-XML	B-Entity
binding	O
","	O
Java-to-SQL	B-Entity
persistence	O
","	O
and	O
more	O
.	O
 -X-	O
	
I	O
'm	O
using	O
Rhino	B-Entity
1.7R4	O
and	O
env.js	B-Entity
1.2	O
to	O
run	O
Javascript	O
code	O
inside	O
Java	O
I	O
want	O
to	O
print	O
from	O
my	O
Javascript	O
code	O
a	O
string	O
to	O
the	O
Java	O
console	O
.	O
	
If	O
I	O
use	O
document.write	B-Entity
I	O
do	O
n't	O
see	O
any	O
output	O
.	O
	
 -X-	O
I	O
do	O
n't	O
think	O
that	O
will	O
work	O
in	O
embedded	O
mode	O
","	O
I	O
think	O
that	O
will	O
only	O
work	O
in	O
the	O
Rhino	B-Entity
console	O
.	O
 -X-	O
	
You	O
can	O
use	O
java.lang.system.out.println	B-Entity
.	O
	
How	O
to	O
trace	O
a	O
NullPointerException	B-Entity
in	O
a	O
chain	O
of	O
getters	O
.	O
	
If	O
I	O
get	O
a	O
NullPointerException	B-Entity
in	O
a	O
call	O
like	O
this	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
and	O
then	O
waiting	O
for	O
a	O
more	O
descriptive	O
NullPointerException	B-Entity
that	O
tells	O
me	O
which	O
line	O
to	O
look	O
for	O
.	O
	
 -X-	O
No	O
need	O
for	O
checking	O
!	O
=	O
null	O
","	O
no	O
need	O
to	O
worry	O
about	O
NullPointerExceptions	B-Entity
(	O
_be	O
warned	O
that	O
chaining	O
still	O
vialotes	O
the	O
law	O
of	O
demeter	O
","	O
but	O
I	O
can	O
live	O
with	O
that_	O
)	O
	
EDIT	O
:	O
URL_http	O
:	O
/	O
/	O
help.eclipse.org	O
/	O
help32	O
/	O
index.jsp	O
?	O
topic=	O
/	O
org.eclipse.jdt.doc	B-Entity
.	O
	
 -X-	O
Following	O
this	O
 -X-	O
 -X-	O
law	O
 -X-	O
 -X-	O
has	O
many	O
more	O
benefits	O
apart	O
from	O
making	O
NullPointerExceptions	B-Entity
easier	O
to	O
debug	O
.	O
 -X-	O
	
 -X-	O
By	O
the	O
way	O
","	O
the	O
same	O
rationale	O
applies	O
to	O
setters	O
","	O
but	O
I	O
'd	O
use	O
an	O
IllegalArgumentException	B-Entity
there	O
.	O
 -X-	O
	
Meanwhile	O
we	O
can	O
dream	O
of	O
URL_http	O
:	O
/	O
/	O
groovy.codehaus.org	O
/	O
Operators	O
#	O
Operators-	O
SafeNavigationOperator	B-Entity
(	O
%	O
3F	O
.	O
	
Agreed	O
--	O
but	O
throw	O
NullPointerException	B-Entity
(	I-Entity
)	I-Entity
if	O
the	O
problem	O
is	O
a	O
null	O
reference	O
!	O
.	O
	
 -X-	O
If	O
the	O
result	O
of	O
a	O
computation	O
or	O
database	O
lookup	O
is	O
null	O
","	O
when	O
I	O
expected	O
something	O
different	O
then	O
IllegalStateException	B-Entity
is	O
a	O
valid	O
choice	O
.	O
 -X-	O
	
Is	O
it	O
non-null	O
?	O
Then	O
highlight	O
someObject.getSomething	B-Entity
(	I-Entity
)	I-Entity
(	O
including	O
the	O
parenthesis	O
)	O
and	O
inspect	O
it.Is	O
it	O
null	O
?	O
	
 -X-	O
If	O
you	O
have	O
a	O
method	O
or	O
constructor	O
that	O
takes	O
an	O
object	O
parameter	O
and	O
the	O
object	O
/	O
method	O
in	O
question	O
can	O
not	O
sensibly	O
deal	O
with	O
that	O
parameter	O
being	O
null	O
","	O
then	O
just	O
check	O
and	O
throw	O
a	O
NullPointerException	B-Entity
there	O
and	O
then	O
.	O
 -X-	O
	
Chained	O
expressions	O
like	O
that	O
are	O
a	O
pain	O
to	O
debug	O
for	O
NullPointerExceptions	B-Entity
(	O
and	O
most	O
other	O
problems	O
that	O
can	O
occur	O
)	O
so	O
I	O
would	O
advise	O
you	O
to	O
try	O
and	O
avoid	O
it	O
.	O
	
You	O
have	O
probably	O
heard	O
that	O
enough	O
though	O
and	O
like	O
a	O
previous	O
poster	O
mentioned	O
you	O
can	O
add	O
break	O
points	O
on	O
the	O
actual	O
NullPointerException	B-Entity
to	O
see	O
where	O
it	O
occurred	O
.	O
	
TurnOnDebuggerException	B-Entity
can	O
be	O
any	O
exception	O
guaranteed	O
not	O
to	O
be	O
thrown	O
anywhere	O
else	O
.	O
	
I	O
ended	O
up	O
writing	O
three	O
classes	O
:	O
(	O
1	O
)	O
TurnOnDebuggerException	B-Entity
","	O
a	O
plain	O
'ol	O
Java	O
exception	O
","	O
(	O
2	O
)	O
DebuggerPoller	B-Entity
","	O
a	O
background	O
thread	O
the	O
checks	O
for	O
the	O
existence	O
of	O
a	O
specified	O
file	O
on	O
the	O
filesystem	O
","	O
and	O
(	O
3	O
)	O
DebuggerMainWrapper	B-Entity
","	O
a	O
class	O
that	O
kicks	O
off	O
the	O
polling	O
thread	O
and	O
then	O
reflectively	O
calls	O
the	O
main	O
method	O
of	O
another	O
specified	O
class	O
.	O
 -X-	O
	
 -X-	O
Replace	O
your	O
 -X-	O
 -X-	O
main	O
 -X-	O
 -X-	O
class	O
with	O
DebuggerMainWrapper	B-Entity
in	O
your	O
start-up	O
scripts	O
2	O
.	O
 -X-	O
	
Configure	O
the	O
debugger	O
on	O
the	O
command	O
line	O
with	O
the	O
onthrow=com.whatever.TurnOnDebuggerException	B-Entity
part	O
added	O
4	O
.	O
	
 -X-	O
When	O
the	O
poller	O
first	O
notices	O
it	O
","	O
it	O
throws	O
and	O
immediately	O
catches	O
the	O
TurnOnDebuggerException	B-Entity
.	O
 -X-	O
	
 -X-	O
To	O
be	O
honest	O
Collections	B-Entity
needs	O
a	O
toString	O
method	O
too	O
","	O
but	O
this	O
works	O
also	O
.	O
 -X-	O
	
 -X-	O
@	O
Tovi7	O
It	O
probably	O
does	O
n't	O
because	O
most	O
OOTB	O
Collections	O
already	O
provide	O
readable	O
toString	B-Entity
(	I-Entity
)	I-Entity
s	O
","	O
whereas	O
arrays	O
do	O
n't	O
.	O
 -X-	O
	
Implement	O
toString	B-Entity
(	I-Entity
)	I-Entity
on	O
the	O
class	O
.	O
	
I	O
recommend	O
the	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-lang	O
/	O
javadocs	O
/	O
api-release	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
lang3	O
/	O
builder	O
/	O
ToStringBuilder.html	O
[	O
Apache-	B-Entity
Commons-ToStringBuilder	I-Entity
]	O
to	O
make	O
this	O
easier	O
.	O
	
Person	O
@	O
7f54	O
[	O
name=Stephen	O
","	O
age=29	O
]	O
There	O
is	O
also	O
a	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-lang	O
/	O
javadocs	O
/	O
api-release	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
lang3	O
/	O
builder	O
/	O
ReflectionToStringBuilder.html	B-Entity
[	O
reflective-implementation	O
]	O
.	O
 -X-	O
	
 -X-	O
ToStringBuilder	B-Entity
is	O
usually	O
more	O
applicable	O
for	O
beans	O
and	O
objects	O
that	O
carry	O
information	O
","	O
less	O
so	O
for	O
complex	O
data	O
structures	O
.	O
 -X-	O
	
 -X-	O
usage	O
of	O
reflection	O
ToStringBuilder	B-Entity
","	O
HashCodeBuilder	B-Entity
and	O
EqualsBuilder	B-Entity
is	O
highly	O
inefective	O
.	O
 -X-	O
	
ToStringBuilder	B-Entity
uses	O
threadlocal	O
!	O
?	O
!	O
	
 -X-	O
The	O
question	O
explicitly	O
says	O
the	O
class	O
is	O
a	O
built-in	O
collection	O
","	O
so	O
toString	B-Entity
(	I-Entity
)	I-Entity
ca	O
n't	O
be	O
modified	O
.	O
 -X-	O
	
The	O
MapUtils	O
class	O
offered	O
by	O
the	O
Apache	O
Commons	O
project	O
offers	O
a	O
MapUtils.debugPrint	B-Entity
method	O
which	O
will	O
pretty	O
print	O
your	O
map	O
.	O
	
I	O
'm	O
not	O
terribly	O
familiar	O
with	O
the	O
Guava	B-Entity
library	O
but	O
I	O
would	O
n't	O
be	O
surprised	O
if	O
there	O
was	O
.	O
	
System.out.println	B-Entity
(	O
Collection	O
c	O
)	O
already	O
print	O
any	O
type	O
of	O
collection	O
in	O
readable	O
format	O
.	O
	
 -X-	O
Only	O
if	O
collection	O
contains	O
user	O
defined	O
objects	O
","	O
then	O
you	O
need	O
to	O
implement	O
toString	B-Entity
(	I-Entity
)	I-Entity
in	O
user	O
defined	O
class	O
to	O
display	O
content	O
.	O
 -X-	O
	
line	O
21	O
:	O
ToStringBuilder	B-Entity
can	O
not	O
be	O
resolved	O
.	O
	
 -X-	O
If	O
this	O
is	O
your	O
own	O
collection	O
class	O
rather	O
than	O
a	O
built	O
in	O
one	O
","	O
you	O
need	O
to	O
override	O
its	O
toString	B-Entity
method	O
.	O
 -X-	O
	
 -X-	O
which	O
java	O
http	O
client	O
library	O
is	O
easy	O
to	O
use	O
for	O
programmatically	O
doing	O
posts	O
","	O
setting	O
cookies	O
and	O
maybe	O
ajax	B-Entity
?	O
 -X-	O
	
 -X-	O
which	O
java	O
http	O
client	O
library	O
is	O
easy	O
to	O
use	O
for	O
programmatically	O
doing	O
posts	O
","	O
setting	O
cookies	O
and	O
maybe	O
ajax	B-Entity
?	O
 -X-	O
	
 -X-	O
Apache	O
HTTP	O
Component	O
(	O
HttpClient	O
4	O
)	O
","	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-client-4.0.1	O
/	O
index.html	O
[	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-client-4.0.1	O
/	O
index.html	O
]	O
Normally	O
","	O
I	O
would	O
just	O
use	O
HttpURLConnection	B-Entity
but	O
its	O
cookie	O
handling	O
is	O
too	O
weak	O
to	O
simulate	O
browser	O
behavior	O
.	O
 -X-	O
	
 -X-	O
You	O
can	O
use	O
URL_http	O
:	O
/	O
/	O
www.rexsl.com	O
/	O
rexsl-	O
test	O
/	O
apidocs-0.10	O
/	O
com	O
/	O
rexsl	O
/	O
test	O
/	O
request	O
/	O
JdkRequest.html	B-Entity
[	O
CODETERM1	O
]	O
from	O
URL_http	O
:	O
/	O
/	O
www.rexsl.com	O
/	O
rexsl-test	O
[	O
rexsl-test	O
]	O
(	O
I	O
'm	O
a	O
developer	O
)	O
","	O
which	O
does	O
all	O
this	O
work	O
for	O
you	O
","	O
decorating	O
CODETERM2	O
","	O
firing	O
HTTP	O
requests	O
and	O
parsing	O
responses	O
","	O
for	O
example	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
And	O
JXTA	B-Entity
supports	O
it	O
too	O
but	O
the	O
configuration	O
is	O
complicated	O
.	O
	
 -X-	O
I	O
created	O
an	O
example	O
app	O
using	O
Comet	B-Entity
","	O
Raphael	B-Entity
","	O
Bayeux	B-Entity
","	O
Java	O
and	O
Maven	O
running	O
PaaS	O
Cloudbees	O
and	O
wrote	O
a	O
blog	O
post	O
about	O
it	O
","	O
hopefully	O
it	O
will	O
be	O
helpful	O
to	O
someone	O
.	O
 -X-	O
	
Alternatives	O
to	O
Apache	O
HttpComponents	B-Entity
?	O
	
 -X-	O
So	O
","	O
I	O
've	O
come	O
to	O
the	O
conclusion	O
that	O
Apache	B-Entity
HttpComponents	I-Entity
4	O
is	O
one	O
of	O
the	O
most	O
overwrought	O
APIs	O
I	O
've	O
ever	O
come	O
across	O
.	O
 -X-	O
	
 -X-	O
The	O
ones	O
I	O
'm	O
aware	O
of	O
are	O
:	O
URL_http	O
:	O
/	O
/	O
docs.codehaus.org	O
/	O
display	O
/	O
JETTY	O
/	O
Jetty+HTTP+Client	O
[	O
Jetty	O
]	O
","	O
URL_http	O
:	O
/	O
/	O
hotpotato.biasedbit.com	O
/	O
[	O
hotpotato	O
]	O
","	O
and	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
sonatype	O
/	O
async-http-client	O
[	O
AsyncHttpClient	B-Entity
]	O
.	O
 -X-	O
	
 -X-	O
Hey	O
","	O
I	O
do	O
n't	O
mean	O
to	O
disparage	O
anyone	O
's	O
work	O
here	O
","	O
but	O
I	O
've	O
been	O
making	O
a	O
good-faith	O
effort	O
to	O
use	O
HttpComponents	B-Entity
since	O
4	O
came	O
out	O
and	O
it	O
's	O
just	O
not	O
working	O
for	O
me	O
.	O
 -X-	O
	
 -X-	O
While	O
not	O
flawless	O
","	O
have	O
you	O
considered	O
the	O
standard	O
URLConnection	B-Entity
/	O
HTTPUrlConnection	O
?	O
 -X-	O
	
 -X-	O
Having	O
to	O
call	O
InputStream	B-Entity
#	O
close	O
(	O
)	O
to	O
release	O
allocated	O
resources	O
is	O
massively	O
over-complex	O
","	O
is	O
n't	O
it	O
?	O
 -X-	O
	
Complexity	O
of	O
HttpClient	B-Entity
API	O
simply	O
reflects	O
the	O
complexity	O
of	O
its	O
problem	O
domain	O
.	O
	
I	O
personally	O
like	O
Jetty	O
HttpClient	B-Entity
a	O
lot	O
.	O
	
 -X-	O
@	O
Alex	O
B	O
:	O
HttpComponents	B-Entity
are	O
being	O
used	O
in	O
all	O
sorts	O
of	O
different	O
applications	O
randing	O
from	O
simple	O
URL	O
fetchers	O
to	O
complex	O
transports	O
and	O
web	O
crawlers	O
with	O
different	O
","	O
often	O
conflicting	O
requirements	O
.	O
 -X-	O
	
HttpClient	B-Entity
has	O
to	O
deal	O
with	O
several	O
dozen	O
customization	O
parameters	O
and	O
context	O
specific	O
strategies	O
and	O
objects	O
.	O
	
For	O
those	O
who	O
are	O
not	O
able	O
to	O
wrap	O
their	O
head	O
around	O
HttpClient	B-Entity
API	O
there	O
is	O
fluent	O
facade	O
API	O
:	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-client-dev	O
/	O
fluent-hc	O
/	O
index.html	O
.	O
	
 -X-	O
 -X-	O
 -X-	O
Complexity	O
of	O
HttpClient	B-Entity
API	O
simply	O
reflects	O
the	O
complexity	O
of	O
its	O
problem	O
domain	O
.	O
 -X-	O
	
 -X-	O
I	O
think	O
Alex	B-Entity
B	O
is	O
right	O
when	O
he	O
says	O
that	O
objectively	O
the	O
API	O
is	O
bad	O
and	O
could	O
have	O
been	O
	
 -X-	O
HttpComponents	B-Entity
is	O
great	O
","	O
but	O
can	O
be	O
overkill	O
for	O
simple	O
tasks	O
.	O
 -X-	O
	
HttpURLConnection	B-Entity
instances	O
are	O
significantly	O
cheaper	O
to	O
create	O
than	O
due	O
to	O
the	O
fact	O
that	O
they	O
share	O
one	O
static	O
JRE	O
wide	O
pool	O
of	O
connections	O
.	O
	
Per	O
default	O
HttpClient	B-Entity
always	O
creates	O
a	O
new	O
pool	O
of	O
connections	O
and	O
therefore	O
is	O
slower	O
to	O
start	O
up	O
and	O
warm	O
up	O
.	O
	
One	O
can	O
address	O
this	O
problem	O
by	O
re-using	O
the	O
same	O
instance	O
of	O
HttpClient	B-Entity
for	O
new	O
requests	O
.	O
	
 -X-	O
This	O
approach	O
is	O
used	O
by	O
HttpClient	B-Entity
's	O
fluent	O
facade	O
","	O
for	O
isntance	O
:	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-client-dev	O
/	O
fluent-hc	O
/	O
index.html	O
.	O
 -X-	O
	
In	O
all	O
other	O
cases	O
I	O
can	O
think	O
of	O
HttpClient	B-Entity
should	O
be	O
comfortably	O
faster	O
.	O
	
I	O
do	O
always	O
use	O
a	O
single	O
HttpClient	B-Entity
instance	O
.	O
	
For	O
simple	O
use	O
cases	O
you	O
can	O
use	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-	O
client-ga	O
/	O
fluent-hc	O
/	O
[	O
HttpClient-Fluent-API	B-Entity
]	O
.	O
	
This	O
module	O
provides	O
an	O
easy	O
to	O
use	O
facade	O
API	O
for	O
HttpClient	B-Entity
based	O
on	O
the	O
concept	O
of	O
a	O
fluent	O
interface	O
.	O
 -X-	O
	
Fluent	O
facade	O
API	O
exposes	O
only	O
the	O
most	O
fundamental	O
functions	O
of	O
HttpClient	B-Entity
and	O
is	O
indended	O
for	O
simple	O
use	O
cases	O
that	O
do	O
not	O
require	O
the	O
full	O
flexibility	O
of	O
HttpClient	O
.	O
	
You	O
could	O
use	O
URL_http	O
:	O
/	O
/	O
www.jboss.org	O
/	O
netty	O
[	O
Netty	O
]	O
or	O
URL_http	O
:	O
/	O
/	O
mina.apache.org	O
/	O
[	O
Apache-Mina	B-Entity
]	O
albeit	O
they	O
are	O
very	O
low	O
level	O
and	O
I	O
'm	O
not	O
sure	O
you	O
will	O
end	O
up	O
with	O
less	O
verbose	O
code	O
.	O
	
 -X-	O
HTTPUnit	B-Entity
has	O
a	O
great	O
interface	O
(	O
not	O
much	O
code	O
needed	O
)	O
","	O
but	O
the	O
latest	O
version	O
of	O
it	O
submits	O
duplicate	O
requests	O
.	O
 -X-	O
	
 -X-	O
HTMLUnit	B-Entity
will	O
work	O
","	O
but	O
for	O
me	O
it	O
has	O
seemed	O
to	O
have	O
limited	O
support	O
for	O
Javascript	O
.	O
 -X-	O
	
You	O
could	O
have	O
a	O
look	O
at	O
URL_http	O
:	O
/	O
/	O
www.restlet.org	O
[	O
Restlet	B-Entity
]	O
's	O
client	O
capabilities	O
.	O
	
It	O
's	O
a	O
layer	O
above	O
that	O
can	O
be	O
supported	O
by	O
Apache	B-Entity
HttpComponents	I-Entity
or	O
Java	O
's	O
Net	O
API	O
for	O
example	O
.	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
net	O
/	O
HttpURLConnection.html	B-Entity
In	O
particular	O
","	O
getHeaderField	B-Entity
","	O
getHeaderFieldKey	B-Entity
","	O
and	O
getContent	B-Entity
.	O
 -X-	O
	
You	O
can	O
use	O
URL_http	O
:	O
/	O
/	O
download.oracle.com	O
/	O
javase	O
/	O
7	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
net	O
/	O
HttpURLC	O
onnection.html	O
[	O
java.net.HttpUrlConnection	B-Entity
]	O
.	O
	
Here	O
is	O
another	O
nice	O
code	O
snippet	O
in	O
replace	O
for	O
Java	O
Almanac	O
:	O
[	O
HttpUrlConnection-Example	B-Entity
]	O
(	O
URL_http	O
:	O
/	O
/	O
www.xyzws.com	O
/	O
Javafaq	O
/	O
how-to-use	O
-	O
httpurlconnection-post-data-to-web-server	O
/	O
139	O
)	O
.	O
	
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
[	O
Apache-HttpComponents	B-Entity
]	O
.	O
	
The	O
examples	O
for	O
the	O
two	O
modules	O
-	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-core-ga	O
/	O
examples.html	O
[	O
HttpCore	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
hc.apache.org	O
/	O
httpcomponents-client-ga	O
/	O
examples.html	O
[	O
HttpClient	B-Entity
]	O
will	O
get	O
you	O
started	O
right	O
away	O
.	O
	
 -X-	O
Not	O
that	O
HttpUrlConnection	B-Entity
is	O
a	O
bad	O
choice	O
","	O
HttpComponents	O
will	O
abstract	O
a	O
lot	O
of	O
the	O
tedious	O
coding	O
away	O
.	O
 -X-	O
	
 -X-	O
By	O
the	O
way	O
","	O
HttpCore	B-Entity
could	O
be	O
used	O
for	O
applications	O
(	O
clients	O
or	O
servers	O
)	O
with	O
minimum	O
functionality	O
","	O
whereas	O
HttpClient	O
is	O
to	O
be	O
used	O
for	O
clients	O
that	O
require	O
support	O
for	O
multiple	O
authentication	O
schemes	O
","	O
cookie	O
support	O
etc	O
.	O
 -X-	O
	
 -X-	O
FWIW	O
","	O
our	O
code	O
started	O
with	O
java.net.HttpURLConnection	B-Entity
","	O
but	O
when	O
we	O
had	O
to	O
add	O
SSL	O
and	O
work	O
around	O
some	O
of	O
the	O
weird	O
use	O
cases	O
in	O
our	O
screwy	O
internal	O
networks	O
","	O
it	O
became	O
a	O
real	O
headache	O
.	O
 -X-	O
	
 -X-	O
Apache	O
HttpComponents	B-Entity
saved	O
the	O
day.Our	O
project	O
currently	O
still	O
uses	O
an	O
ugly	O
hybrid	O
","	O
with	O
a	O
few	O
dodgy	O
adapters	O
to	O
convert	O
java.net.URLs	O
to	O
the	O
URIs	O
HttpComponents	O
uses	O
.	O
 -X-	O
	
The	O
only	O
time	O
HttpComponents	B-Entity
code	O
turned	O
out	O
significantly	O
more	O
complicated	O
was	O
for	O
parsing	O
dates	O
from	O
a	O
header	O
.	O
	
 -X-	O
You	O
can	O
monkey	O
with	O
request	O
headers	O
using	O
URLConnection	B-Entity
","	O
but	O
the	O
poster	O
does	O
n't	O
ask	O
for	O
that	O
;	O
judging	O
from	O
the	O
question	O
","	O
a	O
simple	O
answer	O
is	O
important	O
.	O
 -X-	O
	
 -X-	O
Especially	O
if	O
you	O
want	O
to	O
use	O
it	O
in	O
WebServices	B-Entity
you	O
have	O
to	O
set	O
timeouts	O
","	O
otherwise	O
the	O
above	O
code	O
will	O
wait	O
indefinitely	O
or	O
for	O
a	O
very	O
long	O
time	O
at	O
least	O
and	O
it	O
's	O
something	O
presumably	O
you	O
do	O
n't	O
want	O
.	O
 -X-	O
	
 -X-	O
The	O
new	O
try-with-resources	O
will	O
auto-close	O
the	O
Scanner	O
","	O
which	O
will	O
auto-close	O
the	O
InputStream	B-Entity
.	O
 -X-	O
	
 -X-	O
I	O
am	O
currently	O
considering	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
redis	O
/	O
[	O
redis	O
]	O
+	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
jredis	O
/	O
[	O
jredis	B-Entity
]	O
	
URL_http	O
:	O
/	O
/	O
download.oracle.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
io	O
/	O
Serializable.html	B-Entity
.	O
	
 -X-	O
You	O
're	O
tagging	O
this	O
question	O
with	O
[	O
key-value-store	B-Entity
]	O
and	O
many	O
answers	O
below	O
are	O
about	O
graph	O
oriented	O
db	O
","	O
document	O
oriented	O
db	O
","	O
OODB	O
.	O
 -X-	O
	
 -X-	O
Definitely	O
URL_http	O
:	O
/	O
/	O
www.orientechnologies.com	O
[	O
OrientDB	B-Entity
]	O
(	O
URL_http	O
:	O
/	O
/	O
www.orientechnologies.com	O
)	O
:	O
	
I	O
've	O
had	O
great	O
success	O
with	O
URL_http	O
:	O
/	O
/	O
neo4j.org	O
[	O
Neo4J	B-Entity
]	O
.	O
	
1	O
for	O
neo4j	B-Entity
.	O
	
 -X-	O
My	O
only	O
gripe	O
is	O
version	O
1.1	O
does	O
n't	O
have	O
a	O
way	O
to	O
get	O
a	O
relationship	O
between	O
two	O
nodes	O
by	O
providing	O
a	O
method	O
getRelationship	B-Entity
(	O
node1	O
","	O
node2	O
)	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
couchdb.apache.org	O
/	O
[	O
CouchDB	B-Entity
]	O
	
URL_http	O
:	O
/	O
/	O
cassandra.apache.org	O
/	O
[	O
Cassandra	B-Entity
]	O
.	O
 -X-	O
	
It	O
's	O
fully	O
written	O
in	O
Java	O
and	O
can	O
be	O
accessed	O
via	O
Java	O
using	O
URL_http	O
:	O
/	O
/	O
incubator.apache.org	O
/	O
thrift	O
/	O
[	O
Thrift	B-Entity
]	O
or	O
URL_http	O
:	O
/	O
/	O
avro.apache.org	O
/	O
[	O
Avro	B-Entity
]	O
.	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
www.mongodb.org	O
/	O
downloads	O
[	O
MongoDB	B-Entity
]	O
for	O
example	O
","	O
seems	O
to	O
have	O
everything	O
you	O
need	O
in	O
terms	O
of	O
compatibility	O
and	O
is	O
very	O
easy	O
to	O
set	O
up	O
.	O
 -X-	O
	
I	O
would	O
choose	O
between	O
2	O
options	O
:	O
1	O
)	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Berkeley_DB	O
[	O
Berkeley-DB	B-Entity
]	O
:	O
it	O
's	O
very	O
mature	O
and	O
at	O
the	O
same	O
time	O
very	O
simple	O
key-value	O
storage	O
.	O
	
Read	O
this	O
answer	O
about	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
questions	O
/	O
2285045	O
/	O
what-scalability-	O
problems-have-you-solved-using-a-nosql-data-store	O
/	O
2316921	O
#	O
2316921	O
[	O
using-	O
MySql-as-NoSql-storage	B-Entity
]	O
.	O
	
 -X-	O
Cassandra	B-Entity
","	O
Neo4j	B-Entity
","	O
MongoDB	B-Entity
","	O
etc	O
.	O
 -X-	O
	
What	O
is	O
the	O
best	O
api	O
/	O
library	O
for	O
Java	O
to	O
use	O
Cassandra	B-Entity
?	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
github.com	O
/	O
rantav	O
/	O
hector	O
[	O
Hector	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
pelops	O
/	O
[	O
Pelops	B-Entity
]	O
are	O
","	O
as	O
far	O
as	O
I	O
know	O
","	O
the	O
two	O
that	O
are	O
most	O
widely	O
used	O
(	O
4	O
)	O
.	O
 -X-	O
	
i	O
know	O
this	O
is	O
an	O
old	O
question	O
but	O
I	O
'd	O
like	O
to	O
point	O
future	O
viewer	O
of	O
the	O
question	O
to	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
Netflix	O
/	O
astyanax	O
[	O
Astyanax	B-Entity
]	O
.	O
	
It	O
's	O
a	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
Netflix	O
/	O
astyanax	O
/	O
wikihttp	O
:	O
/	O
/	O
[	O
very-well-documented	O
]	O
Cassandra	B-Entity
API	O
with	O
many	O
examples	O
and	O
support	O
very	O
high	O
level	O
features	O
such	O
as	O
locking	O
and	O
all	O
versions	O
of	O
cql	O
.	O
	
Astyanax	B-Entity
is	O
also	O
URL_http	O
:	O
/	O
/	O
mvnrepository.com	O
/	O
artifact	O
/	O
com.netflix.astyanax	O
/	O
astyanax	O
[	O
Mavenized	O
]	O
.	O
	
 -X-	O
Kundera	B-Entity
is	O
a	O
object-datastore	O
mapping	O
tool	O
for	O
Cassandra	O
","	O
Hbase	O
and	O
MongoDB	O
.	O
 -X-	O
	
Column	O
/	O
super	O
column	O
indexing	O
using	O
lucene	B-Entity
.	O
 -X-	O
	
Cross-datastore	O
persistence	O
It	O
's	O
hosted	O
here	O
:	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
impetus-opensource	O
/	O
Kundera	B-Entity
[	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
impetus-opensource	O
/	O
Kundera	O
]	O
.	O
 -X-	O
	
I	O
could	O
give	O
you	O
an	O
example	O
for	O
many	O
NoSQL	O
engines	O
(	O
and	O
certainly	O
can	O
for	O
GigaSpaces	B-Entity
)	O
but	O
I	O
do	O
n't	O
know	O
which	O
one	O
you	O
're	O
targeting	O
or	O
why	O
.	O
	
 -X-	O
I	O
am	O
using	O
Spring	B-Entity
Data	I-Entity
Graph	I-Entity
","	O
and	O
the	O
neo4j	B-Entity
","	O
and	O
I	O
have	O
read	O
that	O
composed	O
Id	O
are	O
n't	O
allowed	O
.	O
 -X-	O
	
 -X-	O
Neo4J	B-Entity
is	O
okay	O
","	O
although	O
obviously	O
I	O
prefer	O
our	O
own	O
product	O
.	O
 -X-	O
	
This	O
could	O
be	O
easily	O
modelled	O
with	O
Spring	O
Data	O
Graph	O
(	O
or	O
also	O
with	O
the	O
pure	O
Neo4j	B-Entity
API	O
)	O
CODESNIPPET_JAVA2	O
.	O
	
 -X-	O
The	O
eclipse	O
error	O
is	O
annoying	O
but	O
just	O
a	O
wrong	O
visualization	O
","	O
the	O
AspectJ	B-Entity
team	I-Entity
is	O
in	O
the	O
process	O
of	O
fixing	O
that	O
.	O
 -X-	O
	
Have	O
a	O
look	O
at	O
Kundera	B-Entity
.	O
	
The	O
URL_http	O
:	O
/	O
/	O
appscale.cs.ucsb.edu	O
/	O
[	O
AppScale	B-Entity
]	O
project	O
has	O
decoupled	O
the	O
database	O
backend	O
so	O
that	O
you	O
can	O
potentially	O
run	O
GAE	O
on	O
a	O
variety	O
of	O
databases	O
.	O
	
They	O
currently	O
provide	O
support	O
for	O
URL_http	O
:	O
/	O
/	O
hbase.apache.org	O
/	O
[	O
HBase	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
www.hypertable.org	O
/	O
[	O
Hypertable	B-Entity
]	O
(	O
URL_https	O
:	O
/	O
/	O
launchpad.net	O
/	O
appscale	O
[	O
ref	O
]	O
)	O
.	O
	
AppScale	B-Entity
is	O
open	O
source	O
and	O
lets	O
you	O
run	O
your	O
GAE	O
app	O
on	O
EC2	O
or	O
your	O
own	O
cluster	O
.	O
	
 -X-	O
Strange	O
as	O
this	O
sounds	O
","	O
but	O
there	O
is	O
a	O
great	O
deal	O
of	O
similarity	O
between	O
AppEngine	B-Entity
Datastore	O
and	O
the	O
Lotus	O
Domino	O
:	O
you	O
may	O
need	O
to	O
write	O
an	O
abstraction	O
layer	O
to	O
handle	O
the	O
two	O
APIs	O
","	O
but	O
the	O
capabilities	O
are	O
quite	O
similar	O
.	O
 -X-	O
	
Now	O
I	O
saw	O
there	O
is	O
a	O
dedicated	O
javax.crypto	B-Entity
package	O
inside	O
the	O
SDK	O
.	O
	
 -X-	O
To	O
answer	O
the	O
question	O
asked	O
:	O
javax.crypto	B-Entity
deals	O
with	O
low	O
level	O
crypto	O
:	O
encryption	O
","	O
decryption	O
","	O
and	O
hashing	O
.	O
 -X-	O
	
It	O
's	O
where	O
the	O
Cipher	B-Entity
class	O
is	O
defined	O
.	O
	
 -X-	O
java.security	B-Entity
deals	O
with	O
everything	O
else	O
:	O
key	O
management	O
","	O
certtificate	O
management	O
","	O
and	O
signatures	O
.	O
 -X-	O
	
 -X-	O
Sun	O
provides	O
some	O
","	O
and	O
BouncyCastle	B-Entity
is	O
another	O
good	O
one	O
.	O
 -X-	O
	
 -X-	O
I	O
investigated	O
into	O
javax.crypto	B-Entity
package	O
and	O
found	O
that	O
there	O
are	O
certain	O
Cipher	O
names	O
","	O
like	O
PBEWithMD5AndDES	O
or	O
PBEWithSHA1AndDESede	O
which	O
provides	O
encryption	O
upto	O
56	O
bit	O
and	O
80	O
bit	O
(	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
DESede	O
[	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
DESede	O
]	O
)	O
.	O
 -X-	O
	
The	O
URL_http	O
:	O
/	O
/	O
www.hoozi.com	O
/	O
Articles	O
/	O
AESEncryption.htm	B-Entity
[	O
algorithm	O
]	O
is	O
simple	O
.	O
	
 -X-	O
There	O
are	O
other	O
options	O
like	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Twofish	B-Entity
[	O
Twofish	O
]	O
","	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Blowfish_	B-Entity
(	O
cipher	O
)	O
[	O
Blowfish	O
]	O
etc	O
also	O
.	O
 -X-	O
	
Note	O
that	O
Twofish	B-Entity
can	O
be	O
considered	O
as	O
an	O
advanced	O
version	O
of	O
Blowfish	B-Entity
.	O
	
 -X-	O
Heads	O
Up	O
:	O
It	O
's	O
BounCycastle	B-Entity
","	O
not	O
BounTycastle	B-Entity
.	O
 -X-	O
	
 -X-	O
I	O
'm	O
not	O
a	O
crypto	O
expert	O
by	O
any	O
means	O
(	O
so	O
take	O
this	O
suggestion	O
with	O
a	O
grain	O
of	O
salt	O
)	O
","	O
but	O
I	O
have	O
used	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Blowfish_	B-Entity
(	O
cipher	O
)	O
[	O
Blowfish	O
]	O
before	O
","	O
and	O
I	O
think	O
you	O
can	O
use	O
it	O
for	O
what	O
you	O
need	O
.	O
 -X-	O
	
There	O
is	O
also	O
a	O
newer	O
algorithm	O
by	O
the	O
same	O
guy	O
called	O
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Twofish	B-Entity
[	O
Twofish	O
]	O
.	O
	
Is	O
URL_http	O
:	O
/	O
/	O
bouncycastle.org	O
/	O
java.html	O
[	O
Bouncy-Castle-API	B-Entity
]	O
Thread	O
Safe	O
?	O
	
 -X-	O
You	O
can	O
make	O
a	O
Singleton	B-Entity
factory	O
that	O
delivers	O
encryption	O
objects	O
","	O
but	O
you	O
cant	O
trust	O
them	O
to	O
be	O
thread	O
safe	O
.	O
 -X-	O
	
The	O
J2ME	B-Entity
version	O
is	O
not	O
thread	O
safe	O
.	O
	
 -X-	O
If	O
so	O
","	O
DarkSquid	O
's	O
approach	O
using	O
SecretKeySpec	B-Entity
should	O
work	O
.	O
 -X-	O
	
Does	O
this	O
usage	O
of	O
SecureKey	B-Entity
and	O
PBEKeySpec	B-Entity
produce	O
a	O
Password-based	O
key	O
that	O
is	O
RFC2898-compliant	O
?	O
	
 -X-	O
That	O
means	O
that	O
in	O
the	O
example	O
above	O
","	O
you	O
'd	O
store	O
the	O
result	O
of	O
tmp.getEncoded	B-Entity
(	I-Entity
)	I-Entity
as	O
the	O
hash	O
.	O
 -X-	O
	
@	O
ArchimedesTrajano	O
Not	O
with	O
the	O
Java	O
Cryptography	B-Entity
Architecture	O
.	O
	
8	O
byte	O
salt	O
is	O
generated	O
in	O
setupEncrypt	B-Entity
(	I-Entity
)	I-Entity
using	O
SecureRandom	B-Entity
(	I-Entity
)	I-Entity
	
Consider	O
using	O
the	O
URL_http	O
:	O
/	O
/	O
docs.spring.io	O
/	O
spring-	O
security	O
/	O
site	O
/	O
docs	O
/	O
3.1.x	O
/	O
reference	O
/	O
crypto.html	O
[	O
Spring-Security-Crypto-Module	B-Entity
]	O
	
 -X-	O
This	O
involves	O
creating	O
your	O
own	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
security	O
/	O
Provider.html	O
[	O
CODETERM2	O
]	O
subclass	O
and	O
using	O
it	O
with	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
a	O
pi	O
/	O
javax	O
/	O
crypto	O
/	O
Cipher.html	O
#	O
getInstance	O
%	O
28java.lang.String	B-Entity
","	O
%	O
20java.security.Pr	B-Entity
ovider	I-Entity
%	O
29	O
[	O
CODETERM3	O
]	O
.	O
 -X-	O
	
Maybe	O
you	O
should	O
try	O
the	O
URL_http	O
:	O
/	O
/	O
www.bouncycastle.org	O
/	O
[	O
BouncyCastle	B-Entity
]	O
crypto	O
provider	O
.	O
	
tagging**	O
from	O
URL_http	O
:	O
/	O
/	O
www.alchemyapi.com	O
/	O
api	O
/	O
[	O
AlchemyAPI	B-Entity
]	O
.	O
 -X-	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
alias-i.com	O
/	O
lingpipe	O
/	O
[	O
LingPipe	B-Entity
]	O
","	O
URL_http	O
:	O
/	O
/	O
opennlp.sourceforge.net	O
/	O
projects.html	O
[	O
OpenNLP	O
]	O
","	O
etc	O
.	O
 -X-	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
www.opencalais.com	O
/	O
[	O
OpenCalais	B-Entity
]	O
is	O
a	O
free	O
service	O
","	O
for	O
example	O
;	O
many	O
commercial	O
ones	O
exist	O
.	O
 -X-	O
	
 -X-	O
I	O
have	O
looked	O
on	O
few	O
NLPs	O
like	O
URL_http	O
:	O
/	O
/	O
alias-i.com	O
/	O
lingpipe	O
/	O
index.html	O
[	O
LingPipe	B-Entity
]	O
","	O
OpenPL	O
","	O
URL_http	O
:	O
/	O
/	O
nlp.stanford.edu	O
/	O
index.shtml	O
[	O
Stanford-NLP	O
]	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
natty.joestelmach.com	O
/	O
[	O
Natty	B-Entity
]	O
is	O
a	O
really	O
good	O
replacement	O
for	O
JChronic	B-Entity
.	O
	
 -X-	O
You	O
can	O
use	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
samtingleff	O
/	O
jchronic	O
[	O
JChronic	B-Entity
]	O
","	O
the	O
Java	O
port	O
of	O
URL_http	O
:	O
/	O
/	O
chronic.rubyforge.org	O
/	O
[	O
Chronic	B-Entity
]	O
.	O
 -X-	O
	
Have	O
you	O
tried	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
samtingleff	O
/	O
jchronic	O
[	O
jchronic	B-Entity
]	O
?	O
	
I	O
would	O
suggest	O
using	O
URL_http	O
:	O
/	O
/	O
uima.apache.org	O
/	O
[	O
UIMA	B-Entity
]	O
with	O
URL_http	O
:	O
/	O
/	O
opennlp.sourceforge.net	O
/	O
projects.html	O
[	O
OpenNLP	O
]	O
connectors	O
and	O
same	O
hand	O
made	O
regexp	O
rules	O
.	O
	
URL_http	O
:	O
/	O
/	O
www.dcs.shef.ac.uk	O
/	O
~sam	O
/	O
simmetrics.html	O
[	O
SimMetrics	B-Entity
]	O
URL_http	O
:	O
/	O
/	O
ngramj.sourceforge.net	O
/	O
[	O
NGramJ	B-Entity
]	O
.	O
	
 -X-	O
Commons	O
Lang	O
has	O
an	O
implementation	O
of	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
lang	O
/	O
apido	O
cs	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
lang3	O
/	O
StringUtils.html	O
#	O
getLevenshteinDistance	O
%	O
28java.lan	O
g.CharSequence	O
","	O
%	O
20java.lang.CharSequence	B-Entity
%	O
29	O
[	O
Levenshtein-distance	O
]	O
.	O
 -X-	O
	
Commons	O
Codec	O
has	O
an	O
implementation	O
of	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-codec	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
codec	O
/	O
language	O
/	O
Soundex.html	O
[	O
soundex	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-	O
codec	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
codec	O
/	O
language	O
/	O
Metaphone.html	O
[	O
metaphone	B-Entity
]	O
.	O
	
To	O
Lucene	O
I	O
would	O
add	O
SOLR	O
URL_http	O
:	O
/	O
/	O
wiki.apache.org	O
/	O
solr	O
/	O
AnalyzersTokenizersTokenFilters	B-Entity
[	O
URL_http	O
:	O
/	O
/	O
wiki.apache.org	O
/	O
solr	O
/	O
AnalyzersTokenizersTokenFilters	O
]	O
.	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
lucene.apache.org	O
/	O
[	O
Apache-Lucene	B-Entity
]	O
is	O
the	O
only	O
way	O
","	O
I	O
think	O
.	O
 -X-	O
	
I	O
would	O
suggest	O
you	O
look	O
at	O
DataInputStream	B-Entity
and	O
DataOutputStream	B-Entity
.	O
	
If	O
you	O
have	O
a	O
defined	O
file	O
layout	O
with	O
different	O
content	O
you	O
should	O
consider	O
to	O
use	O
a	O
template	O
engine	O
like	O
URL_http	O
:	O
/	O
/	O
freemarker.sourceforge.net	O
/	O
[	O
FreeMarker	B-Entity
]	O
or	O
URL_http	O
:	O
/	O
/	O
velocity.apache.org	O
/	O
[	O
Velocity	B-Entity
]	O
to	O
generate	O
your	O
files.You	O
can	O
define	O
templates	O
here	O
which	O
will	O
be	O
filled	O
with	O
your	O
dynamic	O
content	O
which	O
you	O
have	O
to	O
provide	O
.	O
	
A	O
library	O
which	O
helps	O
for	O
basic	O
file	O
manipulation	O
is	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
io	O
/	O
[	O
Apache-Commons-IO	B-Entity
]	O
.	O
	
 -X-	O
Many	O
libraries	O
help	O
you	O
to	O
do	O
this	O
but	O
the	O
file	O
format	O
is	O
fixed	O
:	O
JSON	B-Entity
:	O
URL_http	O
:	O
/	O
/	O
jackson.codehaus.org	O
/	O
[	O
Jackson	O
]	O
","	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
google-gson	O
/	O
[	O
GSON	B-Entity
]	O
XML	O
:	O
URL_http	O
:	O
/	O
/	O
jaxb.java.net	O
/	O
[	O
JAXB	B-Entity
]	O
.	O
 -X-	O
	
 -X-	O
There	O
's	O
plenty	O
of	O
CSV	O
libraries	O
out	O
there	O
","	O
including	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
sandbox	O
/	O
csv	O
/	O
[	O
Apache-	B-Entity
Commons-CSV	I-Entity
]	O
.	O
 -X-	O
	
java.net	B-Entity
versus	O
java.nio	B-Entity
.	O
	
At	O
what	O
point	O
is	O
it	O
better	O
to	O
switch	O
from	O
java.net	B-Entity
to	O
java.nio	B-Entity
?	O
	
Avoid	O
NIO	B-Entity
unless	O
you	O
have	O
a	O
good	O
reason	O
to	O
use	O
it	O
.	O
	
 -X-	O
Something	O
else	O
to	O
consider	O
is	O
that	O
if	O
you	O
want	O
to	O
use	O
SSL	O
","	O
NIO	B-Entity
makes	O
it	O
extremely	O
painful	O
.	O
 -X-	O
	
java.net	B-Entity
will	O
require	O
one	O
thread	O
per	O
socket	O
.	O
	
 -X-	O
java.nio	B-Entity
is	O
much	O
more	O
efficient	O
","	O
but	O
can	O
be	O
hairy	O
to	O
code	O
around	O
.	O
 -X-	O
	
 -X-	O
If	O
it	O
's	O
relatively	O
few	O
(	O
say	O
","	O
<	O
100	O
)	O
","	O
I	O
'd	O
go	O
with	O
java.net	B-Entity
.	O
 -X-	O
	
The	O
number	O
of	O
connections	O
you	O
're	O
talking	O
about	O
tells	O
me	O
you	O
should	O
use	O
java.net	B-Entity
.	O
	
Packages	O
like	O
URL_http	O
:	O
/	O
/	O
netty.io	O
/	O
[	O
netty.io	B-Entity
]	O
will	O
almost	O
always	O
get	O
you	O
more	O
reliable	O
and	O
flexible	O
code	O
with	O
fewer	O
lines	O
of	O
code	O
than	O
a	O
hand-crafted	O
solution	O
will	O
.	O
	
Found	O
a	O
good	O
related	O
topic	O
here	O
:	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
questions	O
/	O
921262	O
/	O
how-to-download-and-save-a-file-from-internet-using-javaMight	B-Entity
give	O
that	O
a	O
try	O
tonight	O
when	O
I	O
get	O
home	O
:	O
)	O
.	O
	
Update	O
:	O
the	O
high	O
CPU	O
usage	O
was	O
due	O
to	O
a	O
while	O
(	O
)	O
loop	O
on	O
the	O
ExecutorService	B-Entity
isTerminated	I-Entity
(	I-Entity
)	I-Entity
method	O
call	O
.	O
	
My	O
immediate	O
thought	O
for	O
best	O
performance	O
on	O
Windows	O
would	O
be	O
to	O
use	O
URL_http	O
:	O
/	O
/	O
msdn.microsoft.com	O
/	O
en-us	O
/	O
library	O
/	O
aa365198	O
%	O
28VS.85	O
%	O
29.aspx	O
[	O
IO-	B-Entity
completions-ports	I-Entity
]	O
.	O
	
Read	O
/	O
convert	O
an	O
InputStream	B-Entity
to	O
a	O
String	O
.	O
	
 -X-	O
For	O
instance	O
","	O
System.console	B-Entity
(	I-Entity
)	I-Entity
.readLine	I-Entity
(	I-Entity
)	I-Entity
(	O
new	O
in	O
Java	O
6	O
)	O
is	O
pretty	O
easy	O
.	O
 -X-	O
	
Same	O
with	O
BufferedReader	B-Entity
's	I-Entity
readLine	I-Entity
(	I-Entity
)	I-Entity
.	O
	
 -X-	O
I	O
learned	O
this	O
trick	O
from	O
URL_http	O
:	O
/	O
/	O
weblogs.java.net	O
/	O
blog	O
/	O
pat	O
/	O
archive	O
/	O
2004	O
/	O
10	O
/	O
stupid_scanner_1.html	O
[	O
 -X-	O
 -X-	O
Stupid-Scanner-tricks	B-Entity
 -X-	O
 -X-	O
]	O
article	O
.	O
 -X-	O
	
 -X-	O
The	O
reason	O
it	O
works	O
is	O
because	O
URL_http	O
:	O
/	O
/	O
download.oracle.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
util	O
/	O
Scanner.html	O
[	O
Scanner	B-Entity
]	O
iterates	O
over	O
tokens	O
in	O
the	O
stream	O
","	O
and	O
in	O
this	O
case	O
we	O
separate	O
tokens	O
using	O
 -X-	O
 -X-	O
beginning	O
of	O
the	O
input	O
boundary	O
 -X-	O
 -X-	O
(	O
\A	O
)	O
thus	O
giving	O
us	O
only	O
one	O
token	O
for	O
the	O
entire	O
contents	O
of	O
the	O
stream	O
.	O
 -X-	O
	
Hat	O
tip	O
goes	O
also	O
to	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
users	O
/	O
68127	O
/	O
jacob-gabrielson	O
[	O
Jacob	B-Entity
","	O
]	O
who	O
once	O
pointed	O
me	O
to	O
the	O
said	O
article	O
.	O
 -X-	O
	
Thanks	O
to	O
a	O
suggestion	O
from	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
users	O
/	O
101272	O
/	O
patrick	O
[	O
Patrick	B-Entity
]	O
","	O
made	O
the	O
function	O
more	O
robust	O
when	O
handling	O
an	O
empty	O
input	O
stream	O
.	O
 -X-	O
	
String	O
convertStreamToString	B-Entity
.	O
 -X-	O
	
null	O
)	O
return	O
 -X-	O
 -X-	O
 -X-	O
 -X-	O
;	O
right	O
at	O
the	O
beginning	O
of	O
the	O
method	O
;	O
I	O
believe	O
this	O
answer	O
needs	O
to	O
be	O
updated	O
to	O
better	O
handle	O
null	O
inputStreams	B-Entity
.	O
 -X-	O
	
 -X-	O
@	O
ArchimedesTrajano	O
does	O
IOUtils.copy	B-Entity
(	O
inputStream	O
","	O
writer	O
","	O
encoding	O
)	O
deal	O
with	O
CR	O
/	O
LF	O
translations	O
better	O
?	O
 -X-	O
	
 -X-	O
For	O
Java	O
7	O
you	O
can	O
close	O
in	O
a	O
try-with	O
:	O
try	O
(	O
java.util.Scanner	B-Entity
s	O
	
new	O
java.util.Scanner	B-Entity
(	O
is	O
)	O
)	O
{	O
return	O
s.useDelimiter	O
(	O
 -X-	O
 -X-	O
\\\A	O
 -X-	O
 -X-	O
)	O
.hasNext	O
(	O
)	O
?	O
 -X-	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
io	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
comm	O
ons	O
/	O
io	O
/	O
IOUtils.html	O
#	O
copy	O
(	O
java.io.InputStream	B-Entity
","	O
%	O
20java.io.Writer	B-Entity
","	O
%	O
20java.lang.St	B-Entity
ring	I-Entity
)	O
.	O
 -X-	O
	
 -X-	O
Or	O
read	O
all	O
bytes	O
and	O
use	O
new	O
String	B-Entity
(	I-Entity
bytes	I-Entity
","	I-Entity
charset	I-Entity
)	I-Entity
?	O
 -X-	O
	
should	O
be	O
using	O
IOUtils.copy	B-Entity
(	I-Entity
inputStream	I-Entity
","	I-Entity
writer	I-Entity
","	I-Entity
encoding	I-Entity
)	I-Entity
;	O
unless	O
you	O
really	O
","	O
	
 -X-	O
Or	O
in	O
this	O
case	O
","	O
IOUtils.toString	B-Entity
(	I-Entity
inputStream	I-Entity
","	I-Entity
encoding	I-Entity
)	I-Entity
.	O
 -X-	O
	
I	O
think	O
the	O
below	O
answer	O
(	O
IOUtils.toString	B-Entity
(	I-Entity
)	I-Entity
)	O
is	O
simpler	O
since	O
there	O
is	O
no	O
need	O
for	O
a	O
StringWriter	O
.	O
	
IOUtils.toString	B-Entity
is	O
deprecated	O
.	O
	
 -X-	O
Also	O
","	O
there	O
is	O
a	O
method	O
that	O
only	O
take	O
a	O
inputStream	B-Entity
argument	O
","	O
if	O
you	O
are	O
find	O
with	O
the	O
default	O
encoding	O
.	O
 -X-	O
	
To	O
save	O
anyone	O
the	O
hassle	O
of	O
Googling	O
-	O
org.apache.commons	B-Entity
commons-io	O
1.3.2	O
.	O
	
 -X-	O
Also	O
little	O
improvement	O
would	O
be	O
to	O
use	O
apache	O
io	O
(	O
or	O
other	O
)	O
constant	O
for	O
character	O
encoding	O
instead	O
of	O
using	O
plain	O
string	O
literal	O
-	O
eg	O
:	O
IOUtils.toString	B-Entity
(	O
myInputStream	O
","	O
Charsets.UTF_8	O
)	O
;	O
.	O
 -X-	O
	
If	O
you	O
are	O
using	O
Google-Collections	O
/	O
Guava	B-Entity
you	O
could	O
do	O
the	O
following	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
new	O
InputStreamReader	B-Entity
(	O
stream	O
","	O
 -X-	O
 -X-	O
UTF-8	O
 -X-	O
 -X-	O
)	O
.	O
 -X-	O
	
 -X-	O
@	O
plasma147	O
Instead	O
of	O
downvoting	O
","	O
consider	O
editing	O
the	O
example	O
(	O
I	O
just	O
submitted	O
that	O
","	O
adding	O
Closeables.closeQuietly	B-Entity
(	I-Entity
stream	I-Entity
)	I-Entity
;	O
)	O
.	O
 -X-	O
	
 -X-	O
Crashed	O
in	O
Android	O
with	O
OutOfMemory	B-Entity
error	O
on	O
the	O
 -X-	O
 -X-	O
.write	O
 -X-	O
 -X-	O
line	O
","	O
every	O
time	O
","	O
for	O
short	O
strings	O
.	O
 -X-	O
	
 -X-	O
just	O
as	O
a	O
side	O
note	O
","	O
the	O
original	O
readFully	O
method	O
I	O
have	O
in	O
my	O
code	O
does	O
not	O
return	O
String	O
","	O
it	O
returns	O
byte	O
[	O
]	O
for	O
a	O
more	O
general	O
purpose	O
functionality	O
.	O
 -X-	O
	
Is	O
n't	O
there	O
a	O
reader.close	B-Entity
(	I-Entity
)	I-Entity
missing	O
?	O
	
Do	O
n't	O
forget	O
to	O
mention	O
that	O
there	O
's	O
a	O
more	O
preferable	O
constructor	O
in	O
InputStreamReader	B-Entity
that	O
takes	O
a	O
CharSet	O
.	O
	
 -X-	O
As	O
an	O
alternative	O
to	O
the	O
Commons	O
libraries	O
","	O
Google	O
's	O
excellent	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
guava-libraries	O
/	O
[	O
guava-libraries	B-Entity
]	O
let	O
you	O
do	O
this	O
fairly	O
concisely	O
;	O
given	O
an	O
_InputStream_	O
named	O
_inputStream_	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
Changed	O
to	O
use	O
StringBuilder	B-Entity
.	O
	
If	O
you	O
ca	O
n't	O
use	O
Commons	B-Entity
IO	I-Entity
(	O
FileUtils	O
/	O
IOUtils	O
/	O
CopyUtils	O
)	O
here	O
's	O
an	O
example	O
using	O
a	O
BufferedReader	B-Entity
to	O
read	O
the	O
file	O
line	O
by	O
line	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
or	O
if	O
you	O
want	O
raw	O
speed	O
I	O
'd	O
propose	O
a	O
variation	O
on	O
what	O
Paul	O
de	O
Vrieze	O
suggested	O
(	O
which	O
avoids	O
using	O
a	O
StringWriter	B-Entity
(	O
which	O
uses	O
a	O
StringBuffer	B-Entity
internally	O
)	O
:	O
CODESNIPPET_JAVA2	O
.	O
	
 -X-	O
In	O
order	O
to	O
make	O
your	O
code	O
work	O
","	O
I	O
had	O
to	O
use	O
this.getClass	B-Entity
(	I-Entity
)	I-Entity
.getClassLoader	I-Entity
(	I-Entity
)	I-Entity
.getResourceAsStream	I-Entity
(	I-Entity
)	I-Entity
(	O
using	O
Eclipse	O
with	O
a	O
maven	O
project	O
)	O
.	O
 -X-	O
	
here	O
s	O
is	O
your	O
InputStream	B-Entity
object	O
which	O
will	O
get	O
convert	O
into	O
String	O
:	O
)	O
.	O
	
 -X-	O
Since	O
you	O
're	O
using	O
buffer	O
variable	O
locally	O
with	O
no	O
chance	O
of	O
being	O
shared	O
across	O
multiple	O
threads	O
you	O
should	O
consider	O
changing	O
its	O
type	O
to	O
StringBuilder	B-Entity
","	O
to	O
avoid	O
the	O
overhead	O
of	O
(	O
useless	O
)	O
synchronization	O
.	O
 -X-	O
	
 -X-	O
Please	O
note	O
","	O
according	O
to	O
Java	O
docs	O
","	O
the	O
available	B-Entity
(	I-Entity
)	I-Entity
method	O
might	O
not	O
work	O
with	O
InputStream	O
but	O
always	O
works	O
with	O
BufferedInputStream.In	O
case	O
you	O
do	O
n't	O
want	O
to	O
use	O
available	O
(	O
)	O
method	O
we	O
can	O
always	O
use	O
the	O
below	O
code	O
CODESNIPPET_JAVA2	O
.	O
 -X-	O
	
 -X-	O
The	O
whole	O
point	O
of	O
using	O
InputStream	B-Entity
is	O
","	O
that	O
a	O
)	O
you	O
do	O
n't	O
know	O
the	O
length	O
of	O
the	O
_complete_	O
stream	O
(	O
which	O
bails	O
out	O
anything	O
depending	O
on	O
available	O
)	O
and	O
b	O
)	O
the	O
stream	O
can	O
be	O
anything	O
-	O
a	O
file	O
","	O
a	O
socket	O
","	O
something	O
internal	O
(	O
which	O
bails	O
out	O
anything	O
based	O
on	O
File.size	O
(	O
)	O
)	O
.	O
 -X-	O
	
You	O
can	O
use	O
apache	O
commons.In	O
the	O
IOUtils	B-Entity
you	O
can	O
find	O
the	O
toString	O
metod	O
with	O
3	O
helpfull	O
implementations	O
.	O
	
JDK	O
7	O
/	O
8	O
answer	O
that	O
closes	O
the	O
stream	O
and	O
still	O
throws	O
an	O
IOException	B-Entity
:	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
First	O
","	O
you	O
have	O
to	O
know	O
the	O
encoding	O
of	O
string	O
that	O
you	O
want	O
to	O
convert.Because	O
the	O
java.io.InputStream	B-Entity
operates	O
an	O
underlying	O
array	O
of	O
bytes	O
","	O
however	O
","	O
a	O
string	O
is	O
composed	O
by	O
a	O
array	O
of	O
character	O
that	O
needs	O
an	O
encoding	O
","	O
e	O
","	O
g	O
.	O
 -X-	O
	
Do	O
n't	O
be	O
burnt	O
by	O
misunderstanding	O
what	O
available	B-Entity
(	I-Entity
)	I-Entity
gives	O
you	O
.	O
	
 -X-	O
As	O
mentioned	O
above	O
","	O
available	B-Entity
(	I-Entity
)	I-Entity
is	O
not	O
the	O
way	O
to	O
go	O
.	O
 -X-	O
	
I	O
get	O
java.io.StreamCorruptedException	B-Entity
:	O
invalid	O
stream	O
header	O
.	O
	
 -X-	O
ObjectInputStream	B-Entity
is	O
about	O
deserialization	O
","	O
and	O
the	O
stream	O
have	O
to	O
respect	O
the	O
serialization	O
protocol	O
to	O
work	O
","	O
which	O
may	O
not	O
always	O
TRUE	O
in	O
the	O
context	O
of	O
this	O
question	O
.	O
 -X-	O
	
 -X-	O
I	O
have	O
currently	O
evaluating	O
Java	O
based	O
security	O
frameworks	O
","	O
I	O
am	O
a	O
Spring	O
3	O
user	O
so	O
it	O
seemed	O
that	O
SpringSecurity	B-Entity
would	O
be	O
the	O
right	O
Choice	O
","	O
but	O
Spring	O
security	O
seems	O
to	O
suffer	O
from	O
excessive	O
complexity	O
","	O
it	O
certainly	O
does	O
not	O
seem	O
like	O
it	O
is	O
making	O
security	O
easier	O
to	O
implement	O
","	O
Shiro	O
seems	O
to	O
be	O
much	O
more	O
coherent	O
and	O
easier	O
to	O
understand	O
.	O
 -X-	O
	
 -X-	O
Sure	O
","	O
they	O
have	O
done	O
things	O
to	O
reduce	O
complexity	O
","	O
like	O
creating	O
custom	O
XML	O
namespaces	O
to	O
reduce	O
the	O
quantity	O
of	O
XML	O
configuration	O
","	O
but	O
for	O
me	O
","	O
these	O
do	O
n't	O
address	O
_my_	O
personal	O
fundamental	O
issue	O
with	O
Spring	B-Entity
Security	I-Entity
:	O
its	O
names	O
and	O
concepts	O
are	O
often	O
confusing	O
in	O
general	O
to	O
me	O
.	O
 -X-	O
	
 -X-	O
The	O
second	O
you	O
start	O
using	O
Shiro	B-Entity
though	O
","	O
you	O
just	O
'get	O
it	O
'	O
.	O
 -X-	O
	
 -X-	O
For	O
example	O
","	O
how	O
do	O
you	O
hash+salt	O
a	O
password	O
and	O
base64	O
encode	O
it	O
in	O
Java	O
or	O
Spring	B-Entity
Security	I-Entity
?	O
 -X-	O
	
Neither	O
are	O
as	O
simple	O
and	O
intuitive	O
as	O
Shiro	B-Entity
's	O
solution	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
Just	O
the	O
Shiro	B-Entity
jar	O
.	O
	
You	O
'll	O
also	O
find	O
using	O
Shiro	B-Entity
's	O
filter	O
chain	O
definitions	O
are	O
probably	O
the	O
easiest	O
way	O
to	O
define	O
general	O
filter	O
chains	O
and	O
web-based	O
security	O
rules	O
ever	O
!	O
	
 -X-	O
Finally	O
","	O
Shiro	B-Entity
offers	O
extreme	O
'pluggability	O
'	O
as	O
well	O
.	O
 -X-	O
	
You	O
'll	O
see	O
that	O
you	O
can	O
configure	O
and	O
/	O
or	O
replace	O
just	O
about	O
anything	O
because	O
of	O
Shiro	B-Entity
's	O
POJO	O
/	O
injection-friendly	O
architecture	O
.	O
	
Shiro	B-Entity
defaults	O
almost	O
everything	O
to	O
sane	O
defaults	O
and	O
you	O
can	O
override	O
or	O
configure	O
only	O
what	O
you	O
need	O
.	O
	
 -X-	O
For	O
some	O
it	O
will	O
be	O
Shiro	B-Entity
","	O
for	O
others	O
it	O
will	O
be	O
Spring	B-Entity
Security	I-Entity
.	O
 -X-	O
	
 -X-	O
Shiro	B-Entity
works	O
great	O
in	O
Spring	O
environments	O
","	O
so	O
I	O
would	O
say	O
choose	O
based	O
on	O
which	O
of	O
the	O
two	O
you	O
enjoy	O
more	O
and	O
makes	O
the	O
most	O
sense	O
to	O
you	O
.	O
 -X-	O
	
For	O
more	O
on	O
Shiro	B-Entity
's	O
Spring	O
integration	O
:	O
URL_http	O
:	O
/	O
/	O
shiro.apache.org	O
/	O
spring.html	O
[	O
URL_http	O
:	O
/	O
/	O
shiro.apache.org	O
/	O
spring.html	O
]	O
.	O
	
I	O
've	O
read	O
all	O
this	O
before	O
start	O
using	O
shiro	B-Entity
.	O
	
Shiro	B-Entity
annotations	O
seem	O
to	O
suffer	O
some	O
issues	O
in	O
spring.Information	O
on	O
how	O
to	O
solve	O
it	O
are	O
very	O
har	O
and	O
there	O
are	O
various	O
posts	O
in	O
stackoverflow	O
(	O
1	O
or	O
2	O
posted	O
by	O
myself	O
)	O
which	O
most	O
of	O
the	O
time	O
found	O
no	O
answers	O
.	O
	
 -X-	O
I	O
was	O
seriously	O
thinking	O
i	O
should	O
go	O
spring	B-Entity
security	I-Entity
despite	O
it	O
said	O
complication	O
","	O
with	O
that	O
i	O
'm	O
sure	O
i	O
can	O
have	O
people	O
to	O
point	O
me	O
to	O
the	O
right	O
direction	O
.	O
 -X-	O
	
 -X-	O
I	O
do	O
n't	O
have	O
experience	O
using	O
Shiro	B-Entity
","	O
and	O
I	O
 -X-	O
 -X-	O
partly	O
 -X-	O
 -X-	O
agree	O
with	O
what	O
you	O
said	O
about	O
Spring	B-Entity
Security	I-Entity
.	O
 -X-	O
	
 -X-	O
Prior	O
to	O
Spring	B-Entity
Security	I-Entity
3.x	I-Entity
","	O
Spring	B-Entity
Security	I-Entity
(	O
or	O
Acegi	O
)	O
was	O
very	O
painful	O
to	O
set	O
up	O
.	O
 -X-	O
	
 -X-	O
:	O
)	O
With	O
Spring	B-Entity
Security	I-Entity
3.x	I-Entity
","	O
it	O
has	O
tremendously	O
improved	O
upon	O
.	O
 -X-	O
	
Here	O
's	O
an	O
example	O
of	O
Spring	B-Entity
Security	I-Entity
3.x	I-Entity
of	O
one	O
of	O
my	O
projects	O
:	O
-	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
The	O
beauty	O
of	O
Spring	B-Entity
Security	I-Entity
3.x	I-Entity
is	O
it	O
is	O
extremely	O
configurable	O
","	O
which	O
contributes	O
to	O
one	O
of	O
the	O
main	O
cons	O
:	O
too	O
complicated	O
to	O
understand	O
.	O
 -X-	O
	
The	O
documentation	O
is	O
n't	O
easy	O
to	O
read	O
either	O
because	O
I	O
'm	O
only	O
partially	O
familiar	O
with	O
the	O
some	O
of	O
the	O
terms	O
Spring	B-Entity
Security	I-Entity
used	O
.	O
	
What	O
I	O
really	O
like	O
about	O
Spring	B-Entity
Security	I-Entity
is	O
once	O
it	O
is	O
set	O
up	O
the	O
security	O
is	O
integrated	O
into	O
the	O
project	O
seamlessly	O
.	O
	
Would	O
you	O
like	O
to	O
say	O
something	O
about	O
when	O
it	O
is	O
good	O
to	O
move	O
from	O
container	O
based	O
security	O
to	O
alternatives	O
like	O
shiro	B-Entity
or	O
others	O
?	O
	
 -X-	O
I	O
have	O
tried	O
both	O
shiro	B-Entity
and	O
spring	B-Entity
security	I-Entity
","	O
and	O
I	O
personally	O
feel	O
the	O
shiro	O
is	O
quite	O
easy	O
to	O
understand	O
where	O
as	O
spring	O
security	O
feels	O
complex	O
.	O
 -X-	O
	
 -X-	O
I	O
have	O
yet	O
to	O
figureout	O
how	O
to	O
setup	O
permissions	O
","	O
that	O
I	O
can	O
assign	O
to	O
roles	O
/	O
groups	O
/	O
users	O
in	O
spring	B-Entity
security-	I-Entity
(	O
I	O
think	O
ACL	O
may	O
be	O
the	O
solution	O
)	O
.	O
 -X-	O
	
 -X-	O
With	O
shiro	B-Entity
it	O
was	O
quite	O
easy.I	O
am	O
not	O
expert	O
of	O
spring	B-Entity
security	I-Entity
or	O
shiro	O
","	O
its	O
just	O
my	O
personal	O
experience	O
as	O
user	O
of	O
both	O
.	O
 -X-	O
	
I	O
had	O
been	O
using	O
Spring	B-Entity
Security	I-Entity
(	O
version	O
3.1	O
)	O
for	O
a	O
few	O
months	O
and	O
was	O
quite	O
happy	O
with	O
it	O
.	O
	
JAAS	B-Entity
for	O
human	O
beings	O
.	O
	
I	O
am	O
having	O
a	O
hard	O
time	O
understanding	O
JAAS	B-Entity
.	O
	
Can	O
be	O
implemented	O
using	O
ACEGI	B-Entity
.	O
	
JAAS	B-Entity
is	O
a	O
security	O
framework	O
build	O
for	O
securing	O
things	O
at	O
a	O
much	O
lower	O
level	O
then	O
web-application	O
.	O
	
 -X-	O
However	O
","	O
since	O
Java	O
EE	O
is	O
build	O
on	O
top	O
of	O
Java	O
SE	O
","	O
a	O
few	O
modules	O
from	O
JAAS	B-Entity
was	O
reuses	O
in	O
Java	O
EE	O
security	O
such	O
as	O
the	O
LoginModules	O
and	O
Callbacks	O
.	O
 -X-	O
	
 -X-	O
On	O
the	O
other	O
hand	O
","	O
Acegi	B-Entity
","	O
or	O
now	O
aka	O
Spring	B-Entity
security	I-Entity
","	O
tackles	O
a	O
much	O
higher	O
 -X-	O
 -X-	O
layer	O
 -X-	O
 -X-	O
in	O
the	O
securing	O
web-application	O
problem	O
.	O
 -X-	O
	
It	O
is	O
build	O
on	O
top	O
of	O
Java	O
EE	O
security	O
hence	O
Java	O
SE	O
hence	O
JAAS	B-Entity
.	O
	
 -X-	O
Unless	O
you	O
are	O
looking	O
to	O
secure	O
resources	O
in	O
the	O
Java	O
SE	O
level	O
(	O
classes	O
","	O
System	O
resources	O
)	O
","	O
I	O
do	O
n't	O
see	O
any	O
real	O
use	O
of	O
JAAS	B-Entity
other	O
than	O
the	O
using	O
the	O
common	O
class	O
and	O
interfaces	O
.	O
 -X-	O
	
 -X-	O
Java	O
EE	O
6	O
Tutorial	O
assumes	O
understanding	O
basic	O
security	O
concepts	O
","	O
so	O
a	O
little	O
overview	O
of	O
JAAS	B-Entity
wo	O
n't	O
hurt	O
.	O
 -X-	O
	
Here	O
are	O
some	O
of	O
the	O
links	O
I	O
used	O
to	O
help	O
understand	O
JAAS	B-Entity
:	O
URL_http	O
:	O
/	O
/	O
www.owasp.org	O
/	O
index.php	O
/	O
JAAS_Tomcat_Login_Module	O
[	O
URL_http	O
:	O
/	O
/	O
www.owasp.org	O
/	O
index.php	O
/	O
JAAS_Tomcat_Login_Module	O
]	O
URL_http	O
:	O
/	O
/	O
www.javaworld.com	O
/	O
jw-09-2002	O
/	O
jw-0913-jaas.html	O
[	O
URL_http	O
:	O
/	O
/	O
www.javaworld.com	O
/	O
jw-09-2002	O
/	O
jw-0913-jaas.html	O
]	O
URL_http	O
:	O
/	O
/	O
www.jaasbook.com	O
/	O
[	O
URL_http	O
:	O
/	O
/	O
www.jaasbook.com	O
/	O
]	O
URL_http	O
:	O
/	O
/	O
roneiv.wordpress.com	O
/	O
2008	O
/	O
2	O
/	O
18	O
/	O
jaas-authentication-mechanism-is-	O
it-possible-to-force-j_security_check-to-go-to-a-specific-page	O
/	O
[	O
URL_http	O
:	O
/	O
/	O
roneiv.wordpress.com	O
/	O
2008	O
/	O
2	O
/	O
18	O
/	O
jaas-authentication-mechanism-is-it	O
-	O
possible-to-force-j_security_check-to-go-to-a-specific-page	O
/	O
]	O
Also	O
have	O
a	O
look	O
at	O
the	O
Apache	O
tomcat	O
realms	O
configuration	O
how-to	O
:	O
URL_http	O
:	O
/	O
/	O
tomcat.apache.org	O
/	O
tomcat-6.0-doc	O
/	O
realm-howto.html	O
[	O
URL_http	O
:	O
/	O
/	O
tomcat.apache.org	O
/	O
tomcat-6.0-doc	O
/	O
realm-howto.html	O
]	O
.	O
	
thanks	O
:	O
)	O
jaas	B-Entity
book	O
is	O
really	O
good	O
.	O
	
javax.security	B-Entity
is	O
imho	O
overcomplicated	O
API	O
.	O
	
 -X-	O
Secondly	O
","	O
imho	O
the	O
most	O
simple	O
","	O
setup	O
&	O
go	O
library	O
for	O
JAAS	O
is	O
Jboss	O
URL_http	O
:	O
/	O
/	O
www.jboss.org	O
/	O
picketbox	O
[	O
PicketBox	B-Entity
]	O
.	O
 -X-	O
	
It	O
says	O
how	O
to	O
do	O
authentication	O
and	O
authorization	O
via	O
JBossAuthenticationManager	B-Entity
and	O
JBossAuthorizationManager	B-Entity
...	O
	
is	O
used	O
like	O
this	O
CODETERM1	O
CallbackHandler	B-Entity
is	O
passed	O
to	O
the	O
underlying	O
LoginModules	O
so	O
they	O
may	O
communicate	O
and	O
interact	O
with	O
users	O
-	O
prompting	O
for	O
a	O
username	O
and	O
password	O
via	O
a	O
graphical	O
user	O
interface	O
","	O
for	O
example	O
.	O
 -X-	O
	
\-	O
then	O
you	O
just	O
call	O
lc.login	B-Entity
(	I-Entity
)	I-Entity
;	O
and	O
authenticate	O
the	O
credentials	O
.	O
 -X-	O
	
LoginContext	B-Entity
is	O
populated	O
with	O
the	O
authenticated	O
Subject	O
.	O
	
 -X-	O
However	O
Jboss	B-Entity
picketbox	I-Entity
gives	O
you	O
a	O
really	O
easy	O
way	O
to	O
go	O
","	O
unless	O
you	O
need	O
something	O
specific	O
.	O
 -X-	O
	
 -X-	O
I	O
ca	O
n't	O
speak	O
too	O
much	O
to	O
JAAS	B-Entity
itself	O
","	O
but	O
this	O
URL_http	O
:	O
/	O
/	O
static.springsource.org	O
/	O
spring-security	O
/	O
site	O
/	O
start-here.html	O
[	O
 -X-	O
 -X-	O
suggested-steps	O
 -X-	O
 -X-	O
#NAME?	O
]	O
on	O
Spring	O
Security	O
and	O
URL_http	O
:	O
/	O
/	O
static.springframework.org	O
/	O
spring-security	O
/	O
site	O
/	O
reference.html	O
[	O
the-reference-manual	O
]	O
are	O
both	O
pretty	O
good	O
resources	O
on	O
Spring	B-Entity
Security	I-Entity
-	O
if	O
your	O
setup	O
is	O
anything	O
close	O
to	O
simple	O
","	O
you	O
do	O
n't	O
really	O
need	O
to	O
do	O
much	O
more	O
than	O
read	O
these	O
.	O
 -X-	O
	
 -X-	O
It	O
explains	O
how	O
JASPIC	B-Entity
is	O
the	O
link	O
in	O
Java	O
EE	O
between	O
the	O
Servlet	O
and	O
EJB	O
security	O
models	O
and	O
potentially	O
a	O
JAAS	O
login	O
module	O
","	O
but	O
that	O
in	O
many	O
cases	O
JAAS	B-Entity
'	O
role	O
is	O
reduced	O
to	O
that	O
of	O
a	O
relatively	O
simple	O
username	O
and	O
roles	O
provider	O
in	O
Java	O
EE	O
.	O
 -X-	O
	
 -X-	O
From	O
the	O
same	O
author	O
is	O
URL_http	O
:	O
/	O
/	O
raymondkng.sys-con.com	O
/	O
node	O
/	O
171477	O
[	O
JAAS-	O
in-the-Enterprise	O
]	O
","	O
which	O
is	O
an	O
older	O
article	O
but	O
provides	O
a	O
lot	O
of	O
historical	O
background	O
on	O
why	O
the	O
Java	O
SE	O
(	O
JAAS	B-Entity
)	O
and	O
Java	O
EE	O
models	O
diverged	O
the	O
way	O
they	O
did	O
.	O
 -X-	O
	
The	O
latter	O
two	O
are	O
mainly	O
used	O
by	O
JASPIC	B-Entity
.	O
	
What	O
's	O
the	O
best	O
way	O
to	O
share	O
business	O
object	O
instances	O
between	O
Java	O
web	O
apps	O
using	O
JBoss	B-Entity
and	O
Spring	B-Entity
?	O
	
Then	O
we	O
tried	O
binding	O
the	O
business	O
layer	O
directly	O
to	O
JNDI	B-Entity
.	O
	
 -X-	O
Although	O
Spring	O
did	O
n't	O
offer	O
any	O
method	O
for	O
this	O
","	O
using	O
JNDITemplate	B-Entity
to	O
bind	O
them	O
was	O
also	O
trivial	O
.	O
 -X-	O
	
 -X-	O
But	O
this	O
led	O
to	O
several	O
new	O
problems	O
:	O
1	O
)	O
Security	B-Entity
manager	I-Entity
denies	O
access	O
to	O
RMI	O
classloader	O
","	O
so	O
the	O
client	O
failed	O
once	O
we	O
tried	O
to	O
invoke	O
methods	O
on	O
the	O
JNDI	O
resource	O
.	O
 -X-	O
	
 -X-	O
2	O
)	O
Once	O
the	O
security	O
issues	O
were	O
resolved	O
","	O
JBoss	B-Entity
threw	O
IllegalArgumentException	B-Entity
:	O
object	O
is	O
not	O
an	O
instance	O
of	O
declaring	O
class	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
www.terracotta.org	O
/	O
[	O
Terracotta	B-Entity
]	O
might	O
be	O
a	O
good	O
fit	O
here	O
(	O
disclosure	O
:	O
I	O
am	O
a	O
developer	O
for	O
Terracotta	O
)	O
.	O
	
 -X-	O
As	O
for	O
your	O
business	O
objects	O
","	O
you	O
can	O
use	O
Terracotta	B-Entity
's	O
URL_http	O
:	O
/	O
/	O
www.terracotta.org	O
/	O
web	O
/	O
display	O
/	O
orgsite	O
/	O
Spring+Integration	O
[	O
Spring-	O
integration	O
]	O
to	O
cluster	O
your	O
beans	O
-	O
each	O
web	O
app	O
can	O
share	O
clustered	O
bean	O
instances	O
","	O
and	O
Terracotta	O
keeps	O
the	O
clustered	O
state	O
in	O
synch	O
transparently	O
.	O
 -X-	O
	
You	O
should	O
take	O
a	O
look	O
at	O
the	O
Terracotta	B-Entity
Reference	O
Web	O
Application	O
-	O
Examinator	O
.	O
	
 -X-	O
If	O
you	O
do	O
n't	O
like	O
RMI	O
","	O
Spring	O
offers	O
a	O
few	O
other	O
remoting	O
options	O
-	O
Hessian	B-Entity
","	O
Burlap	B-Entity
","	O
and	O
HttpInvoker	B-Entity
(	O
Spring	O
's	O
custom	O
remoting	O
solution	O
-	O
Java	O
serialization	O
over	O
HTTP	O
)	O
.	O
 -X-	O
	
 -X-	O
We	O
have	O
also	O
tried	O
the	O
JNDI	B-Entity
route	O
","	O
which	O
ends	O
with	O
the	O
need	O
for	O
stubs	O
for	O
all	O
shared	O
interfaces	O
.	O
 -X-	O
	
 -X-	O
Although	O
JMX	O
is	O
definately	O
not	O
meant	O
for	O
this	O
kind	O
of	O
use	O
","	O
we	O
have	O
proven	O
that	O
it	O
can	O
be	O
done	O
-	O
with	O
no	O
code	O
changes	O
and	O
a	O
minimal	O
amount	O
of	O
XML	O
(	O
a	O
big	O
Thank	O
You	O
to	O
Spring	O
for	O
MBeanExporter	B-Entity
and	O
MBeanProxyFactoryBean	B-Entity
)	O
.	O
 -X-	O
	
 -X-	O
I.e.	O
","	O
we	O
have	O
to	O
remove	O
some	O
dependencies	O
from	O
our	O
WARs	O
and	O
move	O
them	O
to	O
server	O
/	O
lib	O
","	O
else	O
we	O
get	O
ClassCastException	B-Entity
when	O
the	O
business	O
layer	O
returns	O
objects	O
from	O
our	O
own	O
domain	O
model	O
.	O
 -X-	O
	
 -X-	O
It	O
's	O
been	O
suggested	O
several	O
times	O
on	O
this	O
thread	O
by	O
myself	O
and	O
others	O
","	O
but	O
have	O
you	O
looked	O
at	O
Terracotta	B-Entity
?	O
 -X-	O
	
 -X-	O
The	O
typical	O
solution	O
is	O
to	O
use	O
EJB	B-Entity
","	O
but	O
I	O
think	O
spring	O
has	O
remoting	O
options	O
built	O
into	O
its	O
stack	O
.	O
 -X-	O
	
Not	O
so	O
if	O
you	O
use	O
Terracotta	B-Entity
.	O
	
Take	O
a	O
look	O
at	O
URL_http	O
:	O
/	O
/	O
www.jboss.org	O
/	O
jbosscache	O
/	O
[	O
JBossCache	B-Entity
]	O
.	O
	
Do	O
n't	O
give	O
wings	O
to	O
rumors.But	O
as	O
an	O
alternative	O
you	O
can	O
use	O
URL_http	O
:	O
/	O
/	O
javafx.com	O
/	O
[	O
JavaFx	B-Entity
]	O
or	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
swt	O
/	O
[	O
swt	O
]	O
or	O
URL_http	O
:	O
/	O
/	O
buoy.sourceforge.net	O
/	O
[	O
buoy	O
]	O
.	O
 -X-	O
	
 -X-	O
It	O
is	O
not	O
Swing	B-Entity
","	O
but	O
rather	O
a	O
planned	O
enhancement	O
to	O
make	O
building	O
Swing	O
applications	O
much	O
easier	O
.	O
 -X-	O
	
That	O
's	O
a	O
very	O
unfortunate	O
name	O
for	O
Swing	B-Entity
.	O
	
 -X-	O
You	O
probably	O
read	O
something	O
about	O
the	O
'Swing	B-Entity
Application	I-Entity
Framework	I-Entity
'	O
","	O
which	O
while	O
_built	O
using_	O
Swing	O
","	O
is	O
not	O
'Swing	O
'	O
.	O
 -X-	O
	
 -X-	O
If	O
you	O
were	O
using	O
SWT	B-Entity
","	O
you	O
can	O
use	O
JFace	B-Entity
as	O
well	O
.	O
 -X-	O
	
 -X-	O
People	O
used	O
to	O
invest	O
lots	O
of	O
effort	O
to	O
get	O
their	O
AWT	B-Entity
applications	O
to	O
work	O
consistently	O
across	O
platforms	O
-	O
for	O
instance	O
","	O
they	O
may	O
try	O
to	O
make	O
calls	O
into	O
native	O
code	O
from	O
Java	O
.	O
 -X-	O
	
 -X-	O
Because	O
AWT	B-Entity
uses	O
native	O
GUI	O
widgets	O
","	O
your	O
OS	O
knows	O
about	O
them	O
and	O
handles	O
putting	O
them	O
in	O
front	O
of	O
each	O
other	O
","	O
etc.	O
","	O
whereas	O
Swing	O
widgets	O
are	O
meaningless	O
pixels	O
within	O
a	O
window	O
from	O
your	O
OS	O
's	O
point	O
of	O
view	O
.	O
 -X-	O
	
Swing	B-Entity
itself	O
handles	O
your	O
widgets	O
'	O
layout	O
and	O
stacking	O
.	O
	
 -X-	O
Mixing	O
AWT	B-Entity
and	O
Swing	B-Entity
is	O
highly	O
unsupported	O
and	O
can	O
lead	O
to	O
ridiculous	O
results	O
","	O
such	O
as	O
native	O
buttons	O
that	O
obscure	O
everything	O
else	O
in	O
the	O
dialog	O
box	O
in	O
which	O
they	O
reside	O
because	O
everything	O
else	O
was	O
created	O
with	O
Swing	O
.	O
 -X-	O
	
 -X-	O
Because	O
Swing	B-Entity
tries	O
to	O
do	O
everything	O
possible	O
in	O
Java	O
other	O
than	O
the	O
very	O
raw	O
graphics	O
routines	O
provided	O
by	O
a	O
native	O
GUI	O
window	O
","	O
it	O
used	O
to	O
incur	O
quite	O
a	O
performance	O
penalty	O
compared	O
to	O
AWT	O
.	O
 -X-	O
	
This	O
made	O
Swing	B-Entity
unfortunately	O
slow	O
to	O
catch	O
on	O
.	O
	
 -X-	O
Today	O
a	O
Swing	B-Entity
application	O
can	O
run	O
fast	O
enough	O
to	O
be	O
serviceable	O
or	O
even	O
zippy	O
","	O
and	O
almost	O
indistinguishable	O
from	O
an	O
application	O
using	O
native	O
widgets	O
.	O
 -X-	O
	
 -X-	O
Finally	O
","	O
you	O
might	O
also	O
want	O
to	O
check	O
out	O
SWT	B-Entity
(	O
the	O
GUI	O
toolkit	O
used	O
for	O
Eclipse	O
","	O
and	O
an	O
alternative	O
to	O
both	O
AWT	B-Entity
and	O
Swing	B-Entity
)	O
","	O
which	O
is	O
somewhat	O
of	O
a	O
return	O
to	O
the	O
AWT	O
idea	O
of	O
accessing	O
native	O
Widgets	O
through	O
Java	O
.	O
 -X-	O
	
 -X-	O
Um	O
...	O
having	O
done	O
some	O
pretty	O
extensive	O
Swing	B-Entity
across	O
multiple	O
platforms	O
","	O
I	O
can	O
tell	O
you	O
that	O
it	O
very	O
much	O
is	O
not	O
the	O
same	O
across	O
platforms	O
.	O
 -X-	O
	
 -X-	O
actually	O
Swing	B-Entity
uses	O
a	O
Model-Delegate	O
approach	O
","	O
which	O
is	O
derived	O
from	O
the	O
MVC	O
approach	O
","	O
where	O
in	O
the	O
View	O
and	O
Controller	O
are	O
combined	O
for	O
a	O
Delegate	O
structure	O
.	O
 -X-	O
	
Basically	O
AWT	B-Entity
came	O
first	O
and	O
is	O
a	O
set	O
of	O
heavyweight	O
UI	O
components	O
(	O
meaning	O
they	O
are	O
wrappers	O
for	O
operating	O
system	O
objects	O
)	O
whereas	O
Swing	O
built	O
on	O
top	O
of	O
AWT	O
with	O
a	O
richer	O
set	O
of	O
lightweight	O
components	O
.	O
	
 -X-	O
Any	O
serious	O
Java	O
UI	O
work	O
is	O
done	O
in	O
Swing	O
not	O
AWT	B-Entity
","	O
which	O
was	O
primarily	O
used	O
for	O
applets	O
.	O
 -X-	O
	
 -X-	O
@	O
Pacerier	O
he	O
was	O
talking	O
about	O
AWT	B-Entity
","	O
not	O
SWT	B-Entity
.	O
 -X-	O
	
 -X-	O
As	O
far	O
as	O
when	O
AWT	B-Entity
may	O
be	O
more	O
useful	O
than	O
Swing	B-Entity
-	O
	
some	O
people	O
prefer	O
the	O
native	O
look	O
of	O
AWT	B-Entity
over	O
Swing	O
's	O
'not	O
quite	O
there	O
'	O
platform	O
skins	O
.	O
 -X-	O
	
Swing	B-Entity
is	O
part	O
of	O
the	O
java	O
foundation	O
classes	O
.	O
	
Swing	B-Entity
components	O
are	O
platform-independent	O
.	O
	
Swing	B-Entity
components	O
are	O
lightweight	O
components	O
because	O
swing	O
sits	O
on	O
the	O
top	O
of	O
awt	O
.	O
	
AWT	B-Entity
is	O
called	O
the	O
abstract	O
window	O
tool	O
.	O
	
AWT	B-Entity
components	O
are	O
platform-dependent	O
.	O
	
AWT	B-Entity
components	O
are	O
heavyweight	O
components	O
.	O
	
AWT	B-Entity
occupies	O
more	O
memory	O
space2	O
.	O
	
AWT	B-Entity
is	O
platform	O
dependent3	O
.	O
	
 -X-	O
AWT	B-Entity
require	O
javax.awt	B-Entity
package	O
	
Swing	B-Entity
occupies	O
less	O
memory	O
space2	O
.	O
	
Swing	B-Entity
component	O
is	O
platform	O
independent3	O
.	O
	
Swing	B-Entity
requires	O
javax.swing	B-Entity
package	O
.	O
	
Difference	O
between	O
Swing	B-Entity
and	O
AWTSeveral	B-Entity
consequences	O
result	O
from	O
this	O
difference	O
between	O
AWT	O
and	O
Swing	O
.	O
	
 -X-	O
AWTis	B-Entity
a	O
thin	O
layer	O
of	O
code	O
on	O
top	O
of	O
the	O
OS	O
","	O
whereas	O
Swing	O
is	O
much	O
larger.Swing	O
also	O
has	O
very	O
much	O
richer	O
functionality	O
.	O
 -X-	O
	
 -X-	O
Using	O
AWT	B-Entity
","	O
you	O
have	O
toimplement	O
a	O
lot	O
of	O
things	O
yourself	O
","	O
while	O
Swing	B-Entity
has	O
them	O
built	O
in	O
.	O
 -X-	O
	
 -X-	O
ForGUI-intensive	O
work	O
","	O
AWT	B-Entity
feels	O
very	O
primitive	O
to	O
work	O
with	O
compared	O
to	O
Swing.Because	O
Swing	O
implements	O
GUI	O
functionality	O
itself	O
rather	O
than	O
relying	O
on	O
thehost	O
OS	O
","	O
it	O
can	O
offer	O
a	O
richer	O
environment	O
on	O
all	O
platforms	O
Java	O
runs	O
on.AWT	O
is	O
more	O
limited	O
in	O
supplying	O
the	O
same	O
functionality	O
on	O
all	O
platformsbecause	O
not	O
all	O
platforms	O
implement	O
the	O
same-looking	O
controls	O
in	O
the	O
sameways.Swing	B-Entity
components	O
are	O
called	O
 -X-	O
 -X-	O
lightweight	O
 -X-	O
 -X-	O
because	O
they	O
do	O
not	O
require	O
anative	O
OS	O
object	O
to	O
implement	O
their	O
functionality	O
.	O
 -X-	O
	
 -X-	O
JDialog	B-Entity
and	O
JFrame	B-Entity
areheavyweight	O
","	O
because	O
they	O
do	O
have	O
a	O
peer	O
.	O
 -X-	O
	
 -X-	O
So	O
components	O
like	O
JButton	B-Entity
","	O
JTextArea	B-Entity
","	O
etc.	O
","	O
are	O
lightweight	O
because	O
they	O
do	O
not	O
have	O
an	O
OS	O
peer	O
.	O
 -X-	O
	
swing	B-Entity
component	O
is	O
platform	O
independent	O
.	O
 -X-	O
	
swing	B-Entity
require	O
javax.swing	B-Entity
package	O
.	O
 -X-	O
	
awt	B-Entity
require	O
javax.awt	B-Entity
package	O
.	O
 -X-	O
	
 -X-	O
 -X-	O
 -X-	O
I	O
'm	O
using	O
Jackson	B-Entity
Json	I-Entity
on	O
an	O
android	O
app	O
","	O
which	O
is	O
incredibly	O
fast	O
","	O
and	O
come	O
a	O
very	O
long	O
way	O
since	O
this	O
question	O
was	O
asked	O
/	O
answered	O
.	O
 -X-	O
	
 -X-	O
One	O
of	O
the	O
shortcomings	O
of	O
the	O
json.org	B-Entity
library	O
is	O
that	O
it	O
accepts	O
unquoted	O
strings	O
","	O
breaking	O
the	O
JSON	O
specification	O
.	O
 -X-	O
	
@	O
ThorbjrnRavnAndersen	O
-	O
consider	O
editing	O
top	O
answer	O
for	O
Java	O
JSON	B-Entity
library	O
with	O
your	O
comment	O
.	O
	
I	O
notice	O
that	O
there	O
is	O
also	O
a	O
library	O
called	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
google-gson	O
/	O
[	O
google-gson	B-Entity
]	O
.	O
	
Gson	B-Entity
is	O
a	O
Java	O
library	O
that	O
can	O
be	O
used	O
to	O
convert	O
Java	O
Objects	O
into	O
its	O
JSON	B-Entity
representation	O
.	O
 -X-	O
	
It	O
can	O
also	O
be	O
used	O
to	O
convert	O
a	O
JSON	B-Entity
string	O
to	O
an	O
equivalent	O
Java	O
object	O
.	O
	
Gson	B-Entity
can	O
work	O
with	O
arbitrary	O
Java	O
objects	O
including	O
pre-existing	O
objects	O
that	O
you	O
do	O
not	O
have	O
source-code	O
of	O
.	O
	
There	O
are	O
a	O
few	O
open-source	O
projects	O
that	O
can	O
convert	O
Java	O
objects	O
to	O
JSON	B-Entity
.	O
 -X-	O
	
Gson	B-Entity
considers	O
both	O
of	O
these	O
as	O
very	O
important	O
design	O
goals	O
.	O
	
 -X-	O
Check	O
out	O
if	O
your	O
version	O
of	O
Java	O
already	O
contains	O
JSON	B-Entity
API	O
-	O
see	O
URL_http	O
:	O
/	O
/	O
www.oracle.com	O
/	O
technetwork	O
/	O
articles	O
/	O
java	O
/	O
json-1973242.html	O
[	O
Java-	O
API-for-JSON-Processing	O
","	O
#NAME?	O
]	O
and	O
URL_https	O
:	O
/	O
/	O
jcp.org	O
/	O
en	O
/	O
jsr	O
/	O
detail	O
?	O
id=353	O
[	O
JSR-353	O
]	O
.	O
 -X-	O
	
Gson	B-Entity
is	O
great	O
.	O
	
The	O
problem	O
with	O
Gson	B-Entity
(	O
at	O
least	O
in	O
versions	O
up	O
to	O
1.4	O
)	O
is	O
that	O
it	O
is	O
not	O
able	O
to	O
handle	O
circular	O
references	O
.	O
	
This	O
is	O
very	O
common	O
in	O
some	O
scenarios	O
(	O
JPA	O
/	O
JDO	O
objects	O
being	O
serialized	O
to	O
JSON	B-Entity
...	O
)	O
.	O
	
 -X-	O
FWIW	O
","	O
XStream	O
with	O
Badgerfish	O
(	O
jettison	O
)	O
does	O
handle	O
them	O
(	O
since	O
it	O
's	O
full	O
object-serialization	O
framework	O
","	O
although	O
resulting	O
json	O
looks	O
ugly	O
","	O
as	O
its	O
xml	O
based	O
","	O
just	O
converts	O
to	O
json	B-Entity
via	O
badgerfish	O
)	O
.	O
 -X-	O
	
GSon	B-Entity
uses	O
the	O
same	O
design	O
protocol	O
JSON.org	B-Entity
went	O
with	O
when	O
developing	O
JSONObject	B-Entity
and	O
JSONArray	B-Entity
.	O
	
I	O
do	O
n't	O
see	O
much	O
similarities	O
between	O
the	O
two	O
(	O
which	O
I	O
think	O
is	O
good	O
thing	O
for	O
GSON	B-Entity
)	O
.	O
	
 -X-	O
Gson	B-Entity
is	O
great	O
","	O
and	O
has	O
high	O
quality	O
documentation	O
too	O
.	O
 -X-	O
	
 -X-	O
GSON	B-Entity
is	O
awesome	O
","	O
brings	O
a	O
python	O
like	O
feel	O
to	O
Java	O
","	O
well	O
","	O
atleast	O
for	O
JSON	B-Entity
purposes	O
.	O
 -X-	O
	
 -X-	O
When	O
I	O
wanted	O
to	O
use	O
JSONLib	B-Entity
;	O
I	O
found	O
out	O
that	O
the	O
jar	O
file	O
that	O
is	O
available	O
in	O
URL_http	O
:	O
/	O
/	O
json-lib.sourceforge.net	O
has	O
some	O
class	O
dependencies	O
and	O
it	O
needs	O
to	O
be	O
used	O
by	O
some	O
other	O
jar	O
files	O
","	O
that	O
contain	O
that	O
classes	O
.	O
 -X-	O
	
So	O
I	O
used	O
Gson	B-Entity
.	O
	
 -X-	O
Incredibly	O
","	O
GSON	B-Entity
types	O
[	O
do	O
n't	O
implement	O
Serializable	O
nor	O
Cloneable	O
...	O
]	O
(	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
google-gson	O
/	O
issues	O
/	O
detail	O
?	O
id=485	O
)	O
.	O
 -X-	O
	
 -X-	O
GSON	B-Entity
is	O
a	O
good	O
library	O
","	O
we	O
have	O
been	O
using	O
it	O
in	O
our	O
project	O
from	O
past	O
2years	O
","	O
and	O
it	O
works	O
fine	O
.	O
 -X-	O
	
Gson	B-Entity
is	O
very	O
slow	O
.	O
	
 -X-	O
However	O
","	O
Jackson	B-Entity
performed	O
better	O
for	O
us	O
.	O
 -X-	O
	
 -X-	O
I	O
've	O
used	O
URL_http	O
:	O
/	O
/	O
json-lib.sourceforge.net	O
/	O
[	O
JSONLib	B-Entity
]	O
","	O
URL_http	O
:	O
/	O
/	O
flexjson.sourceforge.net	O
/	O
[	O
FlexJSON	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
google-gson	O
/	O
[	O
Gson	B-Entity
]	O
all	O
with	O
great	O
success	O
.	O
 -X-	O
	
JSONLib	B-Entity
is	O
awesome	O
as	O
a	O
core	O
JSON	O
library	O
when	O
you	O
just	O
want	O
to	O
process	O
all	O
elements	O
of	O
a	O
JSON	B-Entity
.	O
 -X-	O
	
FlexJSON	B-Entity
shines	O
with	O
its	O
deepSerialize	O
method	O
that	O
can	O
properly	O
handle	O
serializing	O
all	O
get	O
methods	O
presented	O
in	O
a	O
bean	O
obtained	O
from	O
Hibernate	O
(	O
lazy	O
loaded	O
)	O
.	O
 -X-	O
	
Gson	B-Entity
seems	O
to	O
be	O
the	O
best	O
API	O
to	O
use	O
when	O
you	O
want	O
to	O
convert	O
a	O
json	O
to	O
a	O
Java	O
class	O
.	O
 -X-	O
	
 -X-	O
Gson	B-Entity
fully	O
populates	O
all	O
	
low	O
level	O
values	O
by	O
calling	O
all	O
set	O
methods	O
for	O
all	O
data	O
found	O
in	O
the	O
JSON	B-Entity
.	O
 -X-	O
	
 -X-	O
 -X-	O
 -X-	O
Gson	B-Entity
fully	O
populates	O
all	O
low	O
level	O
values	O
by	O
calling	O
all	O
set	O
methods	O
for	O
all	O
data	O
found	O
in	O
the	O
JSON	B-Entity
.	O
 -X-	O
 -X-	O
 -X-	O
	
 -X-	O
Actually	O
","	O
Gson	B-Entity
does	O
not	O
use	O
set	O
methods	O
when	O
deserializing	O
(	O
nor	O
does	O
it	O
use	O
get	O
methods	O
when	O
serializing	O
)	O
.	O
 -X-	O
	
 -X-	O
Instead	O
","	O
Gson	B-Entity
uses	O
reflection	O
to	O
directly	O
reference	O
the	O
fields	O
.	O
 -X-	O
	
 -X-	O
When	O
I	O
wanted	O
to	O
use	O
JSONLib	B-Entity
;	O
I	O
found	O
out	O
that	O
the	O
jar	O
file	O
that	O
is	O
available	O
in	O
URL_http	O
:	O
/	O
/	O
json-lib.sourceforge.net	O
has	O
some	O
class	O
dependencies	O
and	O
it	O
needs	O
to	O
be	O
used	O
by	O
some	O
other	O
jar	O
files	O
","	O
that	O
contain	O
that	O
classes	O
.	O
 -X-	O
	
So	O
I	O
used	O
Gson	B-Entity
.	O
	
 -X-	O
I	O
ca	O
n't	O
_truly_	O
recommend	O
this	O
","	O
because	O
I	O
've	O
never	O
used	O
it	O
","	O
but	O
URL_http	O
:	O
/	O
/	O
jackson.codehaus.org	O
/	O
[	O
Jackson	B-Entity
]	O
sounds	O
promising	O
.	O
 -X-	O
	
 -X-	O
The	O
main	O
reason	O
I	O
mention	O
it	O
is	O
that	O
the	O
author	O
","	O
Tatu	O
Saloranta	O
","	O
has	O
done	O
some	O
really	O
great	O
stuff	O
(	O
including	O
URL_http	O
:	O
/	O
/	O
woodstox.codehaus.org	O
/	O
[	O
Woodstox	B-Entity
]	O
","	O
the	O
StAX	O
implementation	O
that	O
I	O
use	O
)	O
.	O
 -X-	O
	
A	O
year	O
ago	O
I	O
started	O
actually	O
using	O
Jackson	B-Entity
and	O
I	O
can	O
confirm	O
that	O
it	O
is	O
awesome	O
:	O
-	O
)	O
.	O
 -X-	O
	
Jackson	B-Entity
is	O
amazingly	O
customizable	O
.	O
	
 -X-	O
I	O
second	O
that	O
","	O
Jackson	B-Entity
is	O
a	O
wonderful	O
piece	O
of	O
work-	O
much	O
more	O
efficient	O
.	O
 -X-	O
	
negative	O
)	O
feedback	O
about	O
Jackson	B-Entity
?	O
	
I	O
tried	O
Jackson	B-Entity
when	O
I	O
was	O
doing	O
interoperability	O
between	O
.NET	O
and	O
Java	O
and	O
dates	O
was	O
a	O
mess	O
for	O
me	O
.	O
	
I	O
do	O
n't	O
understand	O
why	O
it	O
's	O
done	O
the	O
way	O
it	O
's	O
done	O
in	O
Jackson	B-Entity
.	O
	
 -X-	O
The	O
idea	O
behind	O
JSON	B-Entity
is	O
that	O
I	O
should	O
just	O
be	O
able	O
to	O
shuffle	O
data	O
around	O
","	O
I	O
do	O
n't	O
have	O
to	O
care	O
about	O
date	O
formats	O
","	O
timezones	O
and	O
all	O
that	O
crap	O
.	O
 -X-	O
	
 -X-	O
JSON	B-Entity
does	O
not	O
have	O
a	O
Date	O
type	O
(	O
just	O
strings	O
","	O
numbers	O
","	O
booleans	O
)	O
","	O
and	O
each	O
lib	O
therefore	O
has	O
to	O
define	O
its	O
own	O
convention	O
.	O
 -X-	O
	
 -X-	O
One	O
thing	O
that	O
might	O
be	O
interesting	O
wrt	O
Jackson	O
is	O
the	O
performance	O
aspect	O
(	O
Jackson	O
is	O
specifically	O
designed	O
as	O
a	O
very	O
high	O
performance	O
JSON	B-Entity
package	O
)	O
","	O
see	O
[	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
thrift-protobuf-compare	O
/	O
wiki	O
/	O
Benchmarking	O
]	O
and	O
[	O
URL_http	O
:	O
/	O
/	O
www.cowtowncoder.com	O
/	O
blog	O
/	O
archives	O
/	O
2009	O
/	O
9	O
/	O
entry_326.html	O
]	O
.	O
 -X-	O
	
 -X-	O
I	O
've	O
just	O
ran	O
into	O
some	O
problems	O
with	O
Jackson	O
","	O
Hibernate	O
and	O
Spring	O
","	O
however	O
","	O
I	O
do	O
n't	O
know	O
if	O
this	O
issue	O
is	O
related	O
to	O
Jackson	B-Entity
or	O
Spring	O
or	O
Hibernate	O
...	O
see	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
questions	O
/	O
3325387	O
/	O
infinite-recursion-with	O
-	O
jackson-json-and-hibernate-jpa-issue	O
.	O
 -X-	O
	
 -X-	O
user268098	O
:	O
I	O
think	O
most	O
Java	O
JSON	B-Entity
handling	O
libraries	O
have	O
issues	O
with	O
cyclic	O
dependencies	O
","	O
and	O
most	O
have	O
some	O
ways	O
to	O
either	O
exclude	O
just	O
references	O
","	O
or	O
handle	O
them	O
with	O
annotations	O
(	O
I	O
added	O
an	O
answer	O
in	O
the	O
other	O
question	O
to	O
point	O
out	O
one	O
way	O
to	O
do	O
that	O
with	O
Jackson	O
)	O
.	O
 -X-	O
	
Jackson	B-Entity
is	O
also	O
easy	O
to	O
use	O
.	O
	
 -X-	O
I	O
have	O
used	O
Jackson	B-Entity
a	O
lot	O
","	O
and	O
it	O
blows	O
the	O
competition	O
away	O
.	O
 -X-	O
	
 -X-	O
FYI	O
","	O
it	O
appears	O
that	O
Jackson	B-Entity
has	O
moved	O
to	O
a	O
new	O
home	O
within	O
codehaus.org	O
.	O
 -X-	O
	
I	O
second	O
Jackson	B-Entity
in	O
favour	O
of	O
FlexJson	O
;	O
FlexJson	O
lacks	O
a	O
default	O
Jax-RS	O
provider	O
and	O
does	O
n't	O
correctly	O
parse	O
generics	O
(	O
like	O
SomeObject	O
)	O
.Also	O
Jackson	O
has	O
very	O
elegant	O
configuration	O
(	O
once	O
you	O
find	O
out	O
how	O
to	O
plug	O
it	O
in	O
!	O
)	O
	
and	O
mixins	B-Entity
allow	O
great	O
flexibility	O
!	O
.	O
	
I	O
wanted	O
to	O
represent	O
arbitrary	O
JSON	B-Entity
as	O
nearest	O
Java	O
equivalent	O
.	O
	
For	O
me	O
that	O
is	O
a	O
HashMap	B-Entity
/	O
ArrayList	B-Entity
Object	O
.	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
json-simple	O
/	O
[	O
json-simple	O
]	O
was	O
excellent	O
:	O
tiny	O
","	O
with	O
a	O
simple	O
API	O
that	O
generates	O
HashMap	B-Entity
/	O
ArrayList	B-Entity
with	O
a	O
single	O
call	O
.	O
 -X-	O
	
 -X-	O
FWIW	O
","	O
almost	O
all	O
Java	O
JSON	B-Entity
libraries	O
support	O
this	O
conversion	O
mode	O
","	O
including	O
GSON	B-Entity
","	O
Jackson	B-Entity
and	O
Genson	B-Entity
.	O
 -X-	O
	
 -X-	O
I	O
have	O
no	O
personal	O
experience	O
with	O
the	O
following	O
approach	O
","	O
but	O
it	O
could	O
make	O
sense	O
to	O
consider	O
:	O
URL_http	O
:	O
/	O
/	O
xstream.codehaus.org	O
/	O
index.html	O
[	O
XStream	B-Entity
]	O
(	O
xml	O
<	O
-	O
>	O
java	O
data	O
binding	O
)	O
with	O
URL_http	O
:	O
/	O
/	O
jettison.codehaus.org	O
/	O
[	O
Jettison	B-Entity
]	O
driver	O
(	O
xml	O
<	O
-	O
>	O
json	O
mapper	O
)	O
","	O
more	O
details	O
are	O
available	O
URL_http	O
:	O
/	O
/	O
xstream.codehaus.org	O
/	O
json-	O
tutorial.html	O
[	O
here	O
]	O
.	O
 -X-	O
	
JAXB	B-Entity
2	I-Entity
also	O
has	O
support	O
for	O
JSON	O
serialization	O
using	O
Jettison	O
.	O
	
 -X-	O
Actually	O
","	O
any	O
XML	O
package	O
that	O
can	O
use	O
Stax	O
API	O
can	O
use	O
Jettison	O
--	O
JAXB	O
does	O
","	O
so	O
there	O
's	O
no	O
extra	O
work	O
involved	O
(	O
same	O
is	O
mostly	O
TRUE	O
for	O
XStream	B-Entity
too	O
","	O
although	O
it	O
may	O
have	O
some	O
additional	O
support	O
)	O
.	O
 -X-	O
	
I	O
found	O
XSteam	B-Entity
useful	O
when	O
converting	O
Objects	O
back	O
and	O
forth	O
between	O
Java	O
&	O
XML	O
or	O
JSON	O
with	O
the	O
Jettison	O
driver	O
.	O
	
 -X-	O
If	O
you	O
want	O
to	O
influence	O
the	O
representation	O
in	O
XML	O
/	O
JSON	B-Entity
to	O
a	O
larger	O
degree	O
than	O
just	O
naming	O
tags	O
and	O
ignore	O
properties	O
","	O
you	O
'll	O
be	O
better	O
of	O
using	O
one	O
of	O
the	O
other	O
libraries	O
mentioned	O
above	O
.	O
 -X-	O
	
Gson	B-Entity
can	O
also	O
be	O
used	O
to	O
serialize	O
arbitrarily	O
complex	O
objects	O
.	O
	
Gson	B-Entity
will	O
automatically	O
convert	O
collections	O
to	O
JSON	O
arrays	O
.	O
	
Gson	B-Entity
can	O
serialize	O
private	O
fields	O
and	O
automatically	O
ignores	O
transient	O
fields	O
.	O
	
 -X-	O
While	O
deserializing	O
","	O
Gson	B-Entity
can	O
automatically	O
convert	O
JSON	B-Entity
arrays	O
to	O
collections	O
or	O
arrays	O
.	O
 -X-	O
	
Gson	B-Entity
uses	O
the	O
specified	O
class	O
as	O
the	O
primary	O
specification	O
for	O
deserialization	O
.	O
	
 -X-	O
So	O
","	O
any	O
extra	O
fields	O
available	O
in	O
the	O
JSON	B-Entity
stream	O
are	O
ignored	O
.	O
 -X-	O
	
You	O
can	O
also	O
extend	O
Gson	B-Entity
's	O
default	O
serialization	O
and	O
/	O
or	O
deserialization	O
behavior	O
by	O
registering	O
custom	O
type	O
adapters	O
.	O
	
I	O
've	O
been	O
meaning	O
to	O
try	O
URL_http	O
:	O
/	O
/	O
flexjson.sourceforge.net	O
/	O
[	O
Flexjson	B-Entity
]	O
.	O
	
 -X-	O
The	O
json.org	B-Entity
library	O
does	O
pretty	O
well	O
with	O
serializing	O
basic	O
beans	O
with	O
reflection	O
","	O
but	O
does	O
n't	O
have	O
these	O
advanced	O
features	O
.	O
 -X-	O
	
I	O
like	O
FlexJSON	B-Entity
as	O
well	O
and	O
even	O
modified	O
it	O
to	O
be	O
compatible	O
with	O
Microsoft	O
's	O
JSON	O
serializer	O
really	O
easily	O
.	O
	
You	O
may	O
try	O
using	O
GSON.It	B-Entity
's	O
downloadable	O
at	O
URL_http	O
:	O
/	O
/	O
google-	O
gson.googlecode.com	O
/	O
files	O
/	O
google-gson-1.4-release.zip	O
[	O
URL_http	O
:	O
/	O
/	O
google	O
-	O
gson.googlecode.com	O
/	O
files	O
/	O
google-gson-1.4-release.zip	O
]	O
Quite	O
simple	O
to	O
use	O
actually.I	O
used	O
it	O
to	O
parse	O
JSON	O
results	O
from	O
Yelp	O
and	O
there	O
is	O
a	O
simple	O
example	O
here	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
Hi	O
","	O
based	O
on	O
ur	O
experience	O
","	O
is	O
the	O
GSON	B-Entity
support	O
JDK1.4	O
by	O
any	O
chance	O
?	O
 -X-	O
	
 -X-	O
I	O
recommend	O
URL_http	O
:	O
/	O
/	O
code.alibabatech.com	O
/	O
jira	O
/	O
browse	O
/	O
FASTJSON	O
[	O
fastjson	B-Entity
]	O
","	O
just	O
as	O
its	O
name	O
","	O
really	O
fast	O
.	O
 -X-	O
	
FWIW	O
I	O
did	O
n't	O
much	O
care	O
for	O
the	O
www.json.org	B-Entity
parser	O
either	O
.	O
	
JSON	B-Entity
Tools	O
looks	O
good	O
too	O
.	O
	
The	O
following	O
generalized	O
recursive	O
code	O
uses	O
my	O
parser	O
to	O
parse	O
a	O
JSON	B-Entity
file	O
into	O
a	O
 -X-	O
 -X-	O
DataStruct	O
 -X-	O
 -X-	O
-	O
essentially	O
a	O
map	O
of	O
lists	O
(	O
Note	O
that	O
DataStruct	O
and	O
Callback	O
are	O
objects	O
from	O
another	O
package	O
which	O
are	O
not	O
published	O
with	O
this	O
parser	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
 -X-	O
crtmbrcbk.invoke	B-Entity
(	O
crtprm	O
","	O
psr	O
","	O
tgt	O
","	O
nam	O
","	O
psr.getMemberValue	O
(	O
)	O
)	O
;	O
What	O
are	O
you	O
","	O
Polish	O
?	O
 -X-	O
	
I	O
liked	O
URL_http	O
:	O
/	O
/	O
sourceforge.net	O
/	O
projects	O
/	O
json2java	B-Entity
/	O
[	O
J2J	O
--	O
#NAME?	O
]	O
from	O
Sourceforge	O
.	O
	
Really	O
easy	O
to	O
map	O
JSON	B-Entity
to	O
almost	O
any	O
java	O
object	O
by	O
only	O
annotating	O
the	O
class	O
using	O
JsonElement	O
and	O
then	O
passing	O
the	O
java	O
and	O
class	O
to	O
JsonReader	O
like	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
I	O
will	O
add	O
one	O
more	O
tip	O
for	O
excelent	O
JSON	B-Entity
<	O
-	O
>	O
JAVA	O
binding	O
lib	O
PoJSON	O
","	O
it	O
is	O
written	O
specifically	O
for	O
the	O
URL_http	O
:	O
/	O
/	O
netbeans.org	O
[	O
NetBeans-IDE	O
]	O
(	O
by	O
Petr	O
Hrebejk	O
)	O
and	O
thus	O
it	O
is	O
used	O
in	O
production	O
on	O
large	O
project	O
.	O
 -X-	O
	
 -X-	O
It	O
is	O
easy	O
to	O
use	O
in	O
any	O
project	O
","	O
it	O
is	O
just	O
not	O
placed	O
on	O
the	O
web	O
as	O
a	O
separate	O
project	O
(	O
afaik	O
)	O
","	O
however	O
it	O
is	O
in	O
a	O
separate	O
package	O
 -X-	O
 -X-	O
org.codeviation	B-Entity
 -X-	O
 -X-	O
here	O
:	O
URL_http	O
:	O
/	O
/	O
hg.netbeans.org	O
/	O
main	O
/	O
file	O
/	O
9609b899e64d	O
/	O
kenai	O
/	O
src	O
/	O
org	O
/	O
codeviation	O
[	O
URL_http	O
:	O
/	O
/	O
hg.netbeans.org	O
/	O
main	O
/	O
file	O
/	O
9609b899e64d	O
/	O
kenai	O
/	O
src	O
/	O
org	O
/	O
codeviation	O
]	O
.	O
 -X-	O
	
I	O
've	O
used	O
URL_http	O
:	O
/	O
/	O
jettison.codehaus.org	O
/	O
[	O
Jettison	B-Entity
]	O
and	O
it	O
works	O
well	O
.	O
	
A	O
nice	O
new	O
library	O
for	O
Java	O
is	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
serotonin-json	O
/	O
[	O
Serotonin-JSON	B-Entity
]	O
.	O
	
I	O
have	O
developed	O
an	O
Add-on	O
for	O
Android	O
's	O
in-built	O
JSON	B-Entity
Parser	O
(	O
or.json	O
.	O
	
which	O
helps	O
to	O
convert	O
JSON	B-Entity
to	O
Java	O
Object-	O
URL_http	O
:	O
/	O
/	O
prasanta-	O
paul.blogspot.com	O
/	O
2011	O
/	O
4	O
/	O
json-to-java-bean-conversion-for.html	O
[	O
http	O
:	O
/	O
/	O
prasanta-paul.blogspot.com	O
/	O
2011	O
/	O
4	O
/	O
json-to-java-bean-conversion-for.html	O
]	O
.	O
 -X-	O
	
Converting	O
JSON	B-Entity
to	O
Java	O
.	O
	
I	O
want	O
to	O
be	O
able	O
to	O
access	O
properties	O
from	O
a	O
JSON	B-Entity
string	O
within	O
my	O
Java	O
action	O
method	O
.	O
	
In	O
this	O
string	O
every	O
JSON	O
object	O
contains	O
an	O
array	O
of	O
other	O
JSON	B-Entity
objects	O
.	O
	
The	O
intention	O
is	O
to	O
extract	O
a	O
list	O
of	O
IDs	O
where	O
any	O
given	O
object	O
possessing	O
a	O
group	O
property	O
that	O
contains	O
other	O
JSON	B-Entity
objects	O
.	O
	
I	O
looked	O
at	O
Google	O
's	O
Gson	B-Entity
as	O
a	O
potential	O
JSON	B-Entity
plugin	O
.	O
	
Can	O
anyone	O
offer	O
some	O
form	O
of	O
guidance	O
as	O
to	O
how	O
I	O
can	O
generate	O
Java	O
from	O
this	O
JSON	B-Entity
string	O
?	O
	
_I	O
looked	O
at	O
Google	O
's	O
Gson	B-Entity
as	O
a	O
potential	O
JSON	B-Entity
plugin	O
.	O
 -X-	O
	
Can	O
anyone	O
offer	O
some	O
form	O
of	O
guidance	O
as	O
to	O
how	O
I	O
can	O
generate	O
Java	O
from	O
this	O
JSON	B-Entity
string	O
?	O
_	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
google-gson	O
/	O
[	O
Google-Gson	O
]	O
supports	O
generics	O
and	O
nested	O
beans	O
.	O
	
The	O
CODETERM1	O
in	O
JSON	B-Entity
represents	O
an	O
array	O
and	O
should	O
map	O
to	O
a	O
Java	O
collection	O
such	O
as	O
URL_http	O
:	O
/	O
/	O
docs.oracle.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
util	O
/	O
List.html	O
[	O
CODETERM2	O
]	O
or	O
just	O
a	O
plain	O
Java	O
array	O
.	O
	
The	O
CODETERM3	O
in	O
JSON	B-Entity
represents	O
an	O
object	O
and	O
should	O
map	O
to	O
a	O
Java	O
URL_http	O
:	O
/	O
/	O
docs.oracle.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
util	O
/	O
Map.html	O
[	O
CODETERM4	O
]	O
or	O
just	O
some	O
JavaBean	B-Entity
class	O
.	O
	
You	O
have	O
a	O
JSON	B-Entity
object	O
with	O
several	O
properties	O
of	O
which	O
the	O
CODETERM5	O
property	O
represents	O
an	O
array	O
of	O
nested	O
objects	O
of	O
the	O
very	O
same	O
type	O
.	O
	
This	O
can	O
be	O
parsed	O
with	O
Gson	B-Entity
the	O
following	O
way	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
Just	O
have	O
a	O
suitable	O
JavaBean	B-Entity
and	O
call	O
URL_http	O
:	O
/	O
/	O
google-gson.googlecode.com	O
/	O
svn	O
/	O
tags	O
/	O
1.3	O
/	O
docs	O
/	O
javadocs	O
/	O
com	O
/	O
google	O
/	O
gson	O
/	O
Gson	O
.	O
	
 -X-	O
html	O
#	O
fromJson	O
%	O
28java.lang.String	B-Entity
","	O
%	O
20java.lang.Class	B-Entity
%	O
29	O
[	O
CODETERM6	O
]	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
json.org	O
/	O
[	O
Json.org	B-Entity
]	O
-	O
Introduction	O
to	O
JSON	O
	
URL_https	O
:	O
/	O
/	O
sites.google.com	O
/	O
site	O
/	O
gson	O
/	O
gson-user-guide	O
[	O
Gson-User-Guide	B-Entity
]	O
-	O
Introduction	O
to	O
Gson	O
.	O
 -X-	O
	
 -X-	O
Thanks	O
BalusC	O
","	O
I	O
used	O
Gson	B-Entity
and	O
the	O
concept	O
is	O
quite	O
simple	O
to	O
grasp	O
.	O
 -X-	O
	
 -X-	O
While	O
GSON	B-Entity
has	O
reasonable	O
feature	O
set	O
","	O
I	O
thought	O
performance	O
was	O
sort	O
of	O
weak	O
spot	O
(	O
as	O
per	O
[	O
URL_http	O
:	O
/	O
/	O
www.cowtowncoder.com	O
/	O
blog	O
/	O
archives	O
/	O
2009	O
/	O
9	O
/	O
entry_326.html	O
]	O
)	O
As	O
to	O
example	O
:	O
I	O
thought	O
GSON	O
did	O
not	O
really	O
need	O
setters	O
","	O
and	O
was	O
based	O
on	O
fields	O
.	O
 -X-	O
	
 -X-	O
It	O
is	O
fast	O
enough	O
","	O
sure	O
if	O
you	O
see	O
what	O
it	O
all	O
can	O
do	O
with	O
javabeans	B-Entity
","	O
nested	O
javabeans	O
and	O
generics	O
.	O
 -X-	O
	
The	O
javabean	B-Entity
getters	O
/	O
setters	O
have	O
other	O
purposes	O
in	O
other	O
layers	O
and	O
does	O
not	O
slowdown	O
so	O
I	O
would	O
just	O
keep	O
them	O
there	O
.	O
	
 -X-	O
I	O
just	O
commented	O
on	O
reference	O
to	O
expected	O
good	O
performance.Feature-set	O
wise	O
Jackson	B-Entity
handles	O
all	O
the	O
same	O
nesting	O
","	O
layering	O
","	O
generics	O
","	O
so	O
that	O
's	O
not	O
where	O
speed	O
difference	O
comes	O
from.Having	O
getters	O
and	O
setters	O
does	O
not	O
impact	O
performance	O
in	O
any	O
measurable	O
way	O
(	O
for	O
packages	O
I	O
am	O
aware	O
of	O
)	O
","	O
so	O
definitely	O
can	O
have	O
them	O
there	O
.	O
 -X-	O
	
Bewaaaaare	O
of	O
Gson	B-Entity
!	O
	
Use	O
XStream..	B-Entity
	
 -X-	O
Note	O
that	O
URL_http	O
:	O
/	O
/	O
wiki.fasterxml.com	O
/	O
JacksonHome	O
[	O
Jackson	B-Entity
]	O
fixes	O
these	O
issues	O
","	O
and	O
is	O
URL_https	O
:	O
/	O
/	O
github.com	O
/	O
eishay	O
/	O
jvm-serializers	O
/	O
wiki	O
[	O
faster	O
]	O
than	O
GSON	B-Entity
.	O
 -X-	O
	
I	O
find	O
jackson	B-Entity
or	O
simple	O
json	B-Entity
much	O
easier	O
to	O
use	O
then	O
gson	B-Entity
.	O
	
 -X-	O
Oddly	O
","	O
the	O
only	O
decent	O
JSON	B-Entity
processor	O
mentioned	O
so	O
far	O
has	O
been	O
GSON	B-Entity
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
wiki.fasterxml.com	O
/	O
JacksonHome	O
[	O
Jackson	B-Entity
]	O
--	O
powerful	O
data	O
binding	O
(	O
JSON	O
to	O
/	O
from	O
POJOs	O
)	O
","	O
streaming	O
(	O
ultra	O
fast	O
)	O
","	O
tree	O
model	O
(	O
convenient	O
for	O
untyped	O
access	O
)	O
	
URL_http	O
:	O
/	O
/	O
flexjson.sourceforge.net	O
/	O
[	O
Flex-JSON	B-Entity
]	O
--	O
highly	O
configurable	O
serialization	O
EDIT	O
(	O
Aug	O
/	O
2013	O
)	O
:	O
One	O
more	O
to	O
consider	O
:	O
	
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
genson	O
/	O
[	O
Genson	B-Entity
]	O
--	O
functionality	O
similar	O
to	O
Jackson	O
","	O
aimed	O
to	O
be	O
easier	O
to	O
configure	O
by	O
developer	O
.	O
 -X-	O
	
The	O
XStream	B-Entity
library	O
also	O
supports	O
JSON	O
:	O
URL_http	O
:	O
/	O
/	O
xstream.codehaus.org	O
/	O
json-	O
tutorial.html	O
[	O
URL_http	O
:	O
/	O
/	O
xstream.codehaus.org	O
/	O
json-tutorial.html	O
]	O
.	O
	
 -X-	O
For	O
example	O
","	O
the	O
JSONObject	B-Entity
	
and	O
the	O
JSONArray	B-Entity
	
They	O
are	O
designed	O
to	O
read	O
in	O
a	O
JSON	B-Entity
String	O
and	O
provide	O
access	O
to	O
their	O
properties	O
via	O
a	O
get	O
(	O
)	O
method	O
.	O
	
Example	O
:	O
JSONObject	B-Entity
#	O
getNames	O
(	O
JSONObject	O
)	O
returns	O
null	O
instead	O
of	O
an	O
empty	O
List	O
or	O
array	O
if	O
no	O
names	O
are	O
available	O
.	O
	
Then	O
I	O
use	O
GSON	B-Entity
upon	O
the	O
generated	O
classes	O
.	O
	
It	O
can	O
parse	O
JSON	B-Entity
to	O
Maps	O
and	O
Lists	O
faster	O
than	O
any	O
other	O
lib	O
can	O
parse	O
to	O
a	O
JSON	O
DOM	O
and	O
that	O
is	O
without	O
Index	O
Overlay	O
mode	O
.	O
	
It	O
also	O
has	O
a	O
very	O
fast	O
JSON	B-Entity
lax	O
mode	O
and	O
a	O
PLIST	O
parser	O
mode	O
.	O
	
It	O
also	O
has	O
the	O
fastest	O
JSON	B-Entity
to	O
JavaBean	B-Entity
mode	O
too	O
.	O
	
A	O
better	O
alternative	O
to	O
Jersey	B-Entity
/	O
Jackson	B-Entity
for	O
building	O
JSON	O
REST	O
APIs	O
?	O
	
 -X-	O
In	O
short	O
","	O
it	O
's	O
not	O
a	O
very	O
fluid	O
API	O
in	O
the	O
style	O
of	O
","	O
say	O
","	O
JSoup	B-Entity
","	O
it	O
appears	O
to	O
be	O
a	O
tool	O
that	O
comes	O
from	O
the	O
era	O
where	O
everything	O
was	O
XML	O
","	O
and	O
then	O
it	O
was	O
retrofitted	O
for	O
JSON	O
.	O
 -X-	O
	
 -X-	O
I	O
'm	O
wondering	O
if	O
there	O
are	O
other	O
libraries	O
","	O
perhaps	O
more	O
recent	O
","	O
that	O
I	O
should	O
consider	O
for	O
this	O
that	O
might	O
be	O
easier	O
to	O
use	O
than	O
Jersey	B-Entity
?	O
 -X-	O
	
Jersey	B-Entity
can	O
serialize	O
POJOs	O
to	O
JSON	B-Entity
without	O
any	O
annotations	O
using	O
Jackson	B-Entity
.	O
	
I	O
have	O
used	O
both	O
Jackson	B-Entity
and	O
Gson	B-Entity
for	O
the	O
JSON	O
support	O
with	O
RESTEasy	O
and	O
it	O
is	O
quite	O
simple	O
.	O
	
All	O
you	O
do	O
is	O
annotate	O
a	O
POJO	B-Entity
with	O
JAXB	B-Entity
annotations	O
and	O
include	O
the	O
proper	O
libraries	O
.	O
	
Another	O
really	O
great	O
part	O
of	O
RESTEasy	B-Entity
is	O
the	O
good	O
support	O
for	O
multipart	O
form	O
data	O
.	O
	
They	O
provide	O
an	O
@	O
MultipartForm	O
annotation	O
which	O
allows	O
you	O
to	O
bind	O
a	O
multipart	O
form	O
to	O
a	O
POJO	B-Entity
without	O
writing	O
any	O
code	O
...	O
works	O
slick	O
.	O
	
I	O
would	O
advise	O
against	O
Spring	O
MVC	O
for	O
REST	B-Entity
because	O
it	O
is	O
not	O
JAX-RS	O
compliant	O
.	O
	
for	O
converting	O
json	O
to	O
pojos	O
:	O
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
google-gson	O
/	O
[	O
gson	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
jackson.codehaus.org	O
/	O
[	O
jackson	B-Entity
]	O
.	O
	
 -X-	O
For	O
URL_http	O
:	O
/	O
/	O
static.springsource.org	O
/	O
spring	O
/	O
docs	O
/	O
3.0.0.M3	O
/	O
spring-framework-	O
reference	O
/	O
html	O
/	O
ch18s02.html	O
[	O
Restful	O
]	O
I	O
'd	O
use	O
URL_http	O
:	O
/	O
/	O
blog.springsource.org	O
/	O
2009	O
/	O
3	O
/	O
8	O
/	O
rest-in-spring-3-mvc	O
/	O
[	O
spring	B-Entity
]	O
","	O
or	O
URL_http	O
:	O
/	O
/	O
www.restlet.org	O
/	O
[	O
restlet	B-Entity
]	O
.	O
 -X-	O
	
 -X-	O
Yes	O
","	O
I	O
'm	O
very	O
familiar	O
with	O
Gson	B-Entity
","	O
and	O
Jersey	B-Entity
already	O
uses	O
Jackson	O
","	O
but	O
converting	O
JSON	O
to	O
and	O
from	O
POJOs	O
is	O
only	O
one	O
part	O
of	O
the	O
problem	O
","	O
I	O
'm	O
looking	O
for	O
an	O
alternative	O
to	O
Jersey	O
","	O
which	O
is	O
a	O
framework	O
for	O
building	O
REST-HTTP	O
APIs	O
.	O
 -X-	O
	
If	O
one	O
existed	O
I	O
'd	O
prefer	O
a	O
HTTP	O
framework	O
that	O
worked	O
with	O
Gson	B-Entity
instead	O
of	O
Jersey	B-Entity
as	O
I	O
'm	O
more	O
comfortable	O
with	O
it	O
.	O
	
I	O
'm	O
the	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
eclipselink	O
/	O
moxy.php	O
[	O
EclipseLink-JAXB-	O
(	O
MOXy	O
)	O
]	O
lead	O
","	O
a	O
member	O
of	O
the	O
URL_http	O
:	O
/	O
/	O
jcp.org	O
/	O
en	O
/	O
jsr	O
/	O
detail	O
?	O
id=222	O
[	O
JAXB-	O
(	O
JSR-222	O
)	O
]	O
expert	O
group	O
and	O
a	O
contributor	O
to	O
the	O
URL_http	O
:	O
/	O
/	O
jersey.java.net	O
/	O
[	O
Jersey	B-Entity
]	O
project	O
.	O
 -X-	O
	
With	O
Jersey	B-Entity
or	O
any	O
JAX-RS	B-Entity
project	O
you	O
can	O
use	O
a	O
CODETERM1	O
/	O
CODETERM2	O
for	O
complete	O
control	O
over	O
your	O
JSON	O
binding	O
.	O
	
Below	O
is	O
an	O
example	O
of	O
using	O
this	O
mechanism	O
to	O
leverage	O
MOXy	B-Entity
as	O
the	O
JSON	B-Entity
provider	O
.	O
	
 -X-	O
You	O
can	O
try	O
URL_http	O
:	O
/	O
/	O
openjpa.apache.org	O
/	O
jest.html	O
[	O
JEST	B-Entity
]	O
","	O
it	O
works	O
over	O
URL_http	O
:	O
/	O
/	O
openjpa.apache.org	O
/	O
[	O
OpenJPA	B-Entity
]	O
.	O
 -X-	O
	
Json	B-Entity
conversion	O
.	O
	
i	O
want	O
to	O
create	O
a	O
Json	B-Entity
like	O
this	O
CODESNIPPET_JAVA1	O
.	O
	
this	O
above	O
code	O
create	O
Json	B-Entity
like	O
this	O
CODESNIPPET_JAVA3	O
.	O
	
 -X-	O
Thanks	O
for	O
reply	O
;	O
but	O
it	O
gives	O
error	O
 -X-	O
 -X-	O
The	O
method	O
toJSONString	B-Entity
(	I-Entity
)	I-Entity
is	O
undefined	O
for	O
the	O
type	O
JSONObject	O
 -X-	O
 -X-	O
at	O
jsonArray.push	B-Entity
(	O
jsonObj	O
.	O
 -X-	O
	
_toJSONString	B-Entity
(	I-Entity
)	I-Entity
_	O
)	O
;	O
.	O
	
why	O
you	O
are	O
converting	O
jsonarray	B-Entity
to	O
JSONObject	B-Entity
?	O
	
I	O
recommend	O
the	O
URL_http	O
:	O
/	O
/	O
jackson.codehaus.org	O
/	O
[	O
jackson-library	B-Entity
]	O
it	O
makes	O
things	O
very	O
easy	O
.	O
	
Of	O
course	O
doing	O
it	O
this	O
way	O
depends	O
on	O
how	O
your	O
ids	O
are	O
stored	O
but	O
for	O
me	O
it	O
generally	O
makes	O
my	O
code	O
a	O
lot	O
cleaner	O
and	O
the	O
Jackson	B-Entity
Library	O
is	O
pretty	O
good	O
performance	O
wise	O
.	O
	
Getting	O
Access	O
to	O
HttpServletRequest	B-Entity
object	O
in	O
restful	O
web	O
service	O
.	O
	
 -X-	O
I	O
can	O
get	O
access	O
to	O
the	O
HttpServlet	O
Request	O
object	O
in	O
a	O
soap	O
web	O
service	O
as	O
follows	O
:	O
Declaring	O
a	O
private	O
field	O
for	O
the	O
WebServiceContext	B-Entity
in	O
the	O
service	O
implementation	O
","	O
and	O
annotate	O
it	O
as	O
a	O
resource	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
 -X-	O
To	O
get	O
the	O
HttpServletRequet	B-Entity
object	O
","	O
I	O
write	O
the	O
code	O
as	O
below	O
:	O
CODESNIPPET_JAVA2	O
.	O
 -X-	O
	
Please	O
tell	O
me	O
how	O
can	O
I	O
get	O
access	O
to	O
HttpServletRequest	B-Entity
Object	O
.	O
	
You	O
can	O
use	O
the	O
CODETERM2	O
annotation	O
to	O
flag	O
other	O
types	O
(	O
such	O
as	O
ServletContext	B-Entity
or	O
the	O
HttpServletRequest	B-Entity
specifically	O
)	O
.	O
	
See	O
URL_http	O
:	O
/	O
/	O
cxf.apache.org	O
/	O
docs	O
/	O
jax-rs-basics.html	O
#	O
JAX-RSBasics-	O
Contextannotations	B-Entity
[	O
Context-Annotations	O
]	O
.	O
	
Why	O
use	O
a	O
framework	O
for	O
RESTful	B-Entity
services	O
in	O
Java	O
instead	O
of	O
vanilla	O
servlets	O
.	O
	
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Apache_CXF	B-Entity
[	O
Apache-CXF	O
]	O
	
URL_http	O
:	O
/	O
/	O
jersey.java.net	O
/	O
[	O
Jersey	B-Entity
]	O
(	O
popular	O
)	O
	
URL_http	O
:	O
/	O
/	O
en.wikipedia.org	O
/	O
wiki	O
/	O
Restlet	O
[	O
Restlet	B-Entity
]	O
(	O
pioneer	O
of	O
JAX-RS	O
)	O
	
URL_http	O
:	O
/	O
/	O
www.jboss.org	O
/	O
resteasy	O
[	O
RESTEasy	B-Entity
]	O
Essentially	O
what	O
I	O
am	O
asking	O
is	O
...	O
What	O
is	O
the	O
value	O
in	O
using	O
a	O
RESTful	O
Java	O
framework	O
?	O
 -X-	O
	
Actually	O
Jersey	O
is	O
the	O
reference	O
implementation	O
of	O
JAX-RS	B-Entity
.	O
	
 -X-	O
So	O
I	O
'd	O
call	O
it	O
the	O
pioneer	O
","	O
not	O
Restlet	B-Entity
.	O
 -X-	O
	
 -X-	O
If	O
you	O
just	O
want	O
to	O
say	O
 -X-	O
 -X-	O
Hello	O
World	O
 -X-	O
 -X-	O
","	O
you	O
do	O
n't	O
need	O
JAX-RS	B-Entity
.	O
 -X-	O
	
 -X-	O
JAX-RS	B-Entity
is	O
a	O
very	O
well	O
designed	O
API	O
that	O
makes	O
mapping	O
HTTP	O
requests	O
to	O
methods	O
","	O
extracting	O
parameters	O
from	O
various	O
parts	O
of	O
a	O
HTTP	O
request	O
","	O
handling	O
content	O
negotiating	O
","	O
and	O
many	O
other	O
low	O
level	O
tasks	O
very	O
easy	O
.	O
 -X-	O
	
 -X-	O
Using	O
JAX-RS	B-Entity
","	O
mainly	O
via	O
Apache	O
CXF	O
","	O
for	O
roughly	O
two	O
years	O
now	O
","	O
I	O
'd	O
always	O
prefer	O
it	O
over	O
plain	O
Servlets	O
.	O
 -X-	O
	
 -X-	O
Yes	O
","	O
JAX-	B-Entity
RS	I-Entity
helps	O
with	O
this	O
.	O
 -X-	O
	
 -X-	O
Doing	O
all	O
that	O
stuff	O
directly	O
at	O
the	O
level	O
of	O
a	O
servlet	O
would	O
be	O
a	O
lot	O
of	O
work	O
","	O
but	O
JAXRS	B-Entity
lets	O
you	O
focus	O
much	O
more	O
on	O
the	O
resources	O
within	O
your	O
application	O
.	O
 -X-	O
	
It	O
's	O
also	O
not	O
faster	O
to	O
implement	O
(	O
because	O
the	O
low-level	O
implementations	O
of	O
JAX-RS	B-Entity
have	O
already	O
been	O
tested	O
and	O
debugged	O
for	O
you	O
;	O
less	O
for	O
you	O
to	O
do	O
)	O
and	O
the	O
cost	O
of	O
learning	O
it	O
is	O
n't	O
very	O
high	O
as	O
it	O
is	O
a	O
mostly	O
declarative	O
API	O
with	O
very	O
few	O
surprises	O
.	O
	
Should	O
handling	O
doPost	B-Entity
in	O
a	O
httpservlet	O
never	O
be	O
done	O
?	O
	
Bu	O
if	O
you	O
are	O
using	O
framework	O
like	O
jersey	B-Entity
then	O
u	O
do	O
n't	O
have	O
to	O
worry	O
about	O
those	O
parsing	O
patterns	O
and	O
other	O
similar	O
tasks	O
.	O
	
 -X-	O
Actually	O
JAX-RS	B-Entity
is	O
an	O
API	O
while	O
CXF	O
","	O
Jersey	O
","	O
RESTEasy	O
are	O
implementations	O
.	O
 -X-	O
	
But	O
I	O
would	O
definitely	O
recommend	O
using	O
JAX-RS	B-Entity
.	O
	
 -X-	O
I	O
would	O
go	O
with	O
using	O
Jersey	B-Entity
or	O
a	O
library	O
in	O
this	O
case	O
","	O
if	O
it	O
does	O
the	O
following	O
(	O
adds	O
enough	O
value	O
)	O
:	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
a	O
/	O
1943667	O
/	O
831203	O
[	O
RESTlet	B-Entity
]	O
)	O
	
 -X-	O
I	O
'm	O
looking	O
at	O
Restlet	B-Entity
-	O
and	O
its	O
not	O
the	O
best	O
","	O
there	O
are	O
things	O
missing	O
in	O
the	O
tutorial	O
and	O
the	O
language	O
/	O
grammar	O
is	O
a	O
bit	O
confusing	O
and	O
unclear	O
.	O
 -X-	O
	
Tutorial	O
Comments**	O
Overall	O
I	O
'm	O
not	O
sure	O
exactly	O
who	O
the	O
tutorial	O
was	O
aimed	O
at	O
-	O
because	O
there	O
is	O
a	O
fair	O
degree	O
of	O
assumed	O
knowledge	O
all	O
round	O
","	O
so	O
coming	O
into	O
REST	B-Entity
and	O
Restlet	O
framework	O
cold	O
leaves	O
you	O
with	O
a	O
lot	O
of	O
'catchup	O
work	O
'	O
to	O
do	O
","	O
and	O
re-reading	O
paragraphs	O
over	O
and	O
over	O
again	O
.	O
 -X-	O
	
 -X-	O
 -X-	O
Create	O
a	O
new	O
Servlet	O
Web	O
application	O
as	O
usual	O
","	O
add	O
a	O
 -X-	O
 -X-	O
com.firstStepsServlet	B-Entity
 -X-	O
 -X-	O
package	O
and	O
put	O
the	O
resource	O
and	O
application	O
classes	O
in	O
.	O
 -X-	O
	
I	O
was	O
under	O
the	O
impression	O
that	O
the	O
concepts	O
of	O
REST	B-Entity
were	O
supposed	O
to	O
be	O
much	O
simpler	O
than	O
SOAP	B-Entity
-	O
but	O
it	O
seems	O
just	O
as	O
bad	O
if	O
not	O
more	O
complicated	O
-	O
do	O
n't	O
get	O
it	O
at	O
all	O
!	O
 -X-	O
	
 -X-	O
One	O
would	O
think	O
that	O
an	O
API	O
like	O
RESTlet	B-Entity
would	O
 -X-	O
 -X-	O
help	O
 -X-	O
 -X-	O
you	O
.	O
 -X-	O
	
I	O
could	O
write	O
a	O
simple	O
web	O
service	O
framework	O
in	O
a	O
third	O
of	O
the	O
time	O
it	O
takes	O
me	O
to	O
understand	O
the	O
RESTlet	B-Entity
architecture	O
.	O
	
Could	O
you	O
describe	O
precisely	O
what	O
caused	O
you	O
troubles	O
in	O
our	O
Restlet	B-Entity
tutorials	O
?	O
	
I	O
provides	O
a	O
great	O
introduction	O
to	O
REST	B-Entity
:	O
what	O
it	O
is	O
and	O
how	O
to	O
implement	O
a	O
(	O
practical	O
)	O
RESTful	O
web	O
service	O
.	O
	
 -X-	O
But	O
one	O
thing	O
that	O
should	O
help	O
you	O
specifically	O
is	O
that	O
one	O
of	O
the	O
later	O
chapters	O
of	O
the	O
book	O
contains	O
overviews	O
of	O
several	O
RESTful	O
frameworks	O
","	O
including	O
Restlet	B-Entity
.	O
 -X-	O
	
Funnily	O
enough	O
I	O
have	O
just	O
ordered	O
RESTful	B-Entity
Web	O
Services	O
on	O
Amazon	O
before	O
I	O
read	O
your	O
post	O
.	O
	
 -X-	O
This	O
API	O
is	O
backed	O
by	O
the	O
Restlet	O
Engine	O
and	O
both	O
are	O
now	O
shipped	O
in	O
a	O
single	O
JAR	O
(	O
 -X-	O
 -X-	O
_org.restlet.jar_	B-Entity
 -X-	O
 -X-	O
)	O
.	O
 -X-	O
	
Note	O
that	O
the	O
example	O
above	O
uses	O
a	O
simplified	O
way	O
to	O
issue	O
calls	O
via	O
the	O
_ClientResource_	B-Entity
class	O
.	O
	
If	O
you	O
need	O
multi-threading	O
or	O
more	O
control	O
it	O
is	O
still	O
possible	O
to	O
manipulate	O
use	O
the	O
_Client_	B-Entity
connector	O
class	O
or	O
the	O
_Request_	B-Entity
objects	O
directly	O
.	O
	
 -X-	O
Listening	O
to	O
Web	O
browsers**	O
Now	O
","	O
we	O
want	O
to	O
see	O
how	O
the	O
Restlet	B-Entity
framework	O
can	O
listen	O
to	O
client	O
requests	O
and	O
reply	O
to	O
them	O
.	O
 -X-	O
	
 -X-	O
We	O
will	O
use	O
the	O
internal	O
Restlet	B-Entity
HTTP	O
server	O
connector	O
(	O
even	O
though	O
it	O
is	O
possible	O
to	O
switch	O
to	O
others	O
such	O
as	O
the	O
one	O
based	O
on	O
Mortbay	O
's	O
Jetty	O
)	O
and	O
return	O
a	O
simple	O
string	O
representation	O
 -X-	O
 -X-	O
hello	O
","	O
world	O
 -X-	O
 -X-	O
as	O
plain	O
text	O
.	O
 -X-	O
	
Note	O
that	O
the	O
_Part03_	B-Entity
class	O
extends	O
the	O
base	O
_ServerResource_	O
class	O
provided	O
by	O
Restlet	O
:	O
CODESNIPPET_JAVA3	O
.	O
	
 -X-	O
So	O
far	O
","	O
we	O
have	O
mostly	O
showed	O
you	O
the	O
highest	O
level	O
of	O
abstraction	O
in	O
the	O
Restlet	O
API	O
","	O
with	O
the	O
ClientResource	B-Entity
and	O
ServerResource	B-Entity
classes	O
.	O
 -X-	O
	
 -X-	O
In	O
addition	O
","	O
the	O
qualified	O
named	O
suggested	O
in	O
the	O
tutorial	O
is	O
indeed	O
 -X-	O
 -X-	O
firstStepsServlet.FirstStepsApplication	B-Entity
 -X-	O
 -X-	O
and	O
not	O
 -X-	O
 -X-	O
com.firstStepsServlet.FirstStepsApplication	B-Entity
 -X-	O
 -X-	O
.	O
 -X-	O
	
With	O
JSR	B-Entity
311	O
and	O
it	O
's	O
implementations	O
we	O
have	O
a	O
powerful	O
standard	O
for	O
exposing	O
Java	O
objects	O
via	O
Rest	O
.	O
	
How	O
do	O
you	O
create	O
Java	O
RESTful	B-Entity
clients	O
?	O
	
Using	O
HTTPConnection	B-Entity
and	O
manual	O
parsing	O
of	O
the	O
result	O
?	O
	
Jersey	B-Entity
or	O
Apache	B-Entity
CXR	I-Entity
?	O
	
also	O
has	O
its	O
own	O
called	O
URL_http	O
:	O
/	O
/	O
blog.springsource.com	O
/	O
2009	O
/	O
3	O
/	O
27	O
/	O
rest-in-spring-3-resttemplate	O
/	O
[	O
RestTemplate	B-Entity
]	O
	
The	O
nice	O
thing	O
is	O
if	O
you	O
implement	O
your	O
RESTful	O
resources	O
using	O
JAX-RS	B-Entity
then	O
the	O
Jersey	O
client	O
can	O
reuse	O
the	O
entity	O
providers	O
such	O
as	O
for	O
JAXB	O
/	O
XML	O
/	O
JSON	O
/	O
Atom	O
and	O
so	O
forth	O
-	O
so	O
you	O
can	O
reuse	O
the	O
same	O
objects	O
on	O
the	O
server	O
side	O
as	O
you	O
use	O
on	O
the	O
client	O
side	O
unit	O
test	O
.	O
	
For	O
example	O
URL_http	O
:	O
/	O
/	O
svn.apache.org	O
/	O
viewvc	O
/	O
activemq	O
/	O
camel	O
/	O
trunk	O
/	O
components	O
/	O
camel-rest	O
/	O
src	O
/	O
test	O
/	O
java	O
/	O
org	O
/	O
apache	O
/	O
camel	O
/	O
rest	O
/	O
resources	O
/	O
EndpointsTest.java	O
?	O
r	O
evision=700513	O
&	O
view=markup	O
[	O
here-is-a-unit-test-case	O
]	O
from	O
the	O
URL_http	O
:	O
/	O
/	O
activemq.apache.org	O
/	O
camel	O
/	O
[	O
Apache-Camel-project	O
]	O
which	O
looks	O
up	O
XML	O
payloads	O
from	O
a	O
RESTful	O
resource	O
(	O
using	O
the	O
JAXB	B-Entity
object	O
Endpoints	O
)	O
.	O
	
BTW	O
I	O
hope	O
that	O
future	O
version	O
of	O
JAX-RS	B-Entity
add	O
a	O
nice	O
client	O
side	O
API	O
along	O
the	O
lines	O
of	O
the	O
one	O
in	O
Jersey	O
.	O
	
 -X-	O
Is	O
there	O
a	O
method	O
where	O
we	O
can	O
mention	O
REST	O
service	O
server	O
list	O
in	O
ClientResource	B-Entity
","	O
in	O
case	O
the	O
server	O
is	O
down	O
try	O
the	O
next	O
server	O
?	O
 -X-	O
	
Or	O
you	O
can	O
use	O
the	O
REST	O
client	O
APIs	O
provided	O
by	O
JAX-RS	B-Entity
implementations	O
such	O
as	O
Jersey	O
.	O
	
I	O
use	O
Apache	O
HTTPClient	B-Entity
to	O
handle	O
all	O
the	O
HTTP	O
side	O
of	O
things	O
.	O
	
Manually	O
handling	O
serialization	O
in	O
Java	O
is	O
a	O
waste	O
of	O
time	O
when	O
you	O
have	O
so	O
many	O
options	O
like	O
JAXB	B-Entity
and	O
Jackson	B-Entity
.	O
	
URL_http	O
:	O
/	O
/	O
restfulie.caelum.com.br	O
/	O
[	O
Restfulie	B-Entity
]	O
","	O
based	O
on	O
the	O
VRaptor	O
web	O
framework	O
","	O
has	O
both	O
server	O
and	O
client	O
side	O
implementations	O
with	O
very	O
good	O
Hypermedia	O
support	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
www.jboss.org	O
/	O
resteasy	O
[	O
RESTEasy	B-Entity
]	O
has	O
a	O
URL_http	O
:	O
/	O
/	O
docs.jboss.org	O
/	O
resteasy	O
/	O
docs	O
/	O
2.3.0.GA	O
/	O
userguide	O
/	O
html	O
/	O
RESTEasy_Client_Framework.html	O
[	O
JAX-RS-proxy-based-client	O
]	O
implementation	O
.	O
 -X-	O
	
You	O
can	O
do	O
it	O
in	O
a	O
very	O
simple	O
way	O
with	O
resteasy	O
(	O
by	O
Jboss	B-Entity
)	O
.	O
	
Try	O
URL_http	O
:	O
/	O
/	O
www.rexsl.com	O
/	O
rexsl-	O
test	O
/	O
apidocs-0.10	O
/	O
com	O
/	O
rexsl	O
/	O
test	O
/	O
request	O
/	O
JdkRequest.html	O
[	O
JdkRequest	B-Entity
]	O
from	O
URL_http	O
:	O
/	O
/	O
www.rexsl.com	O
/	O
rexsl-test	O
/	O
[	O
rexsl-test	O
]	O
(	O
I	O
'm	O
a	O
developer	O
)	O
.	O
	
 -X-	O
You	O
can	O
use	O
URL_http	O
:	O
/	O
/	O
tomayac.de	O
/	O
rest-describe	O
/	O
latest	O
/	O
RestDescribe.html	O
[	O
RestDescribe	B-Entity
]	O
to	O
generate	O
and	O
compile	O
WSDL	O
","	O
you	O
can	O
generate	O
clients	O
in	O
php	O
","	O
ruby	O
","	O
python	O
","	O
java	O
and	O
C	O
#	O
using	O
this	O
.	O
 -X-	O
	
Memory	O
leak	O
in	O
JBoss	B-Entity
.	O
	
 -X-	O
I	O
am	O
having	O
a	O
very	O
strange	O
behavior	O
in	O
JBoss	B-Entity
","	O
and	O
I	O
'd	O
like	O
avail	O
myself	O
of	O
the	O
Collective	O
Wisdom	O
of	O
the	O
SO	O
Crowd	O
.	O
 -X-	O
	
We	O
're	O
using	O
JBoss	B-Entity
(	O
4.0.4	O
I	O
think	O
)	O
to	O
serve	O
SOAP	O
calls	O
.	O
	
I	O
've	O
traced	O
the	O
leak	O
to	O
an	O
instance	O
of	O
org.jboss.axis.message.SAX2EventRecorder	B-Entity
that	O
hold	O
4	O
million	O
objects	O
(	O
strings	O
and	O
Integers	O
)	O
.	O
	
 -X-	O
The	O
array	O
is	O
owned	O
by	O
a	O
org.jboss.axis.message.SAX2EventRecorder	B-Entity
which	O
is	O
in	O
turn	O
held	O
by	O
these	O
guys	O
:	O
org.jboss.axis.message.SOAPEnvelopeAxisImpl	O
@	O
0x19c31fd8	O
(	O
141	O
bytes	O
)	O
:	O
field	O
recorderorg.jboss.axis.message.RPCParamElementImpl	O
@	O
0x19c32260	O
(	O
123	O
bytes	O
)	O
:	O
field	O
recorderorg.jboss.axis.message.SOAPBodyAxisImpl	O
@	O
0x19c32160	O
(	O
121	O
bytes	O
)	O
:	O
field	O
recorderorg.jboss.axis.message.RPCElement	O
@	O
0x19c321e0	O
(	O
124	O
bytes	O
)	O
:	O
field	O
recorderorg.jboss.axis.encoding.DeserializationContextImpl	O
@	O
0x19c332f0	O
(	O
67	O
bytes	O
)	O
:	O
field	O
recorderorg.jboss.axis.message.SAX2EventRecorder	O
$	O
objArrayVector	O
@	O
0x19c33398	O
(	O
24	O
bytes	O
)	O
:	O
field	O
this	O
$	O
0	O
The	O
data	O
structures	O
of	O
our	O
own	O
app	O
are	O
quete	O
bloated	O
","	O
but	O
not	O
to	O
this	O
degree	O
.	O
 -X-	O
	
My	O
question	O
is	O
:	O
what	O
are	O
you	O
doing	O
running	O
such	O
an	O
old	O
version	O
of	O
JBoss	B-Entity
?	O
	
How	O
do	O
you	O
think	O
I	O
've	O
established	O
that	O
SAX2EventRecorder	B-Entity
is	O
the	O
culprit	O
?	O
	
 -X-	O
Anyway	O
","	O
what	O
is	O
the	O
content	O
of	O
the	O
objects	O
in	O
the	O
SAX2EventRecorder	B-Entity
?	O
 -X-	O
	
@	O
kevin	O
:	O
to	O
quote	O
the	O
question	O
:	O
SAX2EventRecorder	B-Entity
that	O
hold	O
4	O
million	O
objects	O
(	O
strings	O
and	O
Integers	O
)	O
.	O
	
The	O
latest	O
version	O
includes	O
URL_https	O
:	O
/	O
/	O
visualvm.dev.java.net	O
/	O
[	O
VisualVM	B-Entity
]	O
for	O
profiling	O
.	O
	
JBoss	B-Entity
and	O
different	O
versions	O
of	O
Hibernate	O
.	O
	
We	O
are	O
using	O
JBoss	B-Entity
4.2.3	O
which	O
in	O
turn	O
comes	O
with	O
version	O
3.2.1.ga	O
of	O
Hibernate	O
.	O
	
I	O
would	O
like	O
to	O
use	O
Hibernate	O
3.5.1-FINAL	O
which	O
supports	O
JPA	B-Entity
2	O
.	O
	
 -X-	O
Maybe	O
too	O
late	O
","	O
but	O
it	O
may	O
help	O
somebody	O
that	O
finds	O
this	O
thread	O
looking	O
for	O
the	O
problem	O
described	O
above	O
about	O
'Caused	O
by	O
:	O
java.lang.NoSuchMethodException	B-Entity
:	O
org.hibernate.validator.ClassValidator	O
...	O
.	O
'	O
:	O
I	O
'm	O
using	O
Jboss	O
4.2	O
","	O
Hibernate	O
Core	O
3.6.5	O
","	O
Hibernate	O
Validator	O
4.1.0	O
","	O
using	O
maven	O
","	O
and	O
I	O
have	O
the	O
same	O
problem	O
.	O
 -X-	O
	
Option	O
2	O
Disable	O
CODETERM3	O
(	O
your	O
second	O
jboss-web.xml	O
)	O
","	O
bundle	O
your	O
Hibernate	O
JARs	B-Entity
into	O
your	O
app	O
and	O
override	O
the	O
hibernate-validator	O
JARs	O
	
 -X-	O
(	O
Jboss	B-Entity
4.2	O
with	O
Hibernate	O
3.2.6.ga	O
on	O
the	O
main	O
app	O
","	O
second	O
app	O
is	O
Play	O
!	O
Framework	O
1.2.5	O
bundled	O
with	O
Hibernate	O
3.6	O
)	O
.	O
 -X-	O
	
 -X-	O
Many	O
thanks	O
","	O
Option	O
1	O
(	O
which	O
seems	O
more	O
elegant	O
)	O
worked	O
for	O
me	O
with	O
Hibernate	O
3.6.0.Final	O
and	O
JBoss	B-Entity
4.2.1.GA	O
.	O
 -X-	O
	
Active	O
MQ	O
vs	O
JBoss	B-Entity
Messaging	O
.	O
	
I	O
have	O
narrowed	O
down	O
the	O
list	O
to	O
include	O
Active	O
MQ	O
and	O
JBoss	B-Entity
Messaging	O
.	O
	
I	O
am	O
not	O
interested	O
in	O
JBoss	O
MQ	O
but	O
JBoss	B-Entity
Messaging	O
.	O
	
Note	O
for	O
those	O
who	O
do	O
n't	O
know	O
:	O
JBoss	B-Entity
Messaging	I-Entity
is	O
a	O
rewrite	O
of	O
JBoss	O
MQ	O
that	O
advertises	O
much	O
improved	O
performance	O
.	O
	
 -X-	O
It	O
's	O
not	O
a	O
rewrite	O
","	O
really	O
","	O
it	O
shares	O
nothing	O
in	O
common	O
with	O
JBossMQ	B-Entity
at	O
all	O
","	O
other	O
than	O
being	O
a	O
JMS	O
implementation	O
with	O
 -X-	O
 -X-	O
JBoss	O
 -X-	O
 -X-	O
in	O
the	O
title	O
.	O
 -X-	O
	
 -X-	O
JBoss	B-Entity
Messaging	I-Entity
is	O
now	O
in	O
bug	O
fix	O
mode	O
only	O
","	O
since	O
JBoss	O
/	O
Red	O
Hat	O
has	O
a	O
new	O
Java	O
messaging	O
project	O
called	O
HornetQ	O
.	O
 -X-	O
	
You	O
'll	O
find	O
it	O
's	O
performance	O
compared	O
to	O
ActiveMQ	B-Entity
is	O
_extremely_	O
good	O
.	O
	
BTW	O
-	O
I	O
am	O
the	O
project	O
lead	O
for	O
JBoss	B-Entity
Messaging	O
and	O
HornetQ	O
.	O
	
 -X-	O
JBoss	B-Entity
recently	O
redid	O
their	O
entire	O
implementation	O
of	O
Messaging	O
","	O
ala	O
JBoss	O
MQ	O
has	O
been	O
replaced	O
with	O
JBoss	O
Messaging	O
","	O
and	O
now	O
again	O
as	O
 -X-	O
 -X-	O
HornetQ	O
 -X-	O
 -X-	O
.	O
 -X-	O
	
 -X-	O
Feature-by-feature	O
comparisons	O
are	O
all	O
very	O
well	O
","	O
but	O
my	O
experience	O
of	O
ActiveMQ	B-Entity
(	O
through	O
various	O
versions	O
over	O
the	O
years	O
)	O
is	O
that	O
it	O
is	O
shockingly	O
buggy	O
","	O
and	O
noone	O
seems	O
inclined	O
to	O
fix	O
those	O
bugs	O
.	O
 -X-	O
	
 -X-	O
JBossMessaging	B-Entity
is	O
relatively	O
feature-light	O
","	O
compared	O
to	O
ActiveMQ	O
","	O
but	O
it	O
's	O
rock-solid	O
","	O
well-documented	O
and	O
reliable	O
.	O
 -X-	O
	
 -X-	O
It	O
's	O
also	O
part	O
of	O
JBossAS	B-Entity
5	O
","	O
and	O
RedHat	O
are	O
doing	O
a	O
good	O
job	O
of	O
supporting	O
it	O
.	O
 -X-	O
	
 -X-	O
For	O
ActiveMQ	B-Entity
","	O
I	O
found	O
very	O
little	O
documentation	O
comparing	O
to	O
Jboss	O
.	O
 -X-	O
	
 -X-	O
I	O
have	O
done	O
certain	O
research	O
using	O
MOM	O
with	O
Jboss	B-Entity
and	O
GlassFish	B-Entity
","	O
but	O
one	O
of	O
the	O
most	O
important	O
impact	O
was	O
the	O
permanent	O
storage	O
if	O
you	O
are	O
going	O
to	O
use	O
any	O
.	O
 -X-	O
	
Apparently	O
there	O
are	O
certain	O
concern	O
when	O
it	O
comes	O
to	O
persistent	O
storage	O
in	O
ActiveMQ	B-Entity
.	O
	
JBoss	B-Entity
Messaging	I-Entity
replaces	O
JBoss	B-Entity
MQ	I-Entity
.	O
	
 -X-	O
JBossMQ	B-Entity
may	O
not	O
scale	O
as	O
well	O
as	O
JBM	O
","	O
but	O
to	O
say	O
 -X-	O
 -X-	O
not	O
scalable	O
at	O
all	O
 -X-	O
 -X-	O
is	O
just	O
plain	O
wrong	O
.	O
 -X-	O
	
Does	O
JBoss	B-Entity
Seam	I-Entity
work	O
well	O
on	O
Glassfish	B-Entity
?	O
	
 -X-	O
please	O
","	O
rephrase	O
the	O
question	O
as	O
comparing	O
between	O
EITHER	O
:	O
Glassfish	B-Entity
2	O
vs	O
JBoss	O
5	O
","	O
...	O
.or	O
...	O
.	O
Glassfish	O
3	O
vs	O
JBoss	O
6	O
.	O
 -X-	O
	
 -X-	O
GlassFish	B-Entity
has	O
much	O
better	O
administration	O
console	O
(	O
JBoss	O
has	O
three	O
consoles	O
","	O
each	O
of	O
them	O
far	O
from	O
being	O
ideal	O
)	O
.	O
 -X-	O
	
Hot	O
deployment	O
is	O
more	O
reliable	O
on	O
GlassFish	B-Entity
3	O
.	O
	
 -X-	O
JMS	O
works	O
better	O
on	O
GlassFish	B-Entity
-	O
this	O
applies	O
to	O
GF	O
vs.	O
JBoss	O
4.X.As	O
far	O
as	O
I	O
see	O
the	O
JMS	O
implementation	O
was	O
drastically	O
modified	O
inJBoss	O
5.X	O
","	O
so	O
maybe	O
this	O
claim	O
is	O
no	O
longer	O
TRUE	O
4	O
.	O
 -X-	O
	
 -X-	O
WebServices	B-Entity
are	O
working	O
better	O
on	O
GlassFish	B-Entity
","	O
I	O
had	O
a	O
number	O
of	O
issues	O
with	O
more	O
advanced	O
configuration	O
on	O
JBoss	O
5	O
.	O
 -X-	O
	
 -X-	O
GlassFish	B-Entity
has	O
more	O
super-high-end	O
entrprise	O
add-ons	O
","	O
like	O
HA-Database	O
","	O
that	O
storesuser	O
session	O
on	O
a	O
cluster	O
in	O
Database	O
","	O
not	O
in	O
memory	O
","	O
so	O
the	O
full	O
failover	O
ispossible	O
","	O
whatever	O
disaster	O
would	O
happen	O
6	O
.	O
 -X-	O
	
 -X-	O
JBoss	B-Entity
is	O
more	O
much	O
popular	O
","	O
there	O
are	O
a	O
lot	O
of	O
administrators	O
","	O
developers	O
","	O
who	O
know	O
it	O
","	O
so	O
it	O
is	O
easier	O
to	O
find	O
someone	O
","	O
who	O
can	O
develop	O
on	O
JBoss	O
","	O
there	O
are	O
also	O
moreresources	O
in	O
the	O
net	O
.	O
 -X-	O
	
GlassFish	B-Entity
is	O
friendlier	O
for	O
developers	O
.	O
	
 -X-	O
In	O
addition	O
","	O
if	O
someone	O
is	O
using	O
NetBeans	B-Entity
","	O
there	O
is	O
a	O
number	O
of	O
smart	O
wizards	O
","	O
that	O
are	O
very	O
helpful	O
.	O
 -X-	O
	
 -X-	O
The	O
future	O
of	O
GlassFish	B-Entity
is	O
not	O
certain	O
because	O
of	O
the	O
acquisition	O
of	O
SUN	O
by	O
Oracle.Right	O
now	O
Oracle	O
claims	O
it	O
will	O
support	O
it	O
","	O
but	O
who	O
knows	O
how	O
this	O
support	O
willlook	O
like	O
and	O
how	O
long	O
will	O
it	O
last	O
.	O
 -X-	O
	
 -X-	O
Even	O
though	O
GlassFish	B-Entity
is	O
open	O
source	O
","	O
hardly	O
anyone	O
is	O
ready	O
to	O
develop	O
application	O
server	O
for	O
his	O
/	O
her	O
own	O
needs	O
...	O
From	O
my	O
point	O
of	O
view	O
GF	O
is	O
easier	O
to	O
administer	O
","	O
is	O
a	O
better	O
solution	O
from	O
purely	O
technological	O
point	O
of	O
view	O
","	O
but	O
it	O
is	O
far	O
less	O
popular	O
and	O
has	O
uncertain	O
future	O
.	O
 -X-	O
	
 -X-	O
I	O
am	O
not	O
connected	O
in	O
any	O
way	O
with	O
RedHat	O
/	O
JBoss	O
or	O
SUN	O
/	O
GlassFish	B-Entity
","	O
my	O
company	O
(	O
erudis.pl	O
)	O
is	O
supporting	O
and	O
developing	O
for	O
both	O
servers	O
.	O
 -X-	O
	
JBoss	B-Entity
5.1	O
GA	O
is	O
listed	O
as	O
130MB	O
;	O
GFv3Preview	O
is	O
50MB	O
.	O
	
Sun	O
also	O
provides	O
patch	O
releases	O
of	O
GlassFish	B-Entity
(	O
akin	O
to	O
RedHat	O
's	O
support	O
for	O
JBoss	O
)	O
;	O
see	O
URL_https	O
:	O
/	O
/	O
blogs.oracle.com	O
/	O
glassfishforbusiness	O
[	O
URL_https	O
:	O
/	O
/	O
blogs.oracle.com	O
/	O
glassfishforbusiness	O
]	O
and	O
sun.com	O
/	O
glassfish	O
.	O
	
 -X-	O
(	O
1	O
)	O
The	O
JBoss5	B-Entity
kernel	O
is	O
not	O
JMX	B-Entity
based	O
(	O
JBoss	O
4	O
was	O
","	O
not	O
5	O
)	O
.	O
 -X-	O
	
 -X-	O
(	O
2	O
)	O
JBoss	B-Entity
is	O
also	O
modular	O
","	O
you	O
pick	O
which	O
modules	O
you	O
want	O
.	O
 -X-	O
	
 -X-	O
@	O
Pelegi	O
","	O
can	O
you	O
mention	O
just	O
one	O
thing	O
that	O
JBoss	O
does	O
better	O
than	O
Glassfish	B-Entity
?	O
 -X-	O
	
I	O
found	O
configuring	O
and	O
using	O
JBoss	B-Entity
to	O
be	O
about	O
as	O
pleasing	O
as	O
trying	O
to	O
shave	O
with	O
a	O
jagged	O
spoon	O
while	O
riding	O
a	O
unicycle	O
with	O
no	O
seat	O
.	O
	
 -X-	O
Glassfish	B-Entity
however	O
","	O
just	O
seems	O
to	O
work	O
.	O
 -X-	O
	
 -X-	O
My	O
choice	O
is	O
Glassfish	B-Entity
:	O
it	O
is	O
faster	O
to	O
start-up	O
","	O
to	O
deploy	O
web	O
applications.the	O
Admin	O
console	O
is	O
very	O
accurate	O
","	O
moreover	O
it	O
is	O
both	O
graphical	O
and	O
command-line.Now	O
it	O
is	O
fully-supported	O
by	O
Oracle	O
","	O
its	O
future	O
is	O
not	O
uncertain	O
any	O
more.It	O
is	O
based	O
upon	O
OSGi	O
:	O
it	O
is	O
really	O
modular.You	O
can	O
install	O
Spring-osgi	O
applications	O
easly.You	O
can	O
freely	O
choice	O
between	O
Eclipse	O
Link	O
","	O
Apache	O
Open	O
JPA	O
and	O
Hibernate	O
without	O
pain.It	O
is	O
greatly	O
integrated	O
in	O
NetBeans	O
(	O
and	O
","	O
of	O
course	O
","	O
Eclipse	O
)	O
.	O
 -X-	O
	
 -X-	O
On	O
the	O
other	O
hand	O
","	O
Jboss	B-Entity
is	O
more	O
widespread	O
and	O
thus	O
it	O
is	O
easy	O
to	O
find	O
job	O
on	O
it	O
(	O
IMHO	O
because	O
it	O
is	O
an	O
old	O
App	O
Server	O
;	O
glassfish	O
is	O
relatively	O
new	O
)	O
.	O
 -X-	O
	
I	O
started	O
developing	O
a	O
Seam	O
application	O
on	O
JBoss	B-Entity
and	O
after	O
a	O
few	O
months	O
tried	O
to	O
get	O
it	O
working	O
on	O
Glassfish	B-Entity
.	O
	
I	O
found	O
the	O
Glassfish	B-Entity
enviroment	O
very	O
counterintuitive	O
.	O
	
I	O
had	O
to	O
fix	O
some	O
strange	O
errors	O
on	O
GF	O
and	O
I	O
could	O
not	O
find	O
any	O
information	O
on	O
the	O
web	O
so	O
after	O
a	O
few	O
days	O
I	O
gave	O
up	O
and	O
went	O
back	O
to	O
JBoss	B-Entity
.	O
	
So	O
personally	O
I	O
would	O
not	O
recommend	O
Glassfish	B-Entity
.	O
	
I	O
will	O
have	O
to	O
go	O
with	O
Glassfish	B-Entity
on	O
this	O
.	O
	
Glassfish	B-Entity
I	O
never	O
faced	O
any	O
such	O
issues	O
.	O
	
 -X-	O
IMHO	O
if	O
you	O
do	O
n't	O
need	O
something	O
like	O
powerful	O
GUI	O
support	O
or	O
Java2D	O
(	O
most	O
of	O
which	O
can	O
be	O
done	O
with	O
JQuery	B-Entity
","	O
ExtJS	O
","	O
etc	O
)	O
there	O
is	O
no	O
real	O
argument	O
for	O
applets	O
.	O
 -X-	O
	
I	O
am	O
trying	O
to	O
authenticate	O
users	O
with	O
a	O
REST	B-Entity
service	O
I	O
built	O
using	O
drop	O
wizard	O
.	O
	
If	O
I	O
go	O
down	O
OAuth2	B-Entity
route	O
I	O
have	O
to	O
register	O
my	O
app	O
with	O
one	O
of	O
the	O
OAuth2	O
providers	O
e.g	O
.	O
	
 -X-	O
No	O
no	O
no	O
...	O
Dropwizard	O
supports	O
OAuth2	B-Entity
on	O
the	O
back	O
end	O
-	O
so	O
you	O
would	O
implement	O
your	O
own	O
OAuth2	O
service	O
","	O
and	O
then	O
have	O
the	O
browser	O
perform	O
the	O
auth	O
handshake	O
with	O
it	O
;	O
completely	O
independent	O
from	O
Google	O
","	O
et	O
al	O
.	O
 -X-	O
	
Dropwizard	O
claims	O
their	O
OAuth2	B-Entity
implementation	O
is	O
n't	O
yet	O
finalized	O
","	O
and	O
may	O
change	O
in	O
the	O
future	O
.	O
 -X-	O
	
 -X-	O
Give	O
how	O
complex	O
it	O
can	O
be	O
do	O
to	O
security	O
right	O
","	O
Shiro	B-Entity
is	O
very	O
simple	O
to	O
use	O
.	O
 -X-	O
	
 -X-	O
If	O
you	O
use	O
Tapestry	B-Entity
","	O
you	O
might	O
look	O
at	O
URL_http	O
:	O
/	O
/	O
tynamo.org	O
/	O
tapestry-	O
security+guide	O
[	O
URL_http	O
:	O
/	O
/	O
tynamo.org	O
/	O
tapestry-security+guide	O
]	O
It	O
makes	O
it	O
very	O
easy	O
to	O
get	O
Shiro	O
up	O
and	O
running	O
in	O
a	O
Tapestry	O
application	O
and	O
gives	O
you	O
some	O
easy	O
to	O
use	O
tags	O
to	O
use	O
in	O
your	O
templates	O
.	O
 -X-	O
	
 -X-	O
Shiro	B-Entity
is	O
n't	O
going	O
to	O
give	O
you	O
OpenID	O
","	O
OAuth	O
or	O
Facebook	O
integration	O
out	O
of	O
the	O
box	O
","	O
but	O
chances	O
are	O
high	O
you	O
will	O
need	O
to	O
customize	O
that	O
part	O
to	O
your	O
application	O
.	O
 -X-	O
	
Some	O
of	O
the	O
frameworks	O
that	O
build	O
on	O
Shiro	B-Entity
may	O
offer	O
more	O
of	O
what	O
you	O
are	O
looking	O
for	O
.	O
	
 -X-	O
For	O
example	O
","	O
URL_http	O
:	O
/	O
/	O
tynamo.org	O
/	O
tynamo-federatedaccounts+guide	O
[	O
URL_http	O
:	O
/	O
/	O
tynamo.org	O
/	O
tynamo-federatedaccounts+guide	O
]	O
will	O
give	O
you	O
more	O
support	O
for	O
federated	O
logins	O
in	O
a	O
tapestry	B-Entity
application	O
.	O
 -X-	O
	
 -X-	O
It	O
is	O
still	O
in	O
the	O
early	O
stages	O
","	O
but	O
might	O
be	O
working	O
looking	O
at	O
if	O
you	O
are	O
using	O
Tapestry	B-Entity
.	O
 -X-	O
	
 -X-	O
AppFuse	B-Entity
tries	O
to	O
do	O
this	O
","	O
but	O
it	O
aims	O
more	O
at	O
allowing	O
you	O
many	O
different	O
choices	O
when	O
it	O
comes	O
to	O
web	O
frameworks	O
.	O
 -X-	O
	
I	O
'd	O
look	O
at	O
Apache	O
Shiro	B-Entity
or	O
Spring	O
Security	O
.	O
	
 -X-	O
I	O
like	O
Prefuse	B-Entity
as	O
well	O
","	O
but	O
Visual	O
Library	O
's	O
api	O
is	O
more	O
Swing	B-Entity
like	O
if	O
you	O
are	O
a	O
Swing	O
developer	O
.	O
 -X-	O
	
Another	O
option	O
is	O
URL_http	O
:	O
/	O
/	O
www.graphviz.org	O
[	O
GraphViz	B-Entity
]	O
which	O
some	O
people	O
like	O
.	O
	
I	O
am	O
looking	O
for	O
a	O
Java	O
open	O
source	O
beautifier	O
or	O
reformatter	O
for	O
SQL	O
that	O
I	O
can	O
use	O
to	O
clean	O
up	O
DDL	O
statements	O
that	O
I	O
am	O
generating	O
with	O
URL_http	O
:	O
/	O
/	O
www.openarchitectureware.org	O
[	O
openArchitectureWare	B-Entity
]	O
.	O
	
2	O
:	O
**	O
org.hibernate.jdbc.util.BasicFormatterImpl	B-Entity
got	O
moved	O
in	O
release	O
4	O
.	O
 -X-	O
	
It	O
is	O
now	O
located	O
at	O
:	O
org.hibernate.engine.jdbc.internal.BasicFormatterImpl	B-Entity
.	O
	
 -X-	O
As	O
noted	O
by	O
Alex	O
","	O
org.hibernate.pretty.Formatter	B-Entity
no	O
longer	O
exists	O
as	O
of	O
version	O
3.3.2.GA	O
.	O
 -X-	O
	
The	O
replacement	O
is	O
org.hibernate.jdbc.util.BasicFormatterImpl	B-Entity
:	O
CODESNIPPET_JAVA1	O
.	O
	
ANSWER	O
:	O
**	O
If	O
you	O
're	O
using	O
Hibernate	O
","	O
they	O
've	O
got	O
one	O
built-in	O
:	O
org.hibernate.pretty.Formatter	B-Entity
CODESNIPPET_JAVA2	O
.	O
 -X-	O
	
 -X-	O
FYI	O
","	O
BasicFormatterImpl	B-Entity
does	O
not	O
handle	O
comments	O
'	O
--	O
'	O
and	O
DDLFormatter	O
is	O
even	O
more	O
primitive	O
see	O
URL_http	O
:	O
/	O
/	O
www.dil.univ-mrs.fr	O
/	O
~massat	O
/	O
docs	O
/	O
hibernate-3.1	O
/	O
api	O
/	O
o	O
rg	O
/	O
hibernate	O
/	O
pretty	O
/	O
DDLFormatter.html	O
#	O
format	O
(	O
)	O
.	O
 -X-	O
	
 -X-	O
The	O
page	O
describing	O
how	O
to	O
use	O
the	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
datatools	O
/	O
projec	O
t_sqldevtools	O
/	O
sqltools_doc	O
/	O
SQL	O
%	O
20Query	O
%	O
20Parser	O
%	O
20User	O
%	O
20documentation.htm	O
[	O
SQL-Query-Parser	O
]	O
has	O
an	O
extremely	O
brief	O
use	O
of	O
URL_http	O
:	O
/	O
/	O
help.eclipse.org	O
/	O
h	O
elp33	O
/	O
index.jsp	O
?	O
topic=	O
/	O
org.eclipse.datatools.doc.isv	O
/	O
html	O
/	O
reference	O
/	O
api	O
/	O
org	O
/	O
ec	O
lipse	O
/	O
datatools	O
/	O
modelbase	O
/	O
sql	O
/	O
query	O
/	O
util	O
/	O
SQLQuerySourceFormat.html	O
[	O
SQLQuerySourceFormat	B-Entity
]	O
which	O
provides	O
these	O
options	O
:	O
	
Perhaps	O
URL_http	O
:	O
/	O
/	O
jsqlparser.sourceforge.net	O
/	O
[	O
jsqlparser	B-Entity
]	O
will	O
work	O
for	O
you	O
.	O
	
 -X-	O
Preferably	O
with	O
syntax	O
like	O
URL_http	O
:	O
/	O
/	O
framework.zend.com	O
/	O
manual	O
/	O
en	O
/	O
zend.db.select.html	O
[	O
Zend_Db_Select	B-Entity
]	O
","	O
something	O
that	O
will	O
allow	O
to	O
make	O
a	O
query	O
like	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
URL_http	O
:	O
/	O
/	O
www.querydsl.com	O
/	O
[	O
Querydsl	B-Entity
]	O
and	O
URL_http	O
:	O
/	O
/	O
www.jooq.org	O
[	O
jOOQ	O
]	O
are	O
two	O
popular	O
choices	O
.	O
	
The	O
problem	O
with	O
QueryDsl	B-Entity
is	O
that	O
you	O
ca	O
n't	O
use	O
it	O
as	O
a	O
pure	O
query	O
generator	O
as	O
it	O
does	O
not	O
give	O
you	O
the	O
generated	O
query	O
itself	O
.	O
	
 -X-	O
Querydsl	B-Entity
and	O
jOOQ	O
seem	O
to	O
be	O
the	O
most	O
popular	O
and	O
mature	O
choices	O
however	O
there	O
's	O
one	O
thing	O
to	O
be	O
aware	O
of	O
:	O
Both	O
rely	O
on	O
the	O
concept	O
of	O
code	O
generation	O
","	O
where	O
meta	O
classes	O
are	O
generated	O
for	O
database	O
tables	O
and	O
fields	O
.	O
 -X-	O
	
The	O
documentation	O
of	O
Querydsl	B-Entity
does	O
n't	O
mention	O
whether	O
it	O
's	O
possible	O
to	O
not	O
use	O
code	O
generation	O
.	O
	
I	O
can	O
recommend	O
URL_http	O
:	O
/	O
/	O
www.jooq.org	O
[	O
jOOQ	B-Entity
]	O
.	O
	
URL_http	O
:	O
/	O
/	O
jsqlparser.sourceforge.net	O
/	O
[	O
JSqlParser	B-Entity
]	O
.	O
	
If	O
you	O
need	O
a	O
parser	O
there	O
should	O
be	O
a	O
parser	O
in	O
the	O
code	O
base	O
of	O
URL_http	O
:	O
/	O
/	O
db.apache.org	O
/	O
derby	O
/	O
[	O
Apache-Derby	B-Entity
]	O
.	O
 -X-	O
	
with	O
vendor-specific	O
SQL**	O
You	O
may	O
want	O
to	O
look	O
at	O
the	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
sql	O
/	O
Connection.html	O
#	O
nativeSQL	O
%	O
28java.lang.String	B-Entity
%	O
29	O
[	O
.native	O
(	O
)	O
]	O
method	O
on	O
the	O
jdbc	O
Connection	O
object	O
which	O
you	O
can	O
pass	O
it	O
vendor	O
neutral	O
queries	O
that	O
will	O
get	O
postprocessed	O
into	O
vendor	O
specific	O
queries	O
.	O
 -X-	O
	
That	O
native	B-Entity
(	I-Entity
)	I-Entity
method	O
looks	O
interesting	O
.	O
	
JSqlParser	B-Entity
is	O
also	O
a	O
good	O
option.although	O
it	O
has	O
some	O
bugs	O
(	O
or	O
some	O
features	O
not	O
implemented	O
)	O
while	O
parsing	O
oracle	O
pl	O
/	O
sql.see	O
its	O
forum	O
for	O
detail	O
.	O
	
 -X-	O
The	O
receiving	O
code	O
needs	O
to	O
be	O
put	O
inside	O
a	O
loop	O
","	O
so	O
that	O
everytime	O
someone	O
wants	O
to	O
connect	O
to	O
the	O
server	O
","	O
the	O
server	O
can	O
handle	O
the	O
request	O
and	O
then	O
go	O
back	O
to	O
waiting	O
on	O
serverSoc.accept	B-Entity
(	I-Entity
)	I-Entity
.	O
 -X-	O
	
 -X-	O
You	O
could	O
fairly	O
easily	O
use	O
this	O
to	O
serve	O
your	O
file	O
","	O
using	O
URLConnection	B-Entity
to	O
obtain	O
it	O
.	O
 -X-	O
	
 -X-	O
The	O
server	O
would	O
use	O
a	O
ServerSocket	B-Entity
to	O
listen	O
for	O
connections	O
","	O
and	O
the	O
Client	O
would	O
use	O
a	O
Socket	O
to	O
connect	O
to	O
that	O
server	O
on	O
the	O
specified	O
port	O
.	O
 -X-	O
	
 -X-	O
See	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-io	O
/	O
/	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
commo	O
ns	O
/	O
io	O
/	O
FileUtils.html	O
#	O
deleteDirectory	O
%	O
28java.io.File	O
%	O
29	O
[	O
FileUtils.deleteDirectory	B-Entity
(	I-Entity
)	I-Entity
]	O
	
Using	O
the	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
io	O
/	O
api-1.4	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
io	O
/	O
FileU	O
tils.html	O
#	O
deleteDirectory	O
%	O
28java.io.File	O
%	O
29	O
[	O
FileUtils.deleteDirectory	B-Entity
(	I-Entity
)	I-Entity
]	O
method	O
can	O
help	O
to	O
simplify	O
the	O
process	O
of	O
deleting	O
directory	O
and	O
everything	O
below	O
it	O
recursively	O
.	O
	
 -X-	O
I	O
need	O
the	O
advice	O
from	O
someone	O
who	O
knows	O
very	O
well	O
java	O
and	O
the	O
memory	O
issues.I	O
have	O
a	O
large	O
file	O
(	O
something	O
like	O
1.5GB	O
)	O
and	O
I	O
need	O
to	O
cut	O
this	O
file	O
in	O
many	O
(	O
100	O
small	O
files	O
for	O
example	O
)	O
smaller	O
files.I	O
Know	O
generally	O
how	O
to	O
do	O
it	O
(	O
using	O
a	O
BufferedReader	B-Entity
)	O
","	O
but	O
I	O
would	O
like	O
to	O
know	O
if	O
you	O
have	O
any	O
advice	O
regarding	O
the	O
memory	O
","	O
or	O
tips	O
how	O
to	O
do	O
it	O
faster.My	O
file	O
containt	O
text	O
","	O
it	O
is	O
not	O
binary	O
and	O
I	O
have	O
about	O
20	O
character	O
per	O
line	O
.	O
 -X-	O
	
 -X-	O
FileInputStream	B-Entity
","	O
ByteChannel	B-Entity
)	O
","	O
rather	O
than	O
character	O
APIs	O
(	O
BufferedReader	B-Entity
","	O
etc.	O
)	O
.	O
 -X-	O
	
 -X-	O
Yes	O
","	O
just	O
pipe	O
it	O
from	O
the	O
FileInputStream	B-Entity
to	O
the	O
FilOutputStream	B-Entity
using	O
only	O
a	O
suitably	O
sized	O
byte	O
buffer	O
array	O
.	O
 -X-	O
	
Using	O
lineStr.getBytes	B-Entity
(	I-Entity
)	I-Entity
.length	I-Entity
?	O
	
 -X-	O
If	O
you	O
actually	O
do	O
n't	O
worry	O
about	O
txt	O
lines	O
","	O
then	O
I	O
would	O
rather	O
use	O
InputStream	B-Entity
/	O
OutputStream	B-Entity
instead	O
and	O
count	O
the	O
transferred	O
bytes	O
.	O
 -X-	O
	
 -X-	O
You	O
can	O
consider	O
using	O
memory-mapped	O
files	O
","	O
via	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
nio	O
/	O
channels	O
/	O
FileChannel.html	O
[	O
FileChannel	B-Entity
]	O
s	O
.	O
 -X-	O
	
i	O
would	O
suggest	O
adding	O
a	O
custom	O
FilterOutputStream	B-Entity
between	O
the	O
FileOutputStream	O
(	O
on	O
the	O
bottom	O
)	O
and	O
OutputStreamWriter	O
.	O
	
 -X-	O
@	O
james	O
:	O
the	O
filter	O
wo	O
n't	O
yield	O
the	O
correct	O
result	O
when	O
there	O
's	O
a	O
BufferedWriter	B-Entity
above	O
it	O
","	O
though	O
the	O
difference	O
may	O
not	O
be	O
large	O
enough	O
to	O
matter	O
.	O
 -X-	O
	
You	O
can	O
use	O
java.nio	B-Entity
which	O
is	O
faster	O
than	O
classical	O
Input	O
/	O
Output	O
stream	O
:	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
technotes	O
/	O
guides	O
/	O
io	O
/	O
index.html	O
[	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
technotes	O
/	O
guides	O
/	O
io	O
/	O
index.html	O
]	O
.	O
	
Use	O
bufferedInputStream	B-Entity
because	O
it	O
supports	O
binary	O
reading	O
.	O
	
 -X-	O
I	O
also	O
think	O
that	O
using	O
read	O
(	O
)	O
with	O
arguments	O
like	O
read	O
(	O
Char	O
[	O
]	O
","	O
int	O
init	O
","	O
int	O
end	O
)	O
is	O
a	O
better	O
way	O
to	O
read	O
a	O
such	O
a	O
large	O
file	O
(	O
Eg	O
:	O
read	O
(	O
"buffer,0"	O
","	O
buffer.length	O
)	O
)	O
And	O
I	O
also	O
experienced	O
the	O
problem	O
of	O
missing	O
values	O
of	O
using	O
the	O
BufferedReader	B-Entity
instead	O
of	O
BufferedInputStreamReader	B-Entity
for	O
a	O
binary	O
data	O
input	O
stream	O
.	O
 -X-	O
	
 -X-	O
So	O
","	O
using	O
the	O
BufferedInputStreamReader	B-Entity
is	O
a	O
much	O
better	O
in	O
this	O
like	O
case	O
.	O
 -X-	O
	
 -X-	O
Java	O
7	O
introduces	O
byte	O
[	O
]	O
Files.readAllBytes	B-Entity
(	I-Entity
file	I-Entity
)	I-Entity
;	O
To	O
those	O
","	O
who	O
suggest	O
the	O
'one-line	O
'	O
Scanner	O
solution	O
:	O
Do	O
n't	O
yo	O
need	O
to	O
close	O
it	O
?	O
 -X-	O
	
 -X-	O
In	O
many	O
ways	O
","	O
a	O
ReadableByteChannel	B-Entity
is	O
like	O
an	O
InputStream	O
","	O
and	O
WritableByteChannel	B-Entity
is	O
like	O
an	O
OutputStream	O
.	O
 -X-	O
	
NIO	O
has	O
a	O
Charset	O
(	O
not	O
CharSet	O
)	O
class	O
called	O
java.nio.charset.Charset	B-Entity
.	O
	
 -X-	O
I	O
do	O
n't	O
really	O
care	O
about	O
encoding	O
","	O
could	O
I	O
just	O
use	O
Charset.defaultCharset	B-Entity
(	I-Entity
)	I-Entity
instead	O
of	O
having	O
an	O
argument	O
accepting	O
it	O
?	O
 -X-	O
	
 -X-	O
Commons	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-io	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
com	O
mons	O
/	O
io	O
/	O
FileUtils.html	O
#	O
readFileToString	B-Entity
%	O
28java.io.File	B-Entity
%	O
29	O
[	O
CODETERM1	O
]	O
:	O
	
by	O
Oscar	O
Reyes**	O
I	O
've	O
found	O
the	O
code	O
used	O
(	O
indirectly	O
)	O
by	O
that	O
class	O
:	O
URL_http	O
:	O
/	O
/	O
www.docjar.com	O
/	O
html	O
/	O
api	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
io	O
/	O
IOUtils.java.html	O
[	O
IOUtils.java	B-Entity
]	O
under	O
URL_http	O
:	O
/	O
/	O
www.apache.org	O
/	O
licenses	O
/	O
LICENSE-2.0	O
[	O
Apache-	O
Licence-2.0	O
]	O
CODESNIPPET_JAVA2	O
.	O
 -X-	O
	
It	O
's	O
in	O
the	O
class	O
org.apache.commons.io.FileUtils	B-Entity
.	O
	
 -X-	O
I	O
'm	O
using	O
FileUtils	B-Entity
too	O
","	O
but	O
I	O
'm	O
wondering	O
what	O
is	O
better	O
betwwen	O
using	O
FileUtils	O
or	O
the	O
accepted	O
nio	O
answer	O
?	O
 -X-	O
	
 -X-	O
If	O
you	O
do	O
have	O
Commons	O
IO	O
or	O
[	O
Guava	B-Entity
]	O
(	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
a	O
/	O
2224519	O
/	O
56285	O
)	O
in	O
your	O
project	O
","	O
then	O
use	O
that	O
(	O
just	O
for	O
code	O
simplicity	O
;	O
otherwise	O
there	O
likely	O
wo	O
n't	O
be	O
a	O
noticeable	O
difference	O
)	O
.	O
 -X-	O
	
 -X-	O
The	O
default	O
size	O
of	O
the	O
buffer	O
is	O
1024	O
","	O
but	O
Scanner	B-Entity
will	O
increase	O
the	O
size	O
as	O
necessary	O
(	O
see	O
Scanner	O
#	O
makeSpace	O
(	O
)	O
)	O
.	O
 -X-	O
	
This	O
one	O
fails	O
for	O
empty	O
files	O
with	O
a	O
java.util.NoSuchElementException	B-Entity
.	O
	
URL_http	O
:	O
/	O
/	O
code.google.com	O
/	O
p	O
/	O
guava-libraries	O
/	O
[	O
Guava	B-Entity
]	O
has	O
a	O
method	O
similar	O
to	O
the	O
one	O
from	O
Commons	O
IOUtils	O
that	O
Willi	O
aus	O
Rohr	O
mentioned	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
The	O
code	O
in	O
the	O
answer	O
is	O
n't	O
the	O
actual	O
","	O
current	O
Guava	B-Entity
source	O
.	O
 -X-	O
	
 -X-	O
Here	O
's	O
an	O
alternative	O
which	O
does	O
n't	O
do	O
that	O
","	O
and	O
which	O
is	O
(	O
IMO	O
)	O
simpler	O
to	O
understand	O
than	O
the	O
NIO	O
code	O
(	O
although	O
it	O
still	O
uses	O
java.nio.charset.Charset	B-Entity
)	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
No	O
real	O
need	O
to	O
close	O
the	O
BufferedReader	B-Entity
/	O
InputStreamReader	B-Entity
as	O
they	O
're	O
only	O
wrapping	O
the	O
stream	O
1	O
!	O
!	O
	
Perhaps	O
there	O
is	O
a	O
more	O
suitable	O
java.io.File	B-Entity
method	O
(	O
something	O
like	O
getLength	O
(	O
)	O
?	O
	
You	O
need	O
to	O
use	O
a	O
readFull	B-Entity
(	I-Entity
)	I-Entity
method	O
and	O
File.length	B-Entity
(	I-Entity
)	I-Entity
.	O
	
Is	O
the	O
very	O
foundation	O
of	O
swing	B-Entity
","	O
it	O
performs	O
well	O
but	O
is	O
lacking	O
in	O
advanced	O
components	O
.	O
 -X-	O
	
 -X-	O
If	O
you	O
intend	O
to	O
create	O
rich	O
applications	O
","	O
AWT	B-Entity
is	O
probably	O
not	O
the	O
way	O
to	O
go	O
.	O
 -X-	O
	
Based	O
on	O
AWT	B-Entity
as	O
previously	O
stated	O
.	O
 -X-	O
	
Swing	B-Entity
has	O
a	O
lot	O
of	O
rich	O
components	O
but	O
are	O
still	O
lacking	O
in	O
some	O
areas	O
.	O
	
One	O
example	O
being	O
that	O
there	O
is	O
n't	O
a	O
full	O
featured	O
TreeTable	B-Entity
component	O
which	O
can	O
do	O
sorting	O
and	O
filtering	O
/	O
searching	O
.	O
	
Created	O
by	O
IBM	O
for	O
Eclipse	O
","	O
they	O
seemed	O
to	O
think	O
that	O
Swing	B-Entity
was	O
not	O
suited	O
for	O
Eclipse	O
at	O
the	O
time	O
.	O
 -X-	O
	
It	O
is	O
not	O
related	O
to	O
Swing	B-Entity
and	O
AWT	B-Entity
at	O
all	O
.	O
	
They	O
do	O
have	O
some	O
advanced	O
component	O
's	O
like	O
a	O
TreeTable	B-Entity
.	O
	
SWT	B-Entity
uses	O
some	O
native	O
bindings	O
(	O
through	O
JNI	O
?	O
	
Based	O
on	O
Swing	B-Entity
and	O
it	O
's	O
mission	O
is	O
to	O
create	O
rich	O
components	O
for	O
swing	O
.	O
 -X-	O
	
 -X-	O
)	O
Have	O
a	O
very	O
nice	O
set	O
of	O
components	O
","	O
like	O
for	O
example	O
TreeTable	B-Entity
.	O
 -X-	O
	
But	O
the	O
TreeTable	B-Entity
does	O
not	O
support	O
filtering	O
and	O
sorting	O
as	O
far	O
as	O
i	O
know	O
.	O
	
Note	O
that	O
SwingX	B-Entity
is	O
components	O
(	O
AFAIU	O
)	O
that	O
are	O
extensions	O
or	O
compositions	O
of	O
existing	O
Swing	O
components	O
	
What	O
set	O
's	O
Jgoodies	B-Entity
apart	O
from	O
the	O
rest	O
?	O
	
JGoodies	B-Entity
OTOH	O
is	O
about	O
PLAFs	O
and	O
layouts	O
.	O
 -X-	O
	
It	O
renders	O
UI	O
using	O
Java2D	O
","	O
thus	O
minimizing	O
the	O
impact	O
of	O
(	O
IMO	O
","	O
bloated	O
)	O
legacies	O
of	O
Swing	B-Entity
and	O
AWT	B-Entity
.	O
 -X-	O
	
I	O
am	O
using	O
JFace	B-Entity
and	O
RCP	B-Entity
for	O
rich	O
clients	O
.	O
	
Both	O
are	O
SWT	B-Entity
based	O
and	O
provide	O
UI	O
features	O
and	O
helpers	O
that	O
would	O
be	O
tedius	O
to	O
implement	O
in	O
native	O
SWT	O
.	O
	
 -X-	O
Or	O
to	O
put	O
that	O
another	O
way	O
","	O
it	O
would	O
look	O
much	O
like	O
the	O
equivalent	O
Swing	B-Entity
components	O
when	O
they	O
are	O
set	O
to	O
the	O
native	O
PLAF	O
.	O
 -X-	O
	
AWT	B-Entity
's	O
major	O
failing	O
is	O
it	O
's	O
lack	O
of	O
components	O
&	O
functionality	O
.	O
	
 -X-	O
I	O
was	O
n't	O
aware	O
that	O
SWT	B-Entity
was	O
 -X-	O
 -X-	O
based	O
on	O
a	O
combination	O
of	O
AWT	B-Entity
and	O
Swing	O
 -X-	O
 -X-	O
.	O
 -X-	O
	
 -X-	O
AWT	B-Entity
","	O
Swing	B-Entity
and	O
SWT	B-Entity
are	O
UI	O
toolkits	O
but	O
I	O
would	O
certainly	O
not	O
call	O
them	O
 -X-	O
 -X-	O
frameworks	O
 -X-	O
 -X-	O
.	O
 -X-	O
	
 -X-	O
It	O
's	O
almost	O
always	O
Swing	B-Entity
vs.	O
SWT	B-Entity
(	O
for	O
me	O
at	O
least	O
)	O
","	O
for	O
small	O
comparison	O
you	O
could	O
check	O
[	O
What	O
are	O
the	O
main	O
things	O
that	O
an	O
experienced	O
Java	O
SWT	O
programmer	O
should	O
be	O
aware	O
of	O
when	O
moving	O
to	O
Swing	O
?	O
 -X-	O
	
 -X-	O
I	O
just	O
use	O
AWT	B-Entity
and	O
Swing	B-Entity
and	O
I	O
can	O
do	O
almost	O
everythig	O
","	O
so	O
thumbs	O
up	O
for	O
them	O
:	O
)	O
.	O
 -X-	O
	
 -X-	O
If	O
you	O
have	O
a	O
choice	O
here	O
","	O
you	O
should	O
prefer	O
Qt	B-Entity
over	O
SWT	B-Entity
.	O
 -X-	O
	
 -X-	O
Without	O
JFace	B-Entity
","	O
you	O
're	O
missing	O
many	O
major	O
UI	O
components	O
or	O
very	O
important	O
features	O
of	O
UI	O
components	O
(	O
like	O
filtering	O
on	O
tables	O
)	O
.	O
 -X-	O
	
 -X-	O
If	O
SWT	B-Entity
is	O
missing	O
a	O
feature	O
that	O
you	O
need	O
","	O
the	O
framework	O
is	O
somewhat	O
hostile	O
to	O
extending	O
it	O
.	O
 -X-	O
	
 -X-	O
Let	O
's	O
start	O
with	O
AWT	B-Entity
","	O
Swing	B-Entity
","	O
SwingX	B-Entity
-	O
the	O
Swing	O
way	O
.	O
 -X-	O
	
AWT	B-Entity
is	O
outdated	O
.	O
	
Swing	B-Entity
is	O
outdated	O
(	O
maybe	O
less	O
so	O
but	O
not	O
much	O
work	O
has	O
been	O
done	O
on	O
Swing	O
for	O
the	O
past	O
10	O
years	O
)	O
.	O
	
You	O
could	O
argue	O
that	O
Swing	B-Entity
was	O
good	O
to	O
begin	O
with	O
but	O
we	O
all	O
know	O
that	O
code	O
rots	O
.	O
	
That	O
leaves	O
you	O
with	O
SwingX	B-Entity
.	O
	
 -X-	O
The	O
major	O
drawback	O
with	O
Swing	B-Entity
is	O
that	O
it	O
hangs	O
on	O
to	O
some	O
old	O
ideas	O
which	O
very	O
kind	O
of	O
bleeding	O
edge	O
15	O
years	O
ago	O
but	O
which	O
feel	O
 -X-	O
 -X-	O
clumsy	O
 -X-	O
 -X-	O
today	O
.	O
 -X-	O
	
 -X-	O
JGoodies	B-Entity
is	O
another	O
layer	O
on	O
top	O
of	O
Swing	B-Entity
","	O
like	O
SwingX	B-Entity
.	O
 -X-	O
	
It	O
tries	O
to	O
make	O
Swing	B-Entity
more	O
pleasant	O
to	O
use	O
.	O
	
That	O
does	O
n't	O
mean	O
JGoodies	B-Entity
is	O
bad	O
;	O
I	O
just	O
could	O
n't	O
find	O
anything	O
good	O
to	O
say	O
about	O
it	O
but	O
that	O
it	O
looks	O
nice	O
.	O
	
It	O
's	O
basically	O
a	O
new	O
UI	O
framework	O
based	O
on	O
Java2D	B-Entity
.	O
	
 -X-	O
No	O
Swing	B-Entity
","	O
just	O
tiny	O
bit	O
of	O
AWT	B-Entity
(	O
CODETERM3	O
)	O
.	O
 -X-	O
	
 -X-	O
By	O
looking	O
at	O
the	O
Pivot	B-Entity
docs	O
","	O
a	O
lot	O
of	O
effort	O
must	O
have	O
went	O
into	O
the	O
code	O
.	O
 -X-	O
	
My	O
second	O
impression	O
of	O
Pivot	B-Entity
is	O
that	O
it	O
's	O
easy	O
to	O
use	O
.	O
	
 -X-	O
As	O
with	O
JavaFX	B-Entity
","	O
it	O
's	O
missing	O
some	O
higher	O
level	O
components	O
like	O
a	O
tree	O
table	O
component	O
(	O
URL_https	O
:	O
/	O
/	O
issues.apache.org	O
/	O
jira	O
/	O
browse	O
/	O
PIVOT-306	O
[	O
PIVOT-306	O
]	O
)	O
.	O
 -X-	O
	
 -X-	O
With	O
respect	O
to	O
JavaFXs	B-Entity
webview	O
","	O
it	O
's	O
based	O
on	O
webkit	O
URL_http	O
:	O
/	O
/	O
docs.oracle.com	O
/	O
javafx	O
/	O
2	O
/	O
webview	O
/	O
jfxpub-webview.htm	O
and	O
from	O
a	O
few	O
short	O
tests	O
that	O
i	O
have	O
done	O
it	O
seems	O
to	O
work	O
fine	O
with	O
js	O
in	O
general	O
(	O
including	O
jquery	O
and	O
jqueryui	O
)	O
.	O
 -X-	O
	
 -X-	O
Not	O
sure	O
if	O
this	O
just	O
was	O
n't	O
TRUE	O
at	O
the	O
time	O
of	O
writing	O
","	O
but	O
the	O
JavaFX	B-Entity
site	O
states	O
that	O
it	O
supports	O
Linux	O
.	O
 -X-	O
	
JavaFX	B-Entity
is	O
bundled	O
with	O
Java	O
7	O
since	O
u06	O
.	O
	
JavaFX	O
8	O
(	O
for	O
Java	O
8	O
and	O
above	O
)	O
has	O
a	O
TreeTableView	B-Entity
widget	O
.	O
	
 -X-	O
However	O
","	O
JavaFX	B-Entity
2.2	O
(	O
for	O
Java	O
7	O
)	O
lacks	O
this	O
","	O
and	O
also	O
lacks	O
standard	O
error	O
and	O
info	O
dialgos	O
:	O
see	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
a	O
/	O
12760202	O
/	O
105137	O
.	O
 -X-	O
	
Also	O
the	O
ControlsFX	B-Entity
widget	O
library	O
is	O
available	O
for	O
Java	O
8	O
only	O
:	O
URL_http	O
:	O
/	O
/	O
fxexperience.com	O
/	O
controlsfx	O
/	O
.	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
swt	O
/	O
[	O
SWT	B-Entity
]	O
by	O
itself	O
is	O
pretty	O
low-level	O
","	O
and	O
it	O
uses	O
the	O
platform	O
's	O
native	O
widgets	O
through	O
JNI	O
.	O
 -X-	O
	
It	O
is	O
not	O
related	O
to	O
Swing	B-Entity
and	O
AWT	B-Entity
at	O
all	O
.	O
	
 -X-	O
The	O
URL_http	O
:	O
/	O
/	O
eclipse.org	O
[	O
Eclipse-IDE	O
]	O
and	O
all	O
Eclipse-based	O
Rich	O
Client	O
Applications	O
","	O
like	O
the	O
URL_https	O
:	O
/	O
/	O
www.vuze.com	O
/	O
[	O
Vuze-BitTorrent-	O
client	O
]	O
","	O
are	O
built	O
using	O
SWT	B-Entity
.	O
 -X-	O
	
 -X-	O
Also	O
","	O
if	O
you	O
are	O
developing	O
Eclipse	O
plugins	O
","	O
you	O
will	O
typically	O
use	O
SWT	B-Entity
.	O
 -X-	O
	
 -X-	O
However	O
","	O
I	O
also	O
have	O
extensive	O
experience	O
in	O
working	O
with	O
SWT	B-Entity
and	O
the	O
URL_http	O
:	O
/	O
/	O
wiki.eclipse.org	O
/	O
index.php	O
/	O
JFace	O
[	O
JFace-	O
UI-toolkit	O
]	O
","	O
which	O
is	O
built	O
on	O
top	O
of	O
it	O
.	O
 -X-	O
	
I	O
have	O
found	O
JFace	B-Entity
to	O
be	O
very	O
rich	O
and	O
powerful	O
;	O
in	O
some	O
cases	O
it	O
might	O
even	O
be	O
the	O
main	O
reason	O
for	O
choosing	O
SWT	B-Entity
.	O
	
 -X-	O
In	O
your	O
opinion	O
","	O
would	O
an	O
advanced	O
component	O
like	O
a	O
TreeTable	B-Entity
with	O
column	O
sorting	O
and	O
filtering	O
be	O
a	O
big	O
issue	O
with	O
SWT+JFace	O
?	O
 -X-	O
	
 -X-	O
@	O
netbrain	O
:	O
I	O
have	O
done	O
that	O
numerous	O
times	O
","	O
it	O
's	O
fairly	O
straightforward	O
with	O
JFace	B-Entity
.	O
 -X-	O
	
 -X-	O
It	O
renders	O
UI	O
using	O
Java2D	O
","	O
thus	O
minimizing	O
the	O
impact	O
of	O
(	O
IMO	O
","	O
bloated	O
)	O
legacies	O
of	O
Swing	B-Entity
and	O
AWT	B-Entity
.	O
 -X-	O
	
 -X-	O
For	O
RIA	O
frameworks	O
","	O
consider	O
also	O
GWT	B-Entity
and	O
Vaadin	B-Entity
.	O
 -X-	O
	
 -X-	O
Maybe	O
it	O
is	O
a	O
matter	O
of	O
definition	O
","	O
but	O
RIA	B-Entity
frameworks	O
are	O
basically	O
designed	O
to	O
run	O
in	O
browsers	O
.	O
 -X-	O
	
 -X-	O
@	O
netbrain	O
:	O
Yes	O
","	O
you	O
can	O
run	O
Pivot	B-Entity
as	O
desktop	O
app	O
(	O
JFrame	O
)	O
or	O
applet	O
(	O
JApplet	O
)	O
.	O
 -X-	O
	
Miglayout	B-Entity
is	O
so	O
much	O
simpler	O
than	O
Swings	B-Entity
perceived	O
200	O
different	O
layout	O
managers	O
and	O
much	O
more	O
powerful	O
.	O
	
You	O
might	O
want	O
to	O
see	O
the	O
discussion	O
about	O
Swing	B-Entity
vs.	O
Qt	B-Entity
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
questions	O
/	O
422956	O
/	O
java-swing-or-java-qt	O
[	O
here	O
]	O
.	O
	
My	O
personal	O
opinion	O
:	O
Go	O
for	O
Swing	B-Entity
together	O
with	O
the	O
NetBeans	B-Entity
platform	O
.	O
	
If	O
you	O
need	O
advanced	O
components	O
(	O
more	O
than	O
NetBeans	B-Entity
offers	O
)	O
you	O
can	O
easily	O
integrate	O
SwingX	O
without	O
problems	O
(	O
or	O
JGoodies	O
)	O
as	O
the	O
NetBeans	O
platform	O
is	O
completely	O
based	O
on	O
Swing	B-Entity
.	O
	
 -X-	O
The	O
other	O
option	O
is	O
SWT	B-Entity
together	O
with	O
the	O
Eclipse	O
RCP	O
","	O
but	O
it	O
's	O
harder	O
(	O
though	O
not	O
impossible	O
)	O
to	O
integrate	O
 -X-	O
 -X-	O
pure	O
 -X-	O
 -X-	O
Swing	O
components	O
into	O
such	O
an	O
application	O
.	O
 -X-	O
	
The	O
learning	O
curve	O
is	O
a	O
bit	O
steep	O
for	O
the	O
NetBeans	B-Entity
platform	O
(	O
although	O
I	O
guess	O
that	O
's	O
TRUE	O
for	O
Eclipse	O
as	O
well	O
)	O
but	O
there	O
are	O
some	O
good	O
books	O
around	O
which	O
I	O
would	O
highly	O
recommend	O
.	O
	
Note	O
that	O
SwingX	O
is	O
components	O
(	O
AFAIU	O
)	O
that	O
are	O
extensions	O
or	O
compositions	O
of	O
existing	O
Swing	B-Entity
components	O
.	O
	
JGoodies	B-Entity
OTOH	I-Entity
is	O
about	O
PLAFs	O
and	O
layouts	O
.	O
	
 -X-	O
But	O
as	O
you	O
said	O
","	O
either	O
will	O
integrate	O
seamlessly	O
with	O
Swing	B-Entity
.	O
 -X-	O
	
1	O
Base	O
your	O
development	O
on	O
Swing	B-Entity
.	O
	
 -X-	O
Swing	B-Entity
is	O
built	O
on	O
top	O
of	O
AWT	B-Entity
and	O
includes	O
light-weight	O
components	O
that	O
look	O
and	O
behave	O
the	O
same	O
on	O
all	O
platforms	O
","	O
so	O
you	O
never	O
should	O
use	O
AWT	O
components	O
directly	O
.	O
 -X-	O
	
There	O
is	O
a	O
large	O
number	O
of	O
excellent	O
Beans	B-Entity
you	O
could	O
easily	O
add	O
to	O
your	O
development	O
GUI	O
like	O
i.e	O
.	O
	
 -X-	O
@	O
Andrew	O
in	O
addition	O
to	O
PLAF	O
and	O
layout	O
","	O
JGoodies	B-Entity
offers	O
more	O
:	O
beans	O
binding	O
(	O
for	O
presentation	O
model	O
pattern	O
)	O
","	O
validation	O
and	O
a	O
 -X-	O
 -X-	O
JSR-296	O
like	O
 -X-	O
 -X-	O
framework	O
(	O
that	O
one	O
is	O
commercial	O
)	O
.	O
 -X-	O
	
 -X-	O
you	O
forgot	O
for	O
Java	O
Desktop	O
Aplication	O
based	O
on	O
JSR296	O
as	O
built-in	O
Swing	O
Framework	O
in	O
NetBeans	O
excluding	O
AWT	B-Entity
and	O
JavaFX	O
are	O
all	O
of	O
your	O
desribed	O
frameworks	O
are	O
based	O
on	O
Swing	O
","	O
if	O
you	O
'll	O
start	O
with	O
Swing	O
then	O
you	O
'd	O
be	O
understand	O
(	O
clearly	O
)	O
for	O
all	O
these	O
Swing	O
's	O
(	O
Based	O
Frameworks	O
)	O
ATW	O
","	O
SWT	B-Entity
(	O
Eclipse	O
)	O
","	O
Java	O
Desktop	O
Aplication	O
(	O
Netbeans	B-Entity
)	O
","	O
SwingX	B-Entity
","	O
JGoodies	B-Entity
all	O
there	O
frameworks	O
(	O
I	O
do	O
n't	O
know	O
something	O
more	O
about	O
JGoodies	O
)	O
incl	O
.	O
 -X-	O
	
 -X-	O
JavaFX	B-Entity
have	O
n't	O
long	O
time	O
any	O
progress	O
","	O
lots	O
of	O
Swing	O
's	O
Based	O
Frameworks	O
are	O
stoped	O
","	O
if	O
not	O
then	O
without	O
newest	O
version	O
just	O
my	O
view	O
-	O
best	O
of	O
them	O
is	O
SwingX	O
","	O
but	O
required	O
deepest	O
knowledge	O
about	O
Swing	O
","	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
questions	O
/	O
3954616	O
/	O
look-and-feel-in-java	O
[	O
Look-	O
and-Feel	O
]	O
for	O
Swing	O
's	O
Based	O
Frameworks	O
.	O
 -X-	O
	
SWT	B-Entity
is	O
n't	O
based	O
on	O
swing	B-Entity
?	O
	
 -X-	O
part	O
of	O
them	O
on	O
AWT	O
Components	O
","	O
part	O
on	O
Swing	O
JCompoentns	O
","	O
but	O
between	O
AWT	B-Entity
and	O
Swing	B-Entity
is	O
difference	O
with	O
implemented	O
","	O
accesible	O
and	O
inherits	O
methods	O
","	O
for	O
example	O
Swing	O
JComponents	O
directly	O
(	O
API	O
)	O
implements	O
lots	O
of	O
inherit	O
or	O
nested	O
methods	O
directly	O
from	O
AWT	O
:	O
-	O
)	O
.	O
 -X-	O
	
The	O
JSR296	B-Entity
is	O
dead	O
.	O
	
 -X-	O
It	O
is	O
no	O
longer	O
 -X-	O
 -X-	O
maintained	O
 -X-	O
 -X-	O
and	O
the	O
support	O
for	O
it	O
has	O
been	O
removed	O
from	O
NetBeans	B-Entity
.	O
 -X-	O
	
 -X-	O
@	O
a_horse_with_no_name	O
that	O
right	O
with	O
same	O
progress	O
in	O
SWT	B-Entity
","	O
SwingX	B-Entity
","	O
new	O
owner	O
","	O
new	O
maniers	O
.	O
 -X-	O
	
 -X-	O
SWT	B-Entity
","	O
developed	O
by	O
IBM	O
","	O
is	O
not	O
based	O
on	O
Swing	B-Entity
","	O
it	O
is	O
/	O
was	O
a	O
competing	O
technology	O
.	O
 -X-	O
	
Swing	B-Entity
uses	O
AWT	B-Entity
.	O
	
JavaFX	B-Entity
is	O
n't	O
based	O
on	O
Swing	B-Entity
either	O
.	O
	
 -X-	O
Some	O
are	O
calling	O
it	O
the	O
successor	O
to	O
Swing	B-Entity
","	O
but	O
it	O
's	O
still	O
too	O
immature	O
to	O
call	O
that	O
battle	O
.	O
 -X-	O
	
 -X-	O
SwingX	B-Entity
is	O
extensions	O
to	O
Swing	B-Entity
(	O
which	O
is	O
why	O
it	O
requires	O
Swing	O
knowledge	O
)	O
","	O
in	O
fact	O
","	O
some	O
of	O
SwingX	O
's	O
features	O
have	O
been	O
rolled	O
into	O
Swing	O
itself	O
.	O
 -X-	O
	
I	O
've	O
been	O
quite	O
happy	O
with	O
Swing	B-Entity
for	O
the	O
desktop	O
applications	O
I	O
've	O
been	O
involved	O
in	O
.	O
	
 -X-	O
However	O
","	O
I	O
do	O
share	O
your	O
view	O
on	O
Swing	B-Entity
not	O
offering	O
advanced	O
components	O
.	O
 -X-	O
	
 -X-	O
Specifically	O
","	O
they	O
do	O
offer	O
a	O
filterable	O
TreeTable	B-Entity
.	O
 -X-	O
	
So	O
JIDE	O
has	O
created	O
their	O
own	O
components	O
based	O
on	O
Swing	B-Entity
...	O
	
 -X-	O
Furthermore	O
","	O
as	O
far	O
as	O
I	O
understand	O
","	O
JIDE	B-Entity
is	O
flexible	O
with	O
regards	O
to	O
letting	O
open	O
source	O
projects	O
use	O
their	O
components	O
in	O
exchange	O
for	O
a	O
link	O
to	O
their	O
website	O
or	O
a	O
logo	O
in	O
the	O
'About	O
'	O
dialog	O
.	O
 -X-	O
	
I	O
would	O
go	O
with	O
Swing	B-Entity
.	O
	
For	O
layout	O
I	O
would	O
use	O
JGoodies	B-Entity
form	O
layout	O
.	O
	
Here	O
's	O
the	O
link	O
to	O
browse	O
the	O
code	O
:	O
URL_http	O
:	O
/	O
/	O
swingobj.svn.sourceforge.net	O
/	O
viewvc	O
/	O
swingobj	O
/	O
[	O
URL_http	O
:	O
/	O
/	O
swingobj.svn.sourceforge.net	O
/	O
viewvc	O
/	O
swingobj	B-Entity
/	O
]	O
The	O
showcase	O
should	O
show	O
you	O
how	O
to	O
do	O
a	O
simple	O
logon	O
actually..	O
Let	O
me	O
know	O
if	O
you	O
have	O
any	O
questions	O
on	O
it	O
I	O
could	O
help	O
.	O
	
Is	O
this	O
GUI	O
threadsafe	O
(	O
Using	O
Swing	B-Entity
)	O
?	O
	
The	O
problem	O
is	O
that	O
you	O
were	O
probably	O
blocking	O
the	O
main	O
Swing	B-Entity
event	O
thread	O
(	O
the	O
thread	O
that	O
handles	O
things	O
like	O
button	O
clicks	O
)	O
.	O
	
IDE	O
for	O
Swing	B-Entity
.	O
	
Is	O
there	O
any	O
IDE	O
that	O
simplifies	O
creating	O
Swing	B-Entity
applications	O
(	O
ideally	O
something	O
along	O
the	O
lines	O
of	O
Visual	O
Studio	O
)	O
.	O
	
 -X-	O
@	O
Thorbjrn	O
Ravn	O
Andersen	O
news	O
only	O
all	O
answers	O
about	O
Netbeans	O
and	O
Framework	O
based	O
on	O
JSR296	B-Entity
are	O
outdated	O
because	O
this	O
Swing	O
Framework	O
was	O
refused	O
by	O
Oracle	O
","	O
and	O
later	O
was	O
depreciated	O
in	O
the	O
Netbeans	O
Platform	O
.	O
 -X-	O
	
 -X-	O
@	O
mKorbel	O
SAF	B-Entity
is	O
deprecated	O
","	O
Swing	B-Entity
is	O
not	O
.	O
 -X-	O
	
 -X-	O
I	O
talked	O
about	O
Swing	B-Entity
:	O
-	O
)	O
","	O
only	O
about	O
Swing	O
Framework	O
or	O
Framework	O
based	O
on	O
JSR296	B-Entity
.	O
 -X-	O
	
Matisse	O
did	O
use	O
to	O
have	O
an	O
extra	O
dependency	O
on	O
GroupLayout	O
but	O
now	O
it	O
's	O
included	O
in	O
jre	O
so	O
there	O
is	O
no	O
dependency	O
on	O
SAF	B-Entity
.	O
	
 -X-	O
Those	O
are	O
stored	O
in	O
properties	O
files	O
that	O
are	O
automatically	O
managed	O
(	O
loading	O
","	O
structure	O
)	O
by	O
the	O
SAF	B-Entity
.	O
 -X-	O
	
 -X-	O
It	O
's	O
all	O
built-in	O
to	O
the	O
latest	O
JREs	B-Entity
so	O
you	O
do	O
n't	O
need	O
extra	O
jars	O
","	O
but	O
you	O
do	O
need	O
to	O
understand	O
the	O
architecture	O
of	O
the	O
SAF	B-Entity
in	O
order	O
to	O
use	O
it	O
effectively	O
.	O
 -X-	O
	
It	O
does	O
not	O
depend	O
on	O
the	O
Swing	B-Entity
Application	O
Framework	O
at	O
all	O
.	O
	
You	O
do	O
not	O
have	O
to	O
know	O
anything	O
about	O
the	O
SAF	B-Entity
.	O
	
I	O
have	O
done	O
multiple	O
projects	O
in	O
Swing	B-Entity
on	O
NetBeans	O
and	O
I	O
know	O
absolutely	O
nothing	O
about	O
the	O
SAF	B-Entity
.	O
	
But	O
that	O
was	O
2+	O
years	O
ago	O
and	O
I	O
have	O
n't	O
really	O
used	O
Netbeans	B-Entity
heavily	O
since	O
so	O
I	O
do	O
not	O
know	O
how	O
things	O
have	O
changed	O
with	O
the	O
latest	O
releases	O
.	O
	
is	O
a	O
picture	O
of	O
the	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
windowbuilder	O
/	O
[	O
Windowbuilder	B-Entity
]	O
plugin	O
:	O
**	O
!	O
 -X-	O
	
 -X-	O
For	O
me	O
","	O
the	O
best	O
visual	O
swing	O
editor	O
is	O
URL_http	O
:	O
/	O
/	O
www.jformdesigner.com	O
[	O
JFormDesigner	B-Entity
]	O
","	O
which	O
you	O
can	O
run	O
standalone	O
or	O
as	O
a	O
plugin	O
for	O
Intellij	O
and	O
Eclipse	O
.	O
 -X-	O
	
 -X-	O
That	O
last	O
point	O
is	O
really	O
important	O
","	O
because	O
if	O
you	O
want	O
to	O
build	O
a	O
decent	O
swing	B-Entity
application	O
","	O
you	O
'll	O
have	O
to	O
extend	O
the	O
base	O
components	O
or	O
use	O
some	O
third-party	O
libraries	O
and	O
it	O
	
JFormDesinger	B-Entity
is	O
the	O
most	O
polished	O
GUI	O
Builder	O
I	O
've	O
ever	O
seen	O
.	O
	
 -X-	O
The	O
WindowBuilder	B-Entity
items	O
are	O
under	O
 -X-	O
 -X-	O
General	O
Purpose	O
Tools	O
 -X-	O
 -X-	O
(	O
or	O
use	O
the	O
filter	O
)	O
Older	O
versions	O
and	O
zips	O
are	O
available	O
at	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
windowbuilder	O
/	O
download.php	O
[	O
URL_http	O
:	O
/	O
/	O
www.eclipse.org	O
/	O
windowbuilder	O
/	O
download.php	O
]	O
.	O
 -X-	O
	
URL_https	O
:	O
/	O
/	O
java.net	O
/	O
projects	O
/	O
abeille	O
/	O
[	O
Abeille	B-Entity
]	O
is	O
very	O
good	O
and	O
is	O
based	O
on	O
the	O
JGoodies	O
FormLayout	O
.	O
	
 -X-	O
Unlike	O
almost	O
every	O
other	O
Java	O
GUI	O
builder	O
","	O
Abeille	B-Entity
does	O
not	O
generate	O
code	O
by	O
default	O
.	O
 -X-	O
	
 -X-	O
I	O
have	O
used	O
Matisse	B-Entity
","	O
the	O
NetBeans	O
GUI	O
code	O
generator	O
.	O
 -X-	O
	
 -X-	O
While	O
Matisse	B-Entity
(	O
now	O
known	O
as	O
 -X-	O
 -X-	O
URL_http	O
:	O
/	O
/	O
netbeans.org	O
/	O
features	O
/	O
java	O
/	O
swing.html	O
[	O
Swing-GUI-Builder	O
]	O
 -X-	O
 -X-	O
)	O
makes	O
it	O
pleasant	O
to	O
layout	O
components	O
","	O
it	O
is	O
similar	O
to	O
all	O
other	O
code	O
generation	O
tools	O
because	O
when	O
you	O
use	O
Matisse	O
you	O
must	O
live	O
in	O
constant	O
fear	O
that	O
someone	O
else	O
edited	O
the	O
 -X-	O
 -X-	O
you	O
can	O
not	O
edit	O
this	O
in	O
NetBeans	O
 -X-	O
 -X-	O
GUI	O
sections	O
outside	O
of	O
NetBeans	O
.	O
 -X-	O
	
The	O
latest	O
version	O
of	O
NetBeans	B-Entity
include	O
a	O
very	O
nice	O
and	O
simple	O
visual	O
editor	O
for	O
Swing	B-Entity
called	O
Matisse	B-Entity
URL_http	O
:	O
/	O
/	O
www.netbeans.org	O
/	O
kb	O
/	O
articles	O
/	O
matisse.html	O
[	O
Matisse	O
]	O
.	O
	
Netbeans	B-Entity
is	O
the	O
simplest	O
to	O
use	O
(	O
URL_http	O
:	O
/	O
/	O
netbeans.org	O
/	O
[	O
URL_http	O
:	O
/	O
/	O
netbeans.org	O
/	O
]	O
)	O
.	O
	
 -X-	O
JDeveloper	B-Entity
(	O
URL_http	O
:	O
/	O
/	O
www.oracle.com	O
/	O
technetwork	O
/	O
developer-tools	O
/	O
jdev	O
/	O
overview	O
/	O
index.html	O
[	O
URL_http	O
:	O
/	O
/	O
www.oracle.com	O
/	O
technetwork	O
/	O
developer-tools	O
/	O
jdev	O
/	O
overview	O
/	O
index.html	O
]	O
)	O
is	O
another	O
solution	O
","	O
and	O
does	O
allow	O
you	O
to	O
edit	O
the	O
code	O
...	O
but	O
I	O
feel	O
netbeans	O
more	O
intuitive	O
.	O
 -X-	O
	
I	O
always	O
thought	O
that	O
JDeveloper	B-Entity
's	O
generated	O
code	O
is	O
more	O
understandable	O
.	O
	
I	O
recommend	O
WindowBuilder	B-Entity
plugin	O
for	O
Eclipse	O
IDE	O
3.7.2	O
Indigo	O
/	O
24	O
February	O
2012	O
.	O
	
 -X-	O
It	O
is	O
still	O
not	O
able	O
to	O
parse	O
any	O
Swing	B-Entity
code	O
(	O
I	O
doubt	O
any	O
Swing	O
WISIWYG	O
editor	O
does	O
)	O
","	O
but	O
if	O
you	O
start	O
with	O
it	O
","	O
it	O
gives	O
you	O
relatively	O
seamless	O
experience.You	O
need	O
to	O
pay	O
for	O
it	O
though	O
.	O
 -X-	O
	
WindowBuilderPro	B-Entity
is	O
really	O
the	O
viable	O
(	O
free	O
)	O
alternative	O
for	O
Eclipse	O
.	O
	
 -X-	O
I	O
'm	O
a	O
big	O
fan	O
of	O
JetBrains	B-Entity
","	O
and	O
when	O
it	O
comes	O
to	O
Java	O
","	O
URL_http	O
:	O
/	O
/	O
www.jetbrains.com	O
/	O
idea	O
/	O
index.html	O
[	O
IntelliJ	O
]	O
is	O
the	O
best	O
IDE	O
I	O
have	O
used	O
.	O
 -X-	O
	
 -X-	O
For	O
Swing	B-Entity
","	O
they	O
have	O
a	O
fully	O
interactive	O
UI	O
builder	O
.	O
 -X-	O
	
I	O
have	O
switched	O
between	O
several	O
IDEs	O
and	O
the	O
one	O
that	O
I	O
believe	O
has	O
the	O
best	O
GUI	O
builder	O
in	O
terms	O
of	O
use	O
and	O
performance	O
would	O
have	O
to	O
be	O
Netbeans	B-Entity
.	O
	
 -X-	O
I	O
used	O
NetBeans	B-Entity
extensively	O
in	O
the	O
past	O
for	O
GUI	O
design	O
","	O
but	O
I	O
am	O
now	O
using	O
IntelliJ	O
with	O
the	O
JFormDesigner	B-Entity
plugin	O
.	O
 -X-	O
	
 -X-	O
JFormDesigner	B-Entity
also	O
works	O
with	O
JBuilder	O
and	O
Eclipse	O
","	O
so	O
you	O
are	O
not	O
locking	O
your	O
projects	O
to	O
one	O
particular	O
IDE	O
.	O
 -X-	O
	
Of	O
course	O
you	O
should	O
use	O
Netbeans	B-Entity
for	O
building	O
Java	O
Swing	O
GUI	O
.	O
	
 -X-	O
But	O
because	O
IBM	O
has	O
its	O
own	O
SWT	B-Entity
package	O
for	O
GUI	O
","	O
I	O
am	O
not	O
sure	O
whether	O
it	O
support	O
Swing	B-Entity
.	O
 -X-	O
	
 -X-	O
I	O
personally	O
will	O
suggest	O
_Netbeans	O
Swing	B-Entity
Builder_	O
","	O
yet	O
if	O
you	O
want	O
total	O
control	O
and	O
to	O
gain	O
depth	O
understanding	O
of	O
the	O
Swing	O
framework	O
","	O
I	O
have	O
noticed	O
doing	O
it	O
free	O
hand	O
is	O
the	O
ultimate	O
choice	O
.	O
 -X-	O
	
 -X-	O
I	O
took	O
it	O
from	O
recent	O
discussion	O
on	O
comp.lang.java.gui	B-Entity
(	O
I	O
was	O
the	O
autor	O
of	O
this	O
post	O
so	O
I	O
could	O
do	O
it	O
rightfully	O
)	O
","	O
URL_http	O
:	O
/	O
/	O
groups.google.com	O
/	O
group	O
/	O
com	O
p.lang.java.gui	O
/	O
browse_thread	O
/	O
thread	O
/	O
3722f92594039d24	O
/	O
1f0b605efebb1b39	O
#	O
1f0b605	O
efebb1b39	O
[	O
here	O
]	O
is	O
the	O
link	O
to	O
whole	O
discussion	O
.	O
 -X-	O
	
We	O
are	O
doing	O
Swing	B-Entity
development	O
since	O
nearly	O
10	O
years	O
.	O
	
a	O
JTable	B-Entity
subclass	O
which	O
requires	O
the	O
model	O
in	O
the	O
constructor	O
)	O
or	O
we	O
have	O
component	O
factories	O
.	O
	
I	O
will	O
prefer	O
the	O
NETBEANS	B-Entity
.	O
	
Swing	B-Entity
GUI	O
Building**Design	O
Swing	O
GUIs	O
by	O
dragging	O
and	O
positioning	O
GUI	O
components	O
from	O
a	O
palette	O
onto	O
a	O
canvas	O
.	O
 -X-	O
	
and	O
Custom	O
GUI	O
Components**The	O
extensible	O
Component	O
Palette	O
comes	O
with	O
pre-installed	O
Swing	B-Entity
and	O
AWT	B-Entity
components	O
and	O
includes	O
a	O
visual	O
menu	O
designer	O
.	O
 -X-	O
	
Binding	O
technology	O
(	O
JSR	B-Entity
295	I-Entity
)	O
Support**Take	O
advantage	O
of	O
Beans	O
Binding	O
technology	O
and	O
the	O
Java	O
Persistence	O
API	O
to	O
create	O
Swing	O
applications	O
more	O
easily	O
.	O
 -X-	O
	
 -X-	O
Using	O
the	O
Bind	O
dialog	O
box	O
","	O
you	O
can	O
quickly	O
generate	O
bindings	O
for	O
JavaBeans	B-Entity
components	O
.	O
 -X-	O
	
Debugger**Debug	O
a	O
Swing	B-Entity
GUI	O
application	O
without	O
looking	O
into	O
the	O
source	O
code	O
and	O
control	O
the	O
execution	O
flow	O
in	O
terms	O
of	O
high-level	O
structures	O
.	O
 -X-	O
	
 -X-	O
I	O
not	O
used	O
anything	O
other	O
than	O
NetBeans	B-Entity
for	O
Swing	O
","	O
but	O
have	O
been	O
extremely	O
happy	O
with	O
it	O
.	O
 -X-	O
	
I	O
used	O
to	O
use	O
MyEclipse	B-Entity
quite	O
a	O
bit	O
.	O
	
It	O
had	O
a	O
decent	O
IDE	O
for	O
making	O
Swing	B-Entity
forms	O
and	O
such	O
.	O
	
 -X-	O
Use	O
NetBeans	B-Entity
","	O
I	O
have	O
also	O
successfully	O
developed	O
one	O
application	O
using	O
NetBeans	O
.	O
 -X-	O
	
Since	O
Swing	B-Entity
generates	O
some	O
code	O
on	O
its	O
own	O
so	O
it	O
is	O
really	O
helpful	O
to	O
use	O
Netbeans	B-Entity
.	O
	
 -X-	O
NetBeans	B-Entity
has	O
a	O
WYSIWYG	O
editor	O
","	O
and	O
the	O
code	O
is	O
automatically	O
generated	O
for	O
you	O
","	O
which	O
is	O
then	O
protected	O
","	O
however	O
you	O
can	O
add	O
custom	O
code	O
to	O
add	O
listeners	O
and	O
other	O
events	O
that	O
the	O
end	O
user	O
may	O
be	O
interested	O
in	O
using	O
","	O
such	O
as	O
buttons	O
","	O
text	O
forms	O
and	O
areas	O
","	O
and	O
other	O
nice	O
GUI	O
tools	O
.	O
 -X-	O
	
 -X-	O
When	O
I	O
use	O
swing	B-Entity
","	O
I	O
usually	O
use	O
the	O
NetBeans	B-Entity
.	O
 -X-	O
	
_**Swing	B-Entity
is	O
still	O
in	O
use	O
...	O
.	O
but	O
there	O
is	O
AWT	B-Entity
!	O
!	O
	
Look	O
and	O
Feel	O
:	O
AWT	B-Entity
components	O
more	O
closely	O
reflect	O
the	O
look	O
and	O
feel	O
of	O
the	O
OS	O
they	O
run	O
on	O
.	O
 -X-	O
	
Third	O
Party	O
Development	O
:	O
the	O
majority	O
of	O
component	O
makers	O
","	O
including	O
Borland	O
and	O
Sun	O
","	O
base	O
new	O
component	O
development	O
on	O
Swing	B-Entity
components	O
.	O
 -X-	O
	
 -X-	O
There	O
is	O
a	O
much	O
smaller	O
set	O
of	O
AWT	B-Entity
components	O
available	O
","	O
thus	O
placing	O
the	O
burden	O
on	O
the	O
programmer	O
to	O
create	O
his	O
or	O
her	O
own	O
AWT-based	O
components	O
.	O
 -X-	O
	
Features	O
:	O
AWT	B-Entity
components	O
do	O
not	O
support	O
features	O
like	O
icons	O
and	O
tool-tips	O
.	O
 -X-	O
	
Behavior	O
:	O
Pure	O
Java	O
design	O
allows	O
for	O
a	O
greater	O
range	O
of	O
behavior	O
for	O
Swing	B-Entity
components	O
since	O
they	O
are	O
not	O
limited	O
by	O
the	O
native	O
peers	O
that	O
AWT	B-Entity
uses	O
.	O
 -X-	O
	
Features	O
:	O
Swing	B-Entity
supports	O
a	O
wider	O
range	O
of	O
features	O
like	O
icons	O
and	O
pop-up	O
tool-tips	O
for	O
components	O
.	O
 -X-	O
	
Vendor	O
Support	O
:	O
Swing	B-Entity
development	O
is	O
more	O
active	O
.	O
 -X-	O
	
Sun	O
puts	O
much	O
more	O
energy	O
into	O
making	O
Swing	B-Entity
robust	O
.	O
	
Performance	O
:	O
Swing	B-Entity
components	O
are	O
generally	O
slower	O
and	O
buggier	O
than	O
AWT	O
","	O
due	O
to	O
both	O
the	O
fact	O
that	O
they	O
are	O
pure	O
Java	O
and	O
to	O
video	O
issues	O
on	O
various	O
platforms	O
.	O
 -X-	O
	
Since	O
Swing	B-Entity
components	O
handle	O
their	O
own	O
painting	O
(	O
rather	O
than	O
using	O
native	O
API	O
's	O
like	O
DirectX	O
on	O
Windows	O
)	O
you	O
may	O
run	O
into	O
graphical	O
glitches	O
.	O
	
Look	O
and	O
Feel	O
:	O
Even	O
when	O
Swing	B-Entity
components	O
are	O
set	O
to	O
use	O
the	O
look	O
and	O
feel	O
of	O
the	O
OS	O
they	O
are	O
run	O
on	O
","	O
they	O
may	O
not	O
look	O
like	O
their	O
native	O
counterparts	O
.	O
 -X-	O
	
 -X-	O
 -X-	O
 -X-	O
Applet	O
Portability	O
:	O
most	O
Web	O
browsers	O
support	O
AWT	B-Entity
classes	O
so	O
AWT	O
applets	O
can	O
run	O
without	O
the	O
Java	O
plugin	O
.	O
 -X-	O
	
 -X-	O
I	O
would	O
n't	O
recommend	O
AWT	B-Entity
","	O
it	O
gets	O
very	O
little	O
love	O
these	O
days	O
(	O
other	O
than	O
the	O
bits	O
that	O
are	O
needed	O
for	O
Swing	O
)	O
.	O
 -X-	O
	
Better	O
to	O
use	O
SWT	B-Entity
if	O
you	O
want	O
to	O
go	O
down	O
the	O
native	O
path	O
.	O
	
 -X-	O
 -X-	O
 -X-	O
Most	O
Web	O
browsers	O
do	O
not	O
include	O
the	O
Swing	B-Entity
classes	O
","	O
so	O
the	O
Java	O
plugin	O
must	O
be	O
used	O
.	O
 -X-	O
	
 -X-	O
The	O
Swing	B-Entity
classes	O
are	O
part	O
of	O
the	O
JRE	O
","	O
not	O
the	O
browser	O
.	O
 -X-	O
	
 -X-	O
 -X-	O
 -X-	O
rather	O
than	O
using	O
native	O
API	O
's	O
like	O
DirectX	B-Entity
on	O
Windows	O
 -X-	O
 -X-	O
:	O
FALSE	O
","	O
Swing	B-Entity
uses	O
Java2D	O
","	O
which	O
may	O
use	O
DirectX	O
when	O
supported	O
.	O
 -X-	O
	
 -X-	O
 -X-	O
 -X-	O
Swing	B-Entity
components	O
are	O
generally	O
buggier	O
than	O
AWT	B-Entity
 -X-	O
 -X-	O
:	O
this	O
is	O
FALSE	O
as	O
well	O
.	O
 -X-	O
	
Swing	B-Entity
is	O
still	O
there	O
and	O
well	O
supported	O
.	O
	
Swing	B-Entity
apps	O
no	O
loger	O
feel	O
jerky	O
and	O
unrepsonsive	O
and	O
an	O
accumulation	O
of	O
minor	O
improvements	O
result	O
in	O
a	O
more	O
professional	O
looking	O
GUI	O
.	O
	
There	O
is	O
a	O
lot	O
of	O
tuning	O
in	O
Swing	B-Entity
that	O
can	O
not	O
be	O
attributed	O
to	O
Moores	O
law	O
.	O
	
 -X-	O
Not	O
everything	O
is	O
a	O
web	O
app	O
","	O
so	O
far	O
there	O
have	O
been	O
some	O
tentative	O
replacements	O
(	O
such	O
as	O
SWT	B-Entity
","	O
which	O
eclipse	O
is	O
written	O
in	O
)	O
SWT	O
has	O
a	O
native	O
layer	O
that	O
wraps	O
the	O
underlying	O
calls	O
to	O
the	O
native	O
windowing	O
layer	O
.	O
 -X-	O
	
I	O
would	O
venture	O
to	O
say	O
that	O
there	O
are	O
far	O
fewer	O
SWT	B-Entity
apps	O
than	O
Swing	O
apps	O
.	O
	
 -X-	O
You	O
can	O
also	O
build	O
on	O
the	O
NetBeans	O
Platform	O
","	O
which	O
is	O
built	O
on	O
Swing	B-Entity
:	O
URL_http	O
:	O
/	O
/	O
platform.netbeans.org	O
/	O
.	O
 -X-	O
	
 -X-	O
For	O
instance	O
","	O
you	O
may	O
want	O
to	O
look	O
at	O
JavaFX	B-Entity
if	O
you	O
need	O
a	O
rich	O
UI	O
;	O
or	O
using	O
SWT	O
in	O
your	O
application	O
.	O
 -X-	O
	
swing+javafx+wpf+qml	O
[	O
1-out-of-120-questions	O
]	O
on	O
StackOverflow	O
is	O
about	O
Swing	B-Entity
!	O
	
Have	O
a	O
look	O
at	O
Webstart	B-Entity
for	O
deploying	O
your	O
application	O
.	O
	
 -X-	O
For	O
desktop	O
programs	O
","	O
yes	O
","	O
Swing	B-Entity
is	O
heavily	O
in	O
use	O
.	O
 -X-	O
	
However	O
there	O
are	O
many	O
alternatives	O
because	O
alot	O
of	O
people	O
think	O
that	O
Swing	B-Entity
is	O
heavily	O
verbose	O
and	O
hard	O
to	O
work	O
with	O
.	O
	
JavaFX	B-Entity
is	O
worth	O
taking	O
a	O
look	O
at	O
.	O
	
JavaFX	B-Entity
is	O
for	O
web	O
apps	O
is	O
it	O
not	O
?	O
	
JavaFX	B-Entity
2	O
works	O
well	O
for	O
desktop	O
apps	O
as	O
well	O
.	O
	
 -X-	O
For	O
the	O
sake	O
of	O
using	O
 -X-	O
 -X-	O
standard	O
software	O
 -X-	O
 -X-	O
I	O
am	O
thinking	O
about	O
switching	O
to	O
log4j	B-Entity
.	O
 -X-	O
	
Can	O
log4j	B-Entity
be	O
used	O
as	O
a	O
dumpster	O
instead	O
?	O
	
 -X-	O
logj4	B-Entity
might	O
not	O
be	O
your	O
best	O
bet	O
","	O
if	O
you	O
need	O
highly	O
concurrent	O
logging	O
you	O
should	O
go	O
w	O
/	O
just	O
something	O
like	O
a	O
concurrent	O
linked	O
queue	O
(	O
or	O
blocking	O
)	O
and	O
a	O
dedicated	O
polling	O
thread	O
.	O
 -X-	O
	
See	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
a	O
/	O
13144054	O
/	O
603516	O
for	O
some	O
links	O
to	O
related	O
log4j	B-Entity
locking	O
issues	O
.	O
	
 -X-	O
Log4j	B-Entity
is	O
the	O
logging	O
implementation	O
on	O
most	O
JavaEE	O
app-servers	O
out	O
there	O
","	O
so	O
that	O
's	O
a	O
good	O
advert	O
for	O
its	O
concurrency	O
abilities	O
.	O
 -X-	O
	
 -X-	O
Having	O
said	O
that	O
","	O
I	O
have	O
seen	O
Log4j	B-Entity
1.2	O
deadlock	O
under	O
high	O
load	O
conditions	O
.	O
 -X-	O
	
 -X-	O
Apparently	O
","	O
this	O
was	O
fixed	O
in	O
Log4j	B-Entity
1.3	O
","	O
although	O
development	O
on	O
this	O
has	O
slowed	O
or	O
stopped	O
altogether	O
-	O
I	O
get	O
the	O
feeling	O
much	O
of	O
the	O
source	O
was	O
unsalvageable	O
.	O
 -X-	O
	
 -X-	O
However	O
","	O
if	O
you	O
're	O
free	O
to	O
choose	O
","	O
then	O
you	O
should	O
consider	O
URL_http	O
:	O
/	O
/	O
logback.qos.ch	O
/	O
[	O
Logback	O
]	O
instead	O
","	O
the	O
spiritual	O
successor	O
to	O
Log4j	B-Entity
.	O
 -X-	O
	
 -X-	O
Check	O
out	O
log4j	B-Entity
's	O
URL_http	O
:	O
/	O
/	O
logging.apache.org	O
/	O
log4j	O
/	O
1.2	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
l	O
og4j	O
/	O
AsyncAppender.html	O
[	O
asynchronous-appender	O
]	O
","	O
it	O
buffers	O
log	O
messages	O
ad	O
passes	O
them	O
on	O
to	O
appenders	O
using	O
a	O
separate	O
thread	O
.	O
 -X-	O
	
 -X-	O
It	O
might	O
be	O
that	O
you	O
decide	O
the	O
log4j	B-Entity
async	O
appender	O
is	O
not	O
appropriate	O
URL_http	O
:	O
/	O
/	O
glueclue.blogspot.com	O
/	O
2007	O
/	O
1	O
/	O
log4j-asyncappender-is-not-	O
always_31.html	O
[	O
(	O
here-are-some-complaints-about-it	O
)	O
]	O
","	O
you	O
could	O
always	O
make	O
your	O
own	O
appender	O
.	O
 -X-	O
	
 -X-	O
Logging	O
using	O
SL4J	O
","	O
Jakarta	O
Commons	O
logging	O
","	O
log4j	B-Entity
for	O
third	O
party	O
libraries	O
and	O
my	O
own	O
code	O
.	O
 -X-	O
	
)	O
For	O
Spring	O
I	O
guess	O
I	O
need	O
some	O
kind	O
of	O
configuration	O
file	O
for	O
the	O
Apache	O
Commons	O
logging	O
component	O
as	O
well	O
where	O
I	O
direct	O
it	O
to	O
use	O
log4j	B-Entity
?	O
	
 -X-	O
In	O
the	O
project	O
I	O
'm	O
starting	O
","	O
do	O
you	O
recommend	O
that	O
I	O
use	O
SL4J	B-Entity
for	O
my	O
own	O
logging	O
purposes	O
?	O
 -X-	O
	
 -X-	O
(	O
I	O
thought	O
I	O
would	O
use	O
log4j	B-Entity
directly	O
","	O
but	O
that	O
was	O
before	O
I	O
learned	O
a	O
little	O
bit	O
more	O
about	O
logging	O
and	O
a	O
lot	O
of	O
respectable	O
libraries	O
seem	O
to	O
choose	O
the	O
path	O
of	O
a	O
bridge	O
/	O
facade	O
for	O
their	O
logging	O
needs	O
.	O
 -X-	O
	
 -X-	O
Well	O
SLF4J	B-Entity
is	O
just	O
a	O
facade	O
","	O
like	O
commons	O
logging	O
","	O
which	O
means	O
they	O
still	O
need	O
something	O
else	O
to	O
work	O
.	O
 -X-	O
	
Log4j	B-Entity
and	O
logback	B-Entity
are	O
regular	O
logging	O
libs	O
.	O
	
SLF4J	B-Entity
has	O
a	O
URL_http	O
:	O
/	O
/	O
www.slf4j.org	O
/	O
legacy.html	O
[	O
commons-logging-bridge	O
]	O
that	O
you	O
can	O
use	O
to	O
replace	O
the	O
commons	O
logging	O
library	O
.	O
	
 -X-	O
Now	O
","	O
you	O
just	O
need	O
to	O
use	O
slf4j-logj12.jar	O
to	O
have	O
commons	O
logging	O
and	O
slf4j	O
use	O
log4j	B-Entity
(	O
or	O
anything	O
else	O
you	O
chose	O
;	O
btw	O
","	O
logback	B-Entity
does	O
n't	O
need	O
an	O
additional	O
library	O
to	O
be	O
used	O
with	O
slf4j	B-Entity
)	O
as	O
a	O
backing	O
engine	O
.	O
 -X-	O
	
log4j.jar	B-Entity
(	O
for	O
your	O
application	O
to	O
use	O
.	O
 -X-	O
	
Remember	O
to	O
not	O
confuse	O
slf4j-xxxx.jar	B-Entity
with	O
xxxx-over-slf4j.jar	O
.	O
	
 -X-	O
The	O
former	O
is	O
for	O
funneling	O
to	O
your	O
desired	O
logging	O
framework	O
(	O
log4j	B-Entity
","	O
logback	B-Entity
","	O
etc	O
)	O
","	O
the	O
latter	O
is	O
to	O
replace	O
the	O
used	O
logging	O
framework	O
.	O
 -X-	O
	
 -X-	O
I	O
thought	O
log4j	B-Entity
was	O
a	O
terrific	O
thing	O
","	O
worthy	O
of	O
being	O
made	O
a	O
standard	O
.	O
 -X-	O
	
I	O
use	O
ACL	O
+	O
log4j	B-Entity
.	O
	
 -X-	O
Here	O
is	O
how	O
to	O
redirect	O
everything	O
to	O
SLF4J	B-Entity
:	O
	
 -X-	O
If	O
you	O
are	O
using	O
Maven	B-Entity
and	O
have	O
trouble	O
getting	O
rid	O
of	O
commons-logging	O
","	O
see	O
URL_http	O
:	O
/	O
/	O
day-to-day-stuff.blogspot.com	O
/	O
2007	O
/	O
7	O
/	O
no-more-commons-logging.html	O
[	O
this	O
]	O
.	O
 -X-	O
	
Log4j	B-Entity
2	O
and	O
SLF4J	B-Entity
and	O
the	O
never	O
ending	O
future	O
of	O
java	O
logging	O
frameworks	O
.	O
	
 -X-	O
So	O
I	O
just	O
found	O
out	O
today	O
that	O
Log4J	B-Entity
2	O
is	O
now	O
actively	O
being	O
developed	O
","	O
there	O
is	O
an	O
alpha	O
version	O
and	O
it	O
is	O
said	O
to	O
replace	O
logback	O
.	O
 -X-	O
	
I	O
do	O
n't	O
want	O
to	O
have	O
rewrite	O
my	O
complicated	O
log4j	B-Entity
configurations	O
files	O
to	O
a	O
new	O
format**	O
(	O
logback	O
)	O
.	O
 -X-	O
	
Now	O
my	O
question	O
is	O
in	O
terms	O
of	O
what	O
I	O
should	O
code	O
against	O
is	O
SLF4J	B-Entity
the	O
right	O
choice	O
for	O
the	O
future	O
given	O
log4j	B-Entity
2	O
.	O
	
 -X-	O
_It	O
seems	O
like	O
I	O
should	O
just	O
stick	O
with	O
old	O
log4j	B-Entity
(	O
CODETERM1	O
)	O
as	O
it	O
is	O
the	O
lowest	O
common	O
denominator	O
?	O
_	O
	
on	O
further	O
examination	O
of	O
log4j	B-Entity
2	O
while	O
very	O
similar	O
it	O
appears	O
the	O
configuration	O
is	O
not	O
backward	O
compatible	O
with	O
log4j	O
1.2	O
.	O
 -X-	O
	
Yes	O
I	O
have	O
done	O
similar	O
likewise	O
but	O
good	O
ole	O
log4j	B-Entity
is	O
almost	O
in	O
every	O
project	O
except	O
for	O
really	O
really	O
new	O
projects	O
and	O
its	O
the	O
only	O
one	O
I	O
can	O
remember	O
how	O
to	O
configure	O
.	O
	
 -X-	O
Code	O
with	O
SLF4J	B-Entity
","	O
and	O
choose	O
backend	O
at	O
runtime	O
.	O
 -X-	O
	
Changing	O
logging	O
backend	O
is	O
not	O
a	O
problem	O
if	O
you	O
are	O
using	O
SLF4J	B-Entity
Api	O
.	O
	
I	O
am	O
the	O
founder	O
of	O
log4j	B-Entity
","	O
slf4j	B-Entity
and	O
logback	O
projects	O
but	O
unaffiliated	O
with	O
log4j	O
2	O
.	O
 -X-	O
	
 -X-	O
As	O
I	O
understand	O
it	O
","	O
notwithstanding	O
its	O
name	O
","	O
log4j	B-Entity
2	O
is	O
very	O
different	O
than	O
log4j	O
1.x	O
.	O
 -X-	O
	
 -X-	O
As	O
far	O
as	O
the	O
user	O
API	O
is	O
concerned	O
","	O
log4j	B-Entity
2	I-Entity
is	O
largely	O
incompatible	O
with	O
log4j	B-Entity
1.x	I-Entity
.	O
 -X-	O
	
Log4j	B-Entity
2	I-Entity
provides	O
an	O
adaptation	O
layer	O
for	O
log4j	O
1.x	O
which	O
at	O
present	O
time	O
(	O
Aug-12	O
)	O
is	O
URL_http	O
:	O
/	O
/	O
logging.apache.org	O
/	O
log4j	O
/	O
2.x	O
/	O
log4j12-api	O
/	O
api.html	O
[	O
CODETERM1	O
]	O
.	O
	
BTW	O
thanks	O
for	O
log4j	B-Entity
(	O
original	O
)	O
.	O
	
My	O
interest	O
in	O
log4j	B-Entity
2	I-Entity
(	O
over	O
logback	O
)	O
is	O
not	O
having	O
to	O
switch	O
configuration	O
to	O
the	O
new	O
logback	O
style	O
(	O
IMHO	O
its	O
easier	O
to	O
refactor	O
to	O
SLF4J	O
)	O
than	O
change	O
the	O
config	O
of	O
10	O
or	O
so	O
projects	O
.	O
	
Are	O
you	O
familiar	O
with	O
the	O
log4j.properties	B-Entity
translator	O
?	O
	
It	O
can	O
greatly	O
help	O
in	O
migrating	O
log4j.properties	B-Entity
to	O
logback.xml	O
.	O
	
I	O
should	O
enhance	O
the	O
translator	O
to	O
deal	O
with	O
log4j.xml	B-Entity
as	O
well	O
.	O
	
I	O
could	O
whip	O
up	O
some	O
XSLT	O
to	O
translate	O
log4j.xml	B-Entity
to	O
logback.xml	O
.	O
	
 -X-	O
The	O
Log4J2	B-Entity
website	O
reports	O
that	O
there	O
is	O
an	O
adapter	O
for	O
SLF4J	O
","	O
so	O
if	O
you	O
write	O
your	O
code	O
to	O
SLF4J	O
you	O
can	O
switch	O
to	O
Log4J	O
","	O
Log4J2	O
","	O
and	O
Logback	O
whenever	O
you	O
want	O
.	O
 -X-	O
	
 -X-	O
I	O
'd	O
suggest	O
using	O
slf4j	B-Entity
","	O
since	O
it	O
can	O
use	O
log4j	B-Entity
as	O
a	O
backend	O
if	O
that	O
's	O
what	O
you	O
need	O
.	O
 -X-	O
	
Yes	O
I	O
think	O
slf4j	B-Entity
is	O
what	O
I	O
'll	O
go	O
with	O
.	O
	
Log4j	B-Entity
2	O
is	O
not	O
a	O
facade	O
and	O
does	O
not	O
advertise	O
to	O
be	O
one	O
.	O
	
 -X-	O
-	O
log4j	B-Entity
was	O
the	O
first	O
","	O
then	O
disagreement	O
arose	O
","	O
and	O
slf4j+logback	O
was	O
written	O
.	O
 -X-	O
	
slf4j	B-Entity
is	O
the	O
_API_	O
and	O
logback	O
the	O
implementation	O
of	O
the	O
API	O
.	O
	
 -X-	O
Regardless	O
of	O
everything	O
else	O
","	O
slf4j	B-Entity
is	O
extremely	O
useful	O
.	O
 -X-	O
	
Log4j	B-Entity
because	O
most	O
everybody	O
uses	O
it	O
(	O
in	O
my	O
experience	O
)	O
	
SLF4j	B-Entity
because	O
it	O
's	O
newer	O
than	O
Commons	O
Logging	O
and	O
provides	O
parameterized	O
logging	O
:	O
	
Logback	B-Entity
because	O
it	O
's	O
newer	O
than	O
log4j	O
and	O
again	O
","	O
supports	O
parameterized	O
logging	O
","	O
as	O
it	O
implements	O
SLF4j	O
directly	O
	
SLF4j	O
/	O
Logback	O
because	O
it	O
's	O
written	O
by	O
the	O
same	O
guy	O
who	O
did	O
log4j	B-Entity
","	O
so	O
he	O
's	O
made	O
it	O
better	O
(	O
according	O
to	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
questions	O
/	O
354837	O
/	O
whats-up-with-logging-in-java	O
#	O
356038	O
[	O
Ken-G	O
]	O
-	O
thanks	O
.	O
 -X-	O
	
SLF4j	B-Entity
because	O
they	O
also	O
publish	O
a	O
log4j	O
adapter	O
so	O
you	O
do	O
n't	O
have	O
to	O
 -X-	O
 -X-	O
switch	O
out	O
 -X-	O
 -X-	O
log4j	O
in	O
older	O
code	O
-	O
just	O
make	O
log4j.properties	O
use	O
SLF4j	O
and	O
it	O
's	O
configuration	O
.	O
 -X-	O
	
I	O
now	O
know	O
that	O
I	O
'm	O
not	O
going	O
to	O
be	O
using	O
log4j	B-Entity
as	O
my	O
default	O
framework	O
any	O
more	O
.	O
	
SLF4j	B-Entity
FTW	O
!	O
Also	O
thanks	O
to	O
Ken	O
G	O
for	O
pointing	O
out	O
that	O
SLF4j	O
is	O
written	O
by	O
the	O
same	O
guy	O
as	O
log4j	O
.	O
	
 -X-	O
an	O
SocketAppender	B-Entity
since	O
the	O
event	O
is	O
serialized	O
using	O
the	O
unchanged	O
message	O
pattern	O
+	O
the	O
arguments	O
as	O
Strings.I	O
guess	O
it	O
just	O
depends	O
how	O
you	O
define	O
 -X-	O
 -X-	O
effectively	O
 -X-	O
 -X-	O
though	O
.	O
 -X-	O
	
SLF4J	B-Entity
actually	O
is	O
just	O
an	O
API	O
that	O
sits	O
on	O
top	O
of	O
other	O
logging	O
frameworks	O
.	O
	
 -X-	O
In	O
particular	O
","	O
if	O
you	O
are	O
working	O
in	O
a	O
serious	O
Java	O
web	O
application	O
stack	O
","	O
you	O
are	O
often	O
in	O
_multiple_	O
logging	O
environments	O
at	O
one	O
time	O
;	O
(	O
e.g	O
hibernate	O
may	O
use	O
log4j	B-Entity
","	O
and	O
tomcat	O
java.util.logging	B-Entity
)	O
.	O
 -X-	O
	
 -X-	O
Ohh	O
because	O
I	O
am	O
looking	O
at	O
the	O
Tomcat	O
logs	O
","	O
and	O
not	O
log4j	B-Entity
.	O
 -X-	O
	
The	O
problems	O
started	O
when	O
Sun	O
actually	O
added	O
java.util.logging	B-Entity
to	O
Java	O
1.4	O
.	O
	
Before	O
that	O
LOG4J	B-Entity
was	O
well	O
established	O
and	O
in	O
wide	O
use	O
.	O
	
After	O
that	O
there	O
was	O
the	O
necessity	O
of	O
wrappers	O
to	O
support	O
both	O
LOG4J	B-Entity
and	O
java.util.logging	B-Entity
.	O
	
package	O
","	O
it	O
ca	O
n't	O
be	O
replaced	O
by	O
swapping	O
a	O
JAR	O
-	O
which	O
is	O
the	O
way	O
SLF4J	B-Entity
bridges	O
the	O
other	O
frameworks	O
.	O
 -X-	O
	
 -X-	O
There	O
's	O
one	O
important	O
point	O
that	O
was	O
n't	O
mentioned	O
before	O
:	O
SLF4J	B-Entity
(	O
and	O
both	O
Logback	B-Entity
and	O
LOG4J	B-Entity
as	O
the	O
logging	O
backend	O
)	O
have	O
support	O
for	O
a	O
so	O
called	O
Mapped	O
Diagnostic	O
Context	O
(	O
MDC	O
","	O
see	O
URL_http	O
:	O
/	O
/	O
slf4j.org	O
/	O
apidocs	O
/	O
org	O
/	O
slf4j	O
/	O
MDC.html	O
[	O
javadoc	O
]	O
and	O
URL_http	O
:	O
/	O
/	O
logback.qos.ch	O
/	O
manual	O
/	O
mdc.html	O
[	O
documentation	O
]	O
)	O
.	O
 -X-	O
	
 -X-	O
This	O
is	O
essentially	O
a	O
thread-local	O
Map	B-Entity
<	I-Entity
String	I-Entity
","	I-Entity
Object	I-Entity
>	I-Entity
which	O
you	O
can	O
use	O
to	O
add	O
additional	O
context	O
information	O
to	O
your	O
logging	O
event	O
.	O
 -X-	O
	
 -X-	O
Technically	O
","	O
it	O
's	O
a	O
thread-local	O
Map	B-Entity
<	I-Entity
string	I-Entity
","	I-Entity
string	I-Entity
>	I-Entity
.	O
 -X-	O
	
There	O
are	O
some	O
potentialclassloading	O
issues	O
with	O
CommonsLogging	B-Entity
.	O
 -X-	O
	
Log4J	B-Entity
and	O
SLF4J	B-Entity
were	O
developed	O
by	O
the	O
same	O
person	O
","	O
learning	O
from	O
issues	O
found	O
in	O
practice	O
with	O
Log4J	O
.	O
 -X-	O
	
 -X-	O
As	O
described	O
URL_http	O
:	O
/	O
/	O
www.kdgregory.com	O
/	O
index.php	O
?	O
page=java.logging	B-Entity
[	O
here	O
]	O
","	O
I	O
like	O
to	O
use	O
a	O
LogWrapper	O
object	O
to	O
provide	O
custom	O
stringification	O
(	O
important	O
)	O
","	O
and	O
minimize	O
the	O
visual	O
clutter	O
of	O
logging	O
statements	O
(	O
less	O
important	O
)	O
.	O
 -X-	O
	
There	O
's	O
also	O
a	O
commons.logging=	O
>	O
SLF4J	O
bridge	O
which	O
can	O
be	O
used	O
to	O
route	O
all	O
CL	O
logging	O
over	O
SLF4J	B-Entity
.	O
	
 -X-	O
SLF4J	B-Entity
supports	O
bridging	O
of	O
commons.logging	O
","	O
LOG4J	B-Entity
and	O
(	O
a	O
bit	O
cumbersome	O
","	O
but	O
as	O
good	O
as	O
possible	O
)	O
java.util.logging	B-Entity
so	O
all	O
logs	O
will	O
end	O
up	O
in	O
whatever	O
SLF4J	O
backend	O
you	O
'll	O
use	O
.	O
 -X-	O
	
 -X-	O
See	O
URL_http	O
:	O
/	O
/	O
slf4j.org	O
/	O
legacy.html	O
I	O
'd	O
use	O
Logback	B-Entity
","	O
btw	O
","	O
but	O
you	O
could	O
argue	O
that	O
I	O
'm	O
biased	O
.	O
 -X-	O
	
In	O
our	O
company	O
project	O
we	O
use	O
LOG4j	B-Entity
and	O
it	O
is	O
very	O
easy	O
to	O
use	O
like	O
Stephen	O
showed	O
in	O
his	O
example.We	O
also	O
have	O
written	O
our	O
own	O
pattern	O
classes	O
for	O
LOG4j	O
so	O
you	O
can	O
create	O
your	O
own	O
output	O
file	O
schemas	O
.	O
	
It	O
is	O
possible	O
to	O
enhance	O
the	O
original	O
log4j	B-Entity
classes	O
.	O
	
 -X-	O
All	O
LOG4j	B-Entity
properties	O
you	O
can	O
change	O
in	O
a	O
log4j.properties	O
file	O
","	O
so	O
you	O
can	O
use	O
different	O
files	O
for	O
different	O
projects	O
.	O
 -X-	O
	
 -X-	O
Java	O
logging	O
is	O
not	O
my	O
favorit	O
","	O
but	O
this	O
could	O
be	O
because	O
i	O
use	O
log4j	B-Entity
from	O
the	O
beginning	O
.	O
 -X-	O
	
Generally	O
I	O
would	O
default	O
to	O
using	O
Log4J	B-Entity
.	O
	
I	O
would	O
use	O
Java	O
Logging	O
if	O
I	O
did	O
n't	O
mind	O
a	O
dependency	O
on	O
Java	O
1.4	O
but	O
I	O
would	O
still	O
use	O
Log4J	B-Entity
in	O
preference	O
.	O
	
One	O
already	O
exists	O
-	O
take	O
a	O
look	O
at	O
slf4j	B-Entity
.	O
	
I	O
am	O
constructing	O
the	O
array	O
first	O
because	O
I	O
believe	O
it	O
is	O
faster	O
than	O
using	O
string	O
concatination	O
or	O
using	O
a	O
StringBuffer	B-Entity
to	O
do	O
so	O
.	O
	
Simply	O
use	O
the	O
StringUtils	B-Entity
class	O
from	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
lang	O
[	O
apache-commons-lang	O
]	O
project	O
.	O
	
 -X-	O
You	O
have	O
a	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
lang	O
/	O
/	O
api-2.4	O
/	O
org	O
/	O
apache	O
/	O
commons	O
/	O
lang	O
/	O
StringUtils.html	O
#	O
leftPad	O
%	O
28java.lang.String	B-Entity
","	O
%	O
2	O
0int	O
","	O
%	O
20char	O
%	O
29	O
[	O
leftPad	O
]	O
method	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
 -X-	O
For	O
the	O
exact	O
same	O
behaviour	O
","	O
but	O
that	O
's	O
obvious	O
","	O
do	O
:	O
StringUtils.leftPad	B-Entity
(	O
 -X-	O
 -X-	O
 -X-	O
 -X-	O
","	O
10	O
","	O
'*	O
'	O
)	O
;	O
.	O
 -X-	O
	
 -X-	O
Or	O
use	O
repeat	B-Entity
(	I-Entity
)	I-Entity
","	O
which	O
does	O
n't	O
require	O
the	O
empty	O
string	O
at	O
the	O
start	O
and	O
is	O
arguably	O
clearer	O
in	O
intent	O
(	O
see	O
my	O
answer	O
)	O
.	O
 -X-	O
	
wo	O
n't	O
the	O
code	O
in	O
Arrays.fill	B-Entity
(	I-Entity
)	I-Entity
contain	O
a	O
loop	O
...	O
	
You	O
should	O
throw	O
an	O
IllegalArgumentException	B-Entity
if	O
(	O
length	O
<	O
0	O
)	O
.	O
	
(	O
Even	O
java.lang.NegativeArraySizeException	B-Entity
is	O
better	O
.	O
	
 -X-	O
Apache	O
Commons	O
Lang	O
(	O
probably	O
useful	O
enough	O
to	O
be	O
on	O
the	O
classpath	O
of	O
any	O
non-	O
trivial	O
project	O
)	O
has	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
lang	O
/	O
/	O
api-2.4	O
/	O
org	O
/	O
apache	O
/	O
co	O
mmons	O
/	O
lang	O
/	O
StringUtils.html	O
#	O
repeat	O
%	O
28java.lang.String	O
","	O
%	O
20int	O
%	O
29	O
[	O
StringUtils.repeat	B-Entity
(	I-Entity
)	I-Entity
]	O
:	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
In	O
many	O
(	O
thou	O
not	O
all	O
)	O
cases	O
you	O
can	O
use	O
CharSequence	B-Entity
instead	O
of	O
a	O
String	O
.	O
	
 -X-	O
Try	O
this	O
Using	O
the	O
substring	B-Entity
(	I-Entity
int	I-Entity
start	I-Entity
","	I-Entity
int	I-Entity
end	I-Entity
)	I-Entity
;	O
method	O
CODESNIPPET_JAVA1	O
.	O
 -X-	O
	
C	O
#	O
equivalent	O
to	O
Java	O
's	O
charAt	B-Entity
(	I-Entity
)	I-Entity
?	O
	
Console.WriteLine	B-Entity
allows	O
the	O
user	O
to	O
specify	O
a	O
position	O
in	O
a	O
string	O
.	O
	
 -X-	O
Also	O
","	O
using	O
String	O
for	O
logic	O
operations	O
is	O
rather	O
slow	O
","	O
and	O
is	O
not	O
advised	O
at	O
all	O
","	O
since	O
the	O
JVM	O
converts	O
the	O
String	O
to	O
a	O
StringBuffer	B-Entity
in	O
the	O
bytecode	O
.	O
 -X-	O
	
A	O
lot	O
of	O
overhead	O
is	O
wasted	O
converting	O
from	O
String	O
to	O
StringBuffer	B-Entity
and	O
then	O
back	O
to	O
String	O
again	O
.	O
	
You	O
use	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
lang	O
/	O
StringBuilder.html	B-Entity
[	O
CODETERM3	O
]	O
when	O
you	O
need	O
to	O
create	O
a	O
mutable	O
character	O
sequence	O
","	O
usually	O
to	O
concatenate	O
several	O
character	O
sequences	O
together	O
.	O
 -X-	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
lang	O
/	O
StringBuilder.html	B-Entity
[	O
CODETERM2	O
]	O
is	O
a	O
mutable	O
class	O
that	O
can	O
be	O
appended	O
to	O
","	O
characters	O
replaced	O
or	O
removed	O
and	O
ultimately	O
converted	O
to	O
a	O
CODETERM3	O
CODETERM4	O
is	O
the	O
original	O
synchronized	O
version	O
of	O
CODETERM5	O
You	O
should	O
prefer	O
CODETERM6	O
in	O
all	O
cases	O
where	O
you	O
have	O
only	O
a	O
single	O
thread	O
accessing	O
your	O
object	O
.	O
 -X-	O
	
 -X-	O
But	O
if	O
you	O
are	O
building	O
CODETERM13	O
objects	O
that	O
are	O
large	O
","	O
say	O
less	O
than	O
4k	O
","	O
then	O
declaring	O
CODETERM14	O
is	O
much	O
more	O
efficient	O
than	O
concatenation	O
or	O
using	O
the	O
URL_http	O
:	O
/	O
/	O
java.sun.com	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
lang	O
/	O
StringBuilder.html	B-Entity
#	O
StringBuilder	O
%	O
28	O
%	O
29	O
[	O
default	O
]	O
which	O
is	O
only	O
16	O
characters	O
.	O
 -X-	O
	
This	O
is	O
from	O
the	O
JDK	O
6	O
Source	O
code	O
for	O
AbstractStringBuilder	B-Entity
CODESNIPPET_JAVA1	O
.	O
	
Call	O
URL_http	O
:	O
/	O
/	O
java.sun.c	O
om	O
/	O
javase	O
/	O
6	O
/	O
docs	O
/	O
api	O
/	O
java	O
/	O
lang	O
/	O
StringBuilder.html	B-Entity
#	O
ensureCapacity	O
%	O
28int	O
%	O
29	O
[	O
CODETERM22	O
]	O
with	O
the	O
size	O
you	O
want	O
to	O
ensure	O
your	O
resulting	O
CODETERM23	O
will	O
fit	O
into	O
.	O
	
 -X-	O
 -X-	O
A	O
 -X-	O
 -X-	O
+	O
 -X-	O
 -X-	O
B	O
 -X-	O
 -X-	O
;	O
really	O
compile	O
to	O
be	O
a	O
StringBuilder	B-Entity
?	O
 -X-	O
	
 -X-	O
 -X-	O
AB	O
 -X-	O
 -X-	O
;	O
","	O
it	O
should	O
only	O
use	O
a	O
StringBuilder	B-Entity
if	O
the	O
components	O
are	O
n't	O
known	O
at	O
compile	O
time	O
.	O
 -X-	O
	
 -X-	O
it	O
might	O
optimize	O
the	O
String	O
constants	O
out	O
","	O
I	O
ca	O
n't	O
recall	O
from	O
the	O
last	O
time	O
decompiled	O
the	O
byte	O
code	O
","	O
but	O
I	O
do	O
know	O
that	O
if	O
there	O
are	O
any	O
variables	O
in	O
there	O
it	O
will	O
use	O
a	O
StringBuilder	B-Entity
implementation	O
for	O
sure	O
.	O
 -X-	O
	
I	O
was	O
wondering	O
about	O
String.format	B-Entity
(	I-Entity
)	I-Entity
.	O
	
Usually	O
it	O
's	O
the	O
StringBuilder	B-Entity
.	O
	
 -X-	O
Well	O
","	O
usually	O
it	O
's	O
actually	O
 -X-	O
 -X-	O
A	O
 -X-	O
 -X-	O
+	O
 -X-	O
 -X-	O
B	O
 -X-	O
 -X-	O
+	O
 -X-	O
 -X-	O
C	O
 -X-	O
 -X-	O
because	O
people	O
are	O
lazy	O
;	O
)	O
I	O
tended	O
to	O
always	O
use	O
a	O
StringBuilder	B-Entity
","	O
even	O
if	O
it	O
was	O
only	O
two	O
strings	O
being	O
concatenated	O
","	O
because	O
in	O
future	O
","	O
perhaps	O
more	O
strings	O
would	O
be	O
appended	O
.	O
 -X-	O
	
 -X-	O
I	O
never	O
used	O
String.format	B-Entity
(	I-Entity
)	I-Entity
mainly	O
because	O
I	O
never	O
remembered	O
what	O
JDK	O
it	O
was	O
introduced	O
-	O
I	O
see	O
it	O
's	O
JDK1.5	O
","	O
I	O
'd	O
use	O
it	O
in	O
favour	O
of	O
the	O
other	O
options	O
.	O
 -X-	O
	
javap	O
-c	O
StringConcatenation	B-Entity
CODESNIPPET_JAVA5	O
.	O
	
 -X-	O
Initializing	O
the	O
StringBuilder	B-Entity
with	O
 -X-	O
 -X-	O
Dear	O
 -X-	O
 -X-	O
means	O
the	O
first	O
.append	O
(	O
)	O
will	O
cause	O
a	O
reallocation	O
and	O
copy	O
.	O
 -X-	O
	
It	O
is	O
NOT	O
generally	O
a	O
good	O
practice	O
to	O
use	O
a	O
StringBuilder	B-Entity
to	O
do	O
String	O
concatenation	O
on	O
the	O
right-hand	O
side	O
of	O
the	O
assignment	O
.	O
	
Any	O
good	O
implementation	O
will	O
use	O
a	O
StringBuilder	B-Entity
behind	O
the	O
scenes	O
as	O
you	O
say	O
.	O
	
 -X-	O
Furthermore	O
","	O
your	O
example	O
of	O
 -X-	O
 -X-	O
a	O
 -X-	O
 -X-	O
+	O
 -X-	O
 -X-	O
b	O
 -X-	O
 -X-	O
would	O
be	O
compiled	O
into	O
a	O
single	O
literal	O
 -X-	O
 -X-	O
ab	O
 -X-	O
 -X-	O
but	O
if	O
you	O
used	O
StringBuilder	B-Entity
it	O
would	O
result	O
in	O
two	O
needless	O
calls	O
to	O
append	O
(	O
)	O
.	O
 -X-	O
	
 -X-	O
When	O
you	O
are	O
using	O
StringBuilder	B-Entity
","	O
it	O
uses	O
a	O
buffer	O
to	O
make	O
less	O
String	O
addition	O
and	O
will	O
therefore	O
be	O
more	O
performant	O
when	O
you	O
want	O
to	O
add	O
a	O
lot	O
of	O
string	O
one	O
after	O
the	O
other	O
.	O
 -X-	O
	
StringBuffer	B-Entity
is	O
the	O
exact	O
same	O
thing	O
as	O
of	O
StringBuilder	B-Entity
except	O
that	O
all	O
his	O
method	O
are	O
synchronized	O
.	O
	
 -X-	O
For	O
instance	O
","	O
System.console	B-Entity
(	I-Entity
)	I-Entity
.readLine	I-Entity
(	I-Entity
)	I-Entity
(	O
new	O
in	O
Java	O
6	O
)	O
is	O
pretty	O
easy	O
.	O
 -X-	O
	
Same	O
with	O
BufferedReader	B-Entity
's	I-Entity
readLine	I-Entity
(	I-Entity
)	I-Entity
.	O
	
Hat	O
tip	O
goes	O
also	O
to	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
users	O
/	O
68127	O
/	O
jacob-gabrielson	O
[	O
Jacob	B-Entity
","	O
]	O
who	O
once	O
pointed	O
me	O
to	O
the	O
said	O
article	O
.	O
 -X-	O
	
Thanks	O
to	O
a	O
suggestion	O
from	O
URL_http	O
:	O
/	O
/	O
stackoverflow.com	O
/	O
users	O
/	O
101272	O
/	O
patrick	O
[	O
Patrick	B-Entity
]	O
","	O
made	O
the	O
function	O
more	O
robust	O
when	O
handling	O
an	O
empty	O
input	O
stream	O
.	O
 -X-	O
	
more	O
edit	O
:	O
**	O
nixed	O
try	O
/	O
catch	O
","	O
Patrick	B-Entity
's	O
way	O
is	O
more	O
laconic	O
.	O
 -X-	O
	
 -X-	O
@	O
ArchimedesTrajano	O
does	O
IOUtils.copy	B-Entity
(	O
inputStream	O
","	O
writer	O
","	O
encoding	O
)	O
deal	O
with	O
CR	O
/	O
LF	O
translations	O
better	O
?	O
 -X-	O
	
 -X-	O
For	O
Java	O
7	O
you	O
can	O
close	O
in	O
a	O
try-with	O
:	O
try	O
(	O
java.util.Scanner	B-Entity
s	O
	
I	O
hope	O
IOUtils	B-Entity
takes	O
an	O
optional	O
Charset	O
(	O
or	O
at	O
least	O
the	O
name	O
of	O
the	O
encodding	O
to	O
use	O
)	O
.	O
	
 -X-	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
io	O
/	O
apidocs	O
/	O
org	O
/	O
apache	O
/	O
comm	O
ons	O
/	O
io	O
/	O
IOUtils.html	O
#	O
copy	O
(	O
java.io.InputStream	B-Entity
","	O
%	O
20java.io.Writer	B-Entity
","	O
%	O
20java.lang.St	O
ring	O
)	O
.	O
 -X-	O
	
should	O
be	O
using	O
IOUtils.copy	B-Entity
(	I-Entity
inputStream	I-Entity
","	I-Entity
writer	I-Entity
","	I-Entity
encoding	I-Entity
)	I-Entity
;	O
unless	O
you	O
really	O
","	O
	
 -X-	O
Or	O
in	O
this	O
case	O
","	O
IOUtils.toString	B-Entity
(	I-Entity
inputStream	I-Entity
","	I-Entity
encoding	I-Entity
)	I-Entity
.	O
 -X-	O
	
I	O
think	O
the	O
below	O
answer	O
(	O
IOUtils.toString	B-Entity
(	I-Entity
)	I-Entity
)	O
is	O
simpler	O
since	O
there	O
is	O
no	O
need	O
for	O
a	O
StringWriter	O
.	O
	
 -X-	O
Also	O
see	O
:	O
(	O
URL_http	O
:	O
/	O
/	O
commons.apache.org	O
/	O
proper	O
/	O
commons-io	O
/	O
javadocs	O
/	O
api-2.4	O
/	O
o	O
rg	O
/	O
apache	O
/	O
commons	O
/	O
io	O
/	O
IOUtils.html	O
#	O
toString	O
%	O
28java.io.InputStream	B-Entity
","	O
%	O
20java.lang	O
.	O
 -X-	O
	
IOUtils.toString	B-Entity
is	O
deprecated	O
.	O
	
To	O
save	O
anyone	O
the	O
hassle	O
of	O
Googling	O
-	O
org.apache.commons	B-Entity
commons-io	O
1.3.2	O
.	O
	
 -X-	O
Also	O
little	O
improvement	O
would	O
be	O
to	O
use	O
apache	O
io	O
(	O
or	O
other	O
)	O
constant	O
for	O
character	O
encoding	O
instead	O
of	O
using	O
plain	O
string	O
literal	O
-	O
eg	O
:	O
IOUtils.toString	B-Entity
(	O
myInputStream	O
","	O
Charsets.UTF_8	O
)	O
;	O
.	O
 -X-	O
	
If	O
you	O
are	O
using	O
Google-Collections	O
/	O
Guava	B-Entity
you	O
could	O
do	O
the	O
following	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
 -X-	O
1	O
for	O
guava	B-Entity
","	O
-1	O
for	O
not	O
specifying	O
the	O
encoding	O
of	O
the	O
input	O
stream	O
.	O
 -X-	O
	
 -X-	O
@	O
plasma147	O
Instead	O
of	O
downvoting	O
","	O
consider	O
editing	O
the	O
example	O
(	O
I	O
just	O
submitted	O
that	O
","	O
adding	O
Closeables.closeQuietly	B-Entity
(	I-Entity
stream	I-Entity
)	I-Entity
;	O
)	O
.	O
 -X-	O
	
 -X-	O
Crashed	O
in	O
Android	O
with	O
OutOfMemory	B-Entity
error	O
on	O
the	O
 -X-	O
 -X-	O
.write	O
 -X-	O
 -X-	O
line	O
","	O
every	O
time	O
","	O
for	O
short	O
strings	O
.	O
 -X-	O
	
Is	O
n't	O
there	O
a	O
reader.close	B-Entity
(	I-Entity
)	I-Entity
missing	O
?	O
	
The	O
provided	O
InputStream	B-Entity
should	O
be	O
closed	O
by	O
the	O
caller	O
.	O
	
use	O
a	O
StringBuilder	B-Entity
.	O
	
Changed	O
to	O
use	O
StringBuilder	B-Entity
.	O
	
If	O
you	O
ca	O
n't	O
use	O
Commons	O
IO	O
(	O
FileUtils	O
/	O
IOUtils	O
/	O
CopyUtils	O
)	O
here	O
's	O
an	O
example	O
using	O
a	O
BufferedReader	B-Entity
to	O
read	O
the	O
file	O
line	O
by	O
line	O
:	O
CODESNIPPET_JAVA1	O
.	O
	
or	O
if	O
you	O
want	O
raw	O
speed	O
I	O
'd	O
propose	O
a	O
variation	O
on	O
what	O
Paul	O
de	O
Vrieze	O
suggested	O
(	O
which	O
avoids	O
using	O
a	O
StringWriter	B-Entity
(	O
which	O
uses	O
a	O
StringBuffer	O
internally	O
)	O
:	O
CODESNIPPET_JAVA2	O
.	O
	
 -X-	O
Since	O
you	O
're	O
using	O
buffer	O
variable	O
locally	O
with	O
no	O
chance	O
of	O
being	O
shared	O
across	O
multiple	O
threads	O
you	O
should	O
consider	O
changing	O
its	O
type	O
to	O
StringBuilder	B-Entity
","	O
to	O
avoid	O
the	O
overhead	O
of	O
(	O
useless	O
)	O
synchronization	O
.	O
 -X-	O
	
 -X-	O
Please	O
note	O
","	O
according	O
to	O
Java	O
docs	O
","	O
the	O
available	O
(	O
)	O
method	O
might	O
not	O
work	O
with	O
InputStream	O
but	O
always	O
works	O
with	O
BufferedInputStream.In	B-Entity
case	O
you	O
do	O
n't	O
want	O
to	O
use	O
available	O
(	O
)	O
method	O
we	O
can	O
always	O
use	O
the	O
below	O
code	O
CODESNIPPET_JAVA2	O
.	O
 -X-	O
	
You	O
can	O
use	O
apache	O
commons.In	O
the	O
IOUtils	B-Entity
you	O
can	O
find	O
the	O
toString	O
metod	O
with	O
3	O
helpfull	O
implementations	O
.	O
	
 -X-	O
First	O
","	O
you	O
have	O
to	O
know	O
the	O
encoding	O
of	O
string	O
that	O
you	O
want	O
to	O
convert.Because	O
the	O
java.io.InputStream	B-Entity
operates	O
an	O
underlying	O
array	O
of	O
bytes	O
","	O
however	O
","	O
a	O
string	O
is	O
composed	O
by	O
a	O
array	O
of	O
character	O
that	O
needs	O
an	O
encoding	O
","	O
e	O
","	O
g	O
.	O
 -X-	O
	
Do	O
n't	O
be	O
burnt	O
by	O
misunderstanding	O
what	O
available	B-Entity
(	I-Entity
)	I-Entity
gives	O
you	O
.	O
	
 -X-	O
As	O
mentioned	O
above	O
","	O
available	B-Entity
(	I-Entity
)	I-Entity
is	O
not	O
the	O
way	O
to	O
go	O
.	O
 -X-	O
	
I	O
get	O
java.io.StreamCorruptedException	B-Entity
:	O
invalid	O
stream	O
header	O
.	O
	
 -X-	O
ObjectInputStream	B-Entity
is	O
about	O
deserialization	O
","	O
and	O
the	O
stream	O
have	O
to	O
respect	O
the	O
serialization	O
protocol	O
to	O
work	O
","	O
which	O
may	O
not	O
always	O
TRUE	O
in	O
the	O
context	O
of	O
this	O
question	O
.	O
 -X-	O
