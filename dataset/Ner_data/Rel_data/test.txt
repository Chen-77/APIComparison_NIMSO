"+1 -X- _ O
@sean-patrick-floyd: -X- _ O
could -X- _ O
return -X- _ O
null, -X- _ O
then -X- _ O
the -X- _ O
bloat -X- _ O
is -X- _ O
in -X- _ O
the -X- _ O
code, -X- _ O
making -X- _ O
it -X- _ O
unusable -X- _ O
again.","It -X- _ O
is -X- _ O
a -X- _ O
matter -X- _ O
of -X- _ O
taste -X- _ O
indeed. -X- _ O
I -X- _ O
had -X- _ O
considered -X- _ O
using -X- _ O
methods -X- _ O
like -X- _ O
parseOrNull(String), -X- _ B-Entity
but -X- _ O
I -X- _ O
don't -X- _ O
think -X- _ O
that -X- _ O
really -X- _ O
fits -X- _ O
with -X- _ O
the -X- _ O
Java -X- _ O
way -X- _ O
of -X- _ O
doing -X- _ O
things -X- _ O
as -X- _ O
set -X- _ O
by -X- _ O
the -X- _ O
core -X- _ O
JDK -X- _ O
libraries. -X- _ O
Plus -X- _ O
you're -X- _ O
forcing -X- _ O
people -X- _ O
to -X- _ O
check -X- _ O
for -X- _ O
nulls -X- _ O
or -X- _ O
get -X- _ O
an -X- _ O
unhelpful -X- _ O
NullPointerException -X- _ O
in -X- _ O
the -X- _ O
case -X- _ O
of -X- _ O
them -X- _ O
parsing -X- _ O
strings -X- _ O
that -X- _ O
they -X- _ O
100% -X- _ O
expect -X- _ O
to -X- _ O
be -X- _ O
valid -X- _ O
(versus -X- _ O
user -X- _ O
input -X- _ O
where -X- _ O
they're -X- _ O
expecting -X- _ O
pretty -X- _ O
much -X- _ O
anything)." -X- _ O

"If -X- _ O
it -X- _ O
was -X- _ O
for -X- _ O
internal -X- _ O
use -X- _ O
only, -X- _ O
I'd -X- _ O
probably -X- _ O
do -X- _ O
that. -X- _ O
,parseOrNull, -X- _ B-Entity
and -X- _ O
,parseOrThrow, -X- _ B-Entity
(throwing -X- _ O
an -X- _ O
unchecked -X- _ O
exception -X- _ O
if -X- _ O
parsing -X- _ O
failed) -X- _ O
is -X- _ O
actually -X- _ O
a -X- _ O
convention -X- _ O
that -X- _ O
I -X- _ O
use -X- _ O
quite -X- _ O
often. -X- _ O
But -X- _ O
I -X- _ O
don't -X- _ O
think -X- _ O
that -X- _ O
would -X- _ O
be -X- _ O
so -X- _ O
good -X- _ O
for -X- _ O
a -X- _ O
public -X- _ O
API, -X- _ O
for -X- _ O
the -X- _ O
reasons -X- _ O
you -X- _ O
mentioned. -X- _ O
I -X- _ O
suspect -X- _ O
it -X- _ O
would -X- _ O
confuse -X- _ O
people, -X- _ O
since -X- _ O
quite -X- _ O
likely -X- _ O
it -X- _ O
wouldn't -X- _ O
be -X- _ O
a -X- _ O
convention -X- _ O
they'd -X- _ O
seen -X- _ O
before -X- _ O
and -X- _ O
really -X- _ O
they'll -X- _ O
just -X- _ O
want -X- _ O
to -X- _ O
get -X- _ O
the -X- _ O
job -X- _ O
done -X- _ O
ASAP -X- _ O
rather -X- _ O
than -X- _ O
figure -X- _ O
out -X- _ O
my -X- _ O
terminology.","It -X- _ O
is -X- _ O
a -X- _ O
matter -X- _ O
of -X- _ O
taste -X- _ O
indeed. -X- _ O
I -X- _ O
had -X- _ O
considered -X- _ O
using -X- _ O
methods -X- _ O
like -X- _ O
parseOrNull(String), -X- _ O
but -X- _ O
I -X- _ O
don't -X- _ O
think -X- _ O
that -X- _ O
really -X- _ O
fits -X- _ O
with -X- _ O
the -X- _ O
Java -X- _ O
way -X- _ O
of -X- _ O
doing -X- _ O
things -X- _ O
as -X- _ O
set -X- _ O
by -X- _ O
the -X- _ O
core -X- _ O
JDK -X- _ O
libraries. -X- _ O
Plus -X- _ O
you're -X- _ O
forcing -X- _ O
people -X- _ O
to -X- _ O
check -X- _ O
for -X- _ O
nulls -X- _ O
or -X- _ O
get -X- _ O
an -X- _ O
unhelpful -X- _ O
NullPointerException -X- _ O
in -X- _ O
the -X- _ O
case -X- _ O
of -X- _ O
them -X- _ O
parsing -X- _ O
strings -X- _ O
that -X- _ O
they -X- _ O
100% -X- _ O
expect -X- _ O
to -X- _ O
be -X- _ O
valid -X- _ O
(versus -X- _ O
user -X- _ O
input -X- _ O
where -X- _ O
they're -X- _ O
expecting -X- _ O
pretty -X- _ O
much -X- _ O
anything)." -X- _ O

"@V.Kalyuzhnyu -X- _ O
Try.. -X- _ O
catch -X- _ O
will -X- _ O
handle -X- _ O
the -X- _ O
error -X- _ O
thrown -X- _ O
by -X- _ O
the -X- _ O
,doGetRequest,'s -X- _ B-Entity
,IOException","String -X- _ O
res -X- _ O
= -X- _ O
response.body().string();, -X- _ O
will -X- _ O
block -X- _ O
if -X- _ O
the -X- _ O
response -X- _ O
body -X- _ O
is -X- _ O
large -X- _ O
and -X- _ O
not -X- _ O
available -X- _ O
immediately -X- _ O
(so -X- _ O
one -X- _ O
might -X- _ O
want -X- _ O
to -X- _ O
do -X- _ O
it -X- _ O
in -X- _ O
a -X- _ O
separate -X- _ O
threadpool -X- _ O
for -X- _ O
blocking -X- _ O
operations). -X- _ O
Also -X- _ O
– -X- _ O
it’d -X- _ O
be -X- _ O
good -X- _ O
idea -X- _ O
to -X- _ O
wrap -X- _ O
it -X- _ O
in -X- _ O
,try -X- _ O
(Response -X- _ O
res -X- _ O
= -X- _ O
response), -X- _ O
to -X- _ O
ensure -X- _ O
the -X- _ O
response -X- _ O
is -X- _ O
closed, -X- _ O
if -X- _ O
eg. -X- _ O
there -X- _ O
is -X- _ O
no -X- _ O
body -X- _ O
in -X- _ O
it." -X- _ O

"There -X- _ O
is -X- _ O
no -X- _ O
need -X- _ O
in -X- _ O
,try -X- _ O
{...} -X- _ O
catch -X- _ O
(IOException -X- _ O
e) -X- _ O
{...}, -X- _ O
and -X- _ O
of -X- _ O
course -X- _ O
,doGetRequest(String -X- _ B-Entity
url) -X- _ I-Entity
throws -X- _ O
IOException{","@V.Kalyuzhnyu -X- _ O
Try.. -X- _ O
catch -X- _ O
will -X- _ O
handle -X- _ O
the -X- _ O
error -X- _ O
thrown -X- _ O
by -X- _ O
the -X- _ O
,doGetRequest,'s -X- _ B-Entity
,IOException" -X- _ O

Thread.stop() -X- _ B-Entity
might -X- _ O
cause -X- _ O
application -X- _ O
to -X- _ O
crash -X- _ O
(Happens -X- _ O
with -X- _ O
me -X- _ O
consistently -X- _ O
in -X- _ O
a -X- _ O
larger -X- _ O
enviornment) -X- _ O
if -X- _ O
that -X- _ O
thread -X- _ O
is -X- _ O
processing -X- _ O
some -X- _ O
native -X- _ O
calls.,"Downvoting. -X- _ O
The -X- _ O
""exit"" -X- _ O
call -X- _ O
doesn't -X- _ O
exit -X- _ O
the -X- _ O
script -X- _ O
engine -X- _ O
but -X- _ O
the -X- _ O
whole -X- _ O
JVM." -X- _ O

"Argh, -X- _ O
missed -X- _ O
that -X- _ O
one. -X- _ O
That -X- _ O
leaves -X- _ O
only -X- _ O
the -X- _ O
deprecated -X- _ O
stop() -X- _ B-Entity
i -X- _ O
believe?","Downvoting. -X- _ O
The -X- _ O
""exit"" -X- _ O
call -X- _ O
doesn't -X- _ O
exit -X- _ O
the -X- _ O
script -X- _ O
engine -X- _ O
but -X- _ O
the -X- _ O
whole -X- _ O
JVM." -X- _ O

"-1 -X- _ O
If -X- _ O
the -X- _ O
tread -X- _ O
isn't -X- _ O
waiting, -X- _ O
there -X- _ O
won't -X- _ O
be -X- _ O
an -X- _ O
Exception. -X- _ O
Hence, -X- _ O
it -X- _ O
won't -X- _ O
work -X- _ O
with -X- _ O
an -X- _ O
endless -X- _ O
loop. -X- _ O
The -X- _ O
code -X- _ O
would -X- _ O
have -X- _ O
to -X- _ O
check -X- _ O
,Thread.currentThread().interrupted(), -X- _ B-Entity
for -X- _ O
your -X- _ O
suggestions -X- _ O
to -X- _ O
work.","Argh, -X- _ O
missed -X- _ O
that -X- _ O
one. -X- _ O
That -X- _ O
leaves -X- _ O
only -X- _ O
the -X- _ O
deprecated -X- _ O
stop() -X- _ O
i -X- _ O
believe?" -X- _ O

"OK, -X- _ O
it -X- _ O
works -X- _ O
perfectly -X- _ O
if -X- _ O
you -X- _ O
call -X- _ O
executorService.shutdown() -X- _ B-Entity
in -X- _ O
a -X- _ O
finally -X- _ O
block -X- _ O
after -X- _ O
handling -X- _ O
all -X- _ O
those -X- _ O
exceptions. -X- _ O
Cheers.","Argh, -X- _ O
missed -X- _ O
that -X- _ O
one. -X- _ O
That -X- _ O
leaves -X- _ O
only -X- _ O
the -X- _ O
deprecated -X- _ O
stop() -X- _ O
i -X- _ O
believe?" -X- _ O

"After -X- _ O
Future's -X- _ O
cancellation -X- _ O
it's -X- _ O
true -X- _ O
the -X- _ O
background -X- _ O
thread -X- _ O
keeps -X- _ O
running, -X- _ O
but -X- _ O
I've -X- _ O
noticed -X- _ O
after -X- _ O
a -X- _ O
while -X- _ O
it -X- _ O
gets -X- _ O
killed -X- _ O
eventually. -X- _ O
Is -X- _ O
this -X- _ O
expected?","OK, -X- _ O
it -X- _ O
works -X- _ O
perfectly -X- _ O
if -X- _ O
you -X- _ O
call -X- _ O
executorService.shutdown() -X- _ B-Entity
in -X- _ O
a -X- _ O
finally -X- _ O
block -X- _ O
after -X- _ O
handling -X- _ O
all -X- _ O
those -X- _ O
exceptions. -X- _ O
Cheers." -X- _ O

"hi, -X- _ O
thanks -X- _ O
for -X- _ O
the -X- _ O
elegant -X- _ O
solution, -X- _ O
but -X- _ O
even -X- _ O
after -X- _ O
the -X- _ O
Future -X- _ O
cancellation -X- _ O
the -X- _ O
background -X- _ O
thread -X- _ O
is -X- _ O
still -X- _ O
running -X- _ O
consuming -X- _ O
the -X- _ O
CPU -X- _ O
resources. -X- _ O
so -X- _ O
the -X- _ O
question -X- _ O
still -X- _ O
remains..","OK, -X- _ O
it -X- _ O
works -X- _ O
perfectly -X- _ O
if -X- _ O
you -X- _ O
call -X- _ O
executorService.shutdown() -X- _ B-Entity
in -X- _ O
a -X- _ O
finally -X- _ O
block -X- _ O
after -X- _ O
handling -X- _ O
all -X- _ O
those -X- _ O
exceptions. -X- _ O
Cheers." -X- _ O

"Duh! -X- _ O
Thanks -X- _ O
for -X- _ O
the -X- _ O
comment, -X- _ O
added -X- _ O
the -X- _ O
Future -X- _ O
cancellation.","Argh, -X- _ O
missed -X- _ O
that -X- _ O
one. -X- _ O
That -X- _ O
leaves -X- _ O
only -X- _ O
the -X- _ O
deprecated -X- _ O
stop() -X- _ B-Entity
i -X- _ O
believe?" -X- _ O

"This -X- _ O
resumes -X- _ O
control -X- _ O
after -X- _ O
15 -X- _ O
seconds -X- _ O
with -X- _ O
a -X- _ O
timeout -X- _ O
exception, -X- _ O
but -X- _ O
leaves -X- _ O
the -X- _ O
background -X- _ O
thread -X- _ O
running, -X- _ O
so -X- _ O
the -X- _ O
question -X- _ O
of -X- _ O
how -X- _ O
to -X- _ O
interrupt -X- _ O
it -X- _ O
remains.","-1 -X- _ O
If -X- _ O
the -X- _ O
tread -X- _ O
isn't -X- _ O
waiting, -X- _ O
there -X- _ O
won't -X- _ O
be -X- _ O
an -X- _ O
Exception. -X- _ O
Hence, -X- _ O
it -X- _ O
won't -X- _ O
work -X- _ O
with -X- _ O
an -X- _ O
endless -X- _ O
loop. -X- _ O
The -X- _ O
code -X- _ O
would -X- _ O
have -X- _ O
to -X- _ O
check -X- _ O
,Thread.currentThread().interrupted(), -X- _ B-Entity
for -X- _ O
your -X- _ O
suggestions -X- _ O
to -X- _ O
work." -X- _ O

"Thanks -X- _ O
for -X- _ O
the -X- _ O
fast -X- _ O
response! -X- _ O
When -X- _ O
I -X- _ O
understand -X- _ O
ur -X- _ O
suggestion -X- _ O
right -X- _ O
u -X- _ O
would -X- _ O
write -X- _ O
a -X- _ O
custom -X- _ O
MessageConverter -X- _ B-Entity
which -X- _ O
returns -X- _ O
the -X- _ O
error-object -X- _ O
in -X- _ O
String-Format, -X- _ O
which -X- _ O
would -X- _ O
not -X- _ O
result -X- _ O
in -X- _ O
an -X- _ O
HttpMediaTypeNotAcceptableException. -X- _ O
I -X- _ O
dont -X- _ O
thought -X- _ O
about -X- _ O
this -X- _ O
option -X- _ O
and -X- _ O
think -X- _ O
that -X- _ O
it -X- _ O
will -X- _ O
be -X- _ O
really -X- _ O
useful -X- _ O
in -X- _ O
other -X- _ O
situations -X- _ O
but -X- _ O
for -X- _ O
my -X- _ O
problem -X- _ O
I -X- _ O
dont -X- _ O
think -X- _ O
its -X- _ O
fitting. -X- _ O
The -X- _ O
client -X- _ O
should -X- _ O
b -X- _ O
eable -X- _ O
to -X- _ O
handle -X- _ O
errors -X- _ O
in -X- _ O
a -X- _ O
generic/common -X- _ O
way -X- _ O
(expecting -X- _ O
it -X- _ O
to -X- _ O
always -X- _ O
be -X- _ O
json). -X- _ O
I -X- _ O
think -X- _ O
its -X- _ O
more -X- _ O
a -X- _ O
REST-Style -X- _ O
question -X- _ O
than -X- _ O
a -X- _ O
technical -X- _ O
one. -X- _ O
How -X- _ O
to -X- _ O
handle -X- _ O
this -X- _ O
in -X- _ O
general -X- _ O
in -X- _ O
a -X- _ O
rest -X- _ O
api.","You -X- _ O
can -X- _ O
also -X- _ O
return -X- _ O
response -X- _ O
as -X- _ O
,text/plain, -X- _ O
in -X- _ O
a -X- _ O
parseable -X- _ O
way." -X- _ O

"Would -X- _ O
you -X- _ O
need -X- _ O
just -X- _ O
the -X- _ O
core -X- _ O
API's -X- _ O
or -X- _ O
would -X- _ O
need -X- _ O
the -X- _ O
extended -X- _ O
API's, -X- _ O
ie -X- _ O
JavaMail. -X- _ B-Entity
Do -X- _ O
you -X- _ O
want -X- _ O
3rd -X- _ O
party -X- _ O
API's?",@MadProgrammer -X- _ O
Version -X- _ O
specific -X- _ O
is -X- _ O
not -X- _ O
really -X- _ O
that -X- _ O
much -X- _ O
of -X- _ O
a -X- _ O
concern. -X- _ O
But -X- _ O
the -X- _ O
code -X- _ O
bases -X- _ O
that -X- _ O
I -X- _ O
have -X- _ O
to -X- _ O
experiment -X- _ O
with -X- _ O
are -X- _ O
written -X- _ O
in -X- _ O
Java -X- _ O
6. -X- _ O

"Would -X- _ O
it -X- _ O
need -X- _ O
to -X- _ O
version -X- _ O
specific? -X- _ O
ie -X- _ O
Java -X- _ O
7, -X- _ O
Java -X- _ O
6? -X- _ O
Or -X- _ O
would -X- _ O
you -X- _ O
need -X- _ O
to -X- _ O
be -X- _ O
able -X- _ O
trace -X- _ O
between","Would -X- _ O
you -X- _ O
need -X- _ O
just -X- _ O
the -X- _ O
core -X- _ O
API's -X- _ O
or -X- _ O
would -X- _ O
need -X- _ O
the -X- _ O
extended -X- _ O
API's, -X- _ O
ie -X- _ O
JavaMail. -X- _ B-Entity
Do -X- _ O
you -X- _ O
want -X- _ O
3rd -X- _ O
party -X- _ O
API's?" -X- _ O

"To -X- _ O
build -X- _ O
a -X- _ O
research -X- _ O
prototype -X- _ O
for -X- _ O
""feature -X- _ O
location"" -X- _ O
and -X- _ O
""tracebility"" -X- _ O
between -X- _ O
code -X- _ O
and -X- _ O
documentation.","Would -X- _ O
you -X- _ O
need -X- _ O
just -X- _ O
the -X- _ O
core -X- _ O
API's -X- _ O
or -X- _ O
would -X- _ O
need -X- _ O
the -X- _ O
extended -X- _ O
API's, -X- _ O
ie -X- _ O
JavaMail. -X- _ B-Entity
Do -X- _ O
you -X- _ O
want -X- _ O
3rd -X- _ O
party -X- _ O
API's?" -X- _ O

"@RostislavMatl -X- _ O
Maybe, -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
Tapestry. -X- _ B-Entity
But -X- _ O
from -X- _ O
the -X- _ O
doc, -X- _ O
I -X- _ O
can -X- _ O
see -X- _ O
that -X- _ O
it's -X- _ O
an -X- _ O
""Adaptive -X- _ O
API"" -X- _ O
but -X- _ O
maybe -X- _ O
it's -X- _ O
not -X- _ O
an -X- _ O
""Adaptive -X- _ O
Pattern"". -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
how -X- _ O
those -X- _ O
annotations -X- _ O
works -X- _ O
exactly.",Hmm. -X- _ O
Changing -X- _ O
an -X- _ O
enum -X- _ O
type -X- _ O
to -X- _ O
add -X- _ O
new -X- _ O
members -X- _ O
seems -X- _ O
questionable. -X- _ O

I -X- _ O
think -X- _ O
that -X- _ O
this -X- _ O
is -X- _ O
what -X- _ O
the -X- _ O
mentioned -X- _ O
Tapestry -X- _ B-Entity
5 -X- _ O
uses.,"@RostislavMatl -X- _ O
Maybe, -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
Tapestry. -X- _ B-Entity
But -X- _ O
from -X- _ O
the -X- _ O
doc, -X- _ O
I -X- _ O
can -X- _ O
see -X- _ O
that -X- _ O
it's -X- _ O
an -X- _ O
""Adaptive -X- _ O
API"" -X- _ O
but -X- _ O
maybe -X- _ O
it's -X- _ O
not -X- _ O
an -X- _ O
""Adaptive -X- _ O
Pattern"". -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
how -X- _ O
those -X- _ O
annotations -X- _ O
works -X- _ O
exactly." -X- _ O

interesting.... -X- _ O
this -X- _ O
is -X- _ O
a -X- _ O
new -X- _ O
concept -X- _ O
for -X- _ O
me -X- _ O
so -X- _ O
I'm -X- _ O
not -X- _ O
sure -X- _ O
if -X- _ O
we -X- _ O
can -X- _ O
use -X- _ O
annotations -X- _ O
in -X- _ O
this -X- _ O
way... -X- _ O
but -X- _ O
maybe -X- _ O
it -X- _ O
would -X- _ O
work -X- _ O
for -X- _ O
us.,"@RostislavMatl -X- _ O
Maybe, -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
Tapestry. -X- _ B-Entity
But -X- _ O
from -X- _ O
the -X- _ O
doc, -X- _ O
I -X- _ O
can -X- _ O
see -X- _ O
that -X- _ O
it's -X- _ O
an -X- _ O
""Adaptive -X- _ O
API"" -X- _ O
but -X- _ O
maybe -X- _ O
it's -X- _ O
not -X- _ O
an -X- _ O
""Adaptive -X- _ O
Pattern"". -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
how -X- _ O
those -X- _ O
annotations -X- _ O
works -X- _ O
exactly." -X- _ O

"thanks -X- _ O
Marco... -X- _ O
yeah, -X- _ O
I -X- _ O
ordered -X- _ O
a -X- _ O
copy -X- _ O
of -X- _ O
Tulach's -X- _ O
book -X- _ O
about -X- _ O
10 -X- _ O
minutes -X- _ O
before -X- _ O
posting -X- _ O
this -X- _ O
question.","@RostislavMatl -X- _ O
Maybe, -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
Tapestry. -X- _ B-Entity
But -X- _ O
from -X- _ O
the -X- _ O
doc, -X- _ O
I -X- _ O
can -X- _ O
see -X- _ O
that -X- _ O
it's -X- _ O
an -X- _ O
""Adaptive -X- _ O
API"" -X- _ O
but -X- _ O
maybe -X- _ O
it's -X- _ O
not -X- _ O
an -X- _ O
""Adaptive -X- _ O
Pattern"". -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
how -X- _ O
those -X- _ O
annotations -X- _ O
works -X- _ O
exactly." -X- _ O

"I -X- _ O
had -X- _ O
looked -X- _ O
into -X- _ O
Play -X- _ O
2 -X- _ O
Mini. -X- _ O
I -X- _ O
downloaded -X- _ O
it -X- _ O
and -X- _ O
tried -X- _ O
to -X- _ O
run -X- _ O
their -X- _ O
sample -X- _ O
application -X- _ O
(sbt), -X- _ O
but -X- _ O
got -X- _ O
a -X- _ O
compile -X- _ O
error -X- _ O
""object -X- _ O
typesafe -X- _ O
is -X- _ O
not -X- _ O
a -X- _ O
member -X- _ O
of -X- _ O
package -X- _ O
com -X- _ O
object -X- _ O
Global -X- _ O
extends -X- _ O
com.typesafe.play.mini.SetupJavaApplicationFor[com.example.App]""..I -X- _ B-Entity
am -X- _ O
new -X- _ O
to -X- _ O
this -X- _ O
type -X- _ O
of -X- _ O
stuff..not -X- _ O
sure -X- _ O
how -X- _ O
to -X- _ O
get -X- _ O
it -X- _ O
working...","I -X- _ O
basically -X- _ O
downloaded -X- _ O
it -X- _ O
(came -X- _ O
with -X- _ O
Play -X- _ O
2 -X- _ O
Mini) -X- _ O
and -X- _ O
then -X- _ O
it -X- _ O
said -X- _ O
to -X- _ O
do -X- _ O
SBT -X- _ O
on -X- _ O
it, -X- _ O
then -X- _ O
run. -X- _ O
Got -X- _ O
that -X- _ O
error....In -X- _ O
reality -X- _ O
I'm -X- _ O
not -X- _ O
familiar -X- _ O
with -X- _ O
SBT -X- _ O
or -X- _ O
anything. -X- _ O
I -X- _ O
just -X- _ O
started -X- _ O
using -X- _ O
it -X- _ O
when -X- _ O
I -X- _ O
started -X- _ O
Akka -X- _ O
type -X- _ O
of -X- _ O
stuff, -X- _ O
but -X- _ O
I -X- _ O
run -X- _ O
that -X- _ O
from -X- _ O
Eclipse -X- _ O
anyway..." -X- _ O

"Agreed. -X- _ O
I -X- _ O
have -X- _ O
the -X- _ O
same -X- _ O
problem, -X- _ O
but -X- _ O
in -X- _ O
this -X- _ O
case -X- _ O
the -X- _ O
the -X- _ O
failure -X- _ O
is -X- _ O
,Caused -X- _ O
by: -X- _ O
android.os.BadParcelableException: -X- _ B-Entity
ClassNotFoundException -X- _ O
when -X- _ O
unmarshalling: -X- _ O
android.support.v7.widget.RecyclerView$SavedState,. -X- _ B-Entity
My -X- _ O
RecyclerView -X- _ O
is -X- _ O
already -X- _ O
coming -X- _ O
in -X- _ O
on -X- _ O
an -X- _ O
,<include>,, -X- _ O
so -X- _ O
the -X- _ O
marked -X- _ O
answer -X- _ O
would -X- _ O
not -X- _ O
solve -X- _ O
my -X- _ O
issue, -X- _ O
but -X- _ O
this -X- _ O
does.",This -X- _ O
worked -X- _ O
perfectly -X- _ O
for -X- _ O
salving -X- _ O
my -X- _ O
issue -X- _ O
with -X- _ O
an -X- _ O
error -X- _ O
of -X- _ O
ClassNotFoundException -X- _ O
when -X- _ O
unmarshalling: -X- _ O
android.support.v7.widget.RecyclerView$SavedState. -X- _ B-Entity
+2 -X- _ O
for -X- _ O
not -X- _ O
requiring -X- _ O
me -X- _ O
to -X- _ O
change -X- _ O
my -X- _ O
layouts. -X- _ O

"I -X- _ O
was -X- _ O
using -X- _ O
api -X- _ O
23, -X- _ O
Mike's -X- _ O
solution -X- _ O
worked.","Agreed. -X- _ O
I -X- _ O
have -X- _ O
the -X- _ O
same -X- _ O
problem, -X- _ O
but -X- _ O
in -X- _ O
this -X- _ O
case -X- _ O
the -X- _ O
the -X- _ O
failure -X- _ O
is -X- _ O
,Caused -X- _ O
by: -X- _ O
android.os.BadParcelableException: -X- _ B-Entity
ClassNotFoundException -X- _ O
when -X- _ O
unmarshalling: -X- _ O
android.support.v7.widget.RecyclerView$SavedState,. -X- _ B-Entity
My -X- _ O
RecyclerView -X- _ O
is -X- _ O
already -X- _ O
coming -X- _ O
in -X- _ O
on -X- _ O
an -X- _ O
,<include>,, -X- _ O
so -X- _ O
the -X- _ O
marked -X- _ O
answer -X- _ O
would -X- _ O
not -X- _ O
solve -X- _ O
my -X- _ O
issue, -X- _ O
but -X- _ O
this -X- _ O
does." -X- _ O

what -X- _ O
is -X- _ O
the -X- _ O
android -X- _ O
version? -X- _ O
This -X- _ O
only -X- _ O
happened -X- _ O
in -X- _ O
the -X- _ O
api -X- _ O
10. -X- _ O
Because -X- _ O
I've -X- _ O
ever -X- _ O
had -X- _ O
this -X- _ O
error -X- _ O
and -X- _ O
still -X- _ O
I -X- _ O
don't -X- _ O
fixed.,"Agreed. -X- _ O
I -X- _ O
have -X- _ O
the -X- _ O
same -X- _ O
problem, -X- _ O
but -X- _ O
in -X- _ O
this -X- _ O
case -X- _ O
the -X- _ O
the -X- _ O
failure -X- _ O
is -X- _ O
,Caused -X- _ O
by: -X- _ O
android.os.BadParcelableException: -X- _ B-Entity
ClassNotFoundException -X- _ O
when -X- _ O
unmarshalling: -X- _ O
android.support.v7.widget.RecyclerView$SavedState,. -X- _ B-Entity
My -X- _ O
RecyclerView -X- _ O
is -X- _ O
already -X- _ O
coming -X- _ O
in -X- _ O
on -X- _ O
an -X- _ O
,<include>,, -X- _ O
so -X- _ O
the -X- _ O
marked -X- _ O
answer -X- _ O
would -X- _ O
not -X- _ O
solve -X- _ O
my -X- _ O
issue, -X- _ O
but -X- _ O
this -X- _ O
does." -X- _ O

"It -X- _ O
can -X- _ O
happen. -X- _ O
I -X- _ O
checked -X- _ O
the -X- _ O
constructor -X- _ O
and -X- _ O
found -X- _ O
a -X- _ O
,NullPointerException, -X- _ O
would -X- _ O
be -X- _ O
thrown -X- _ O
before. -X- _ O
But -X- _ O
then -X- _ O
I -X- _ O
searched -X- _ O
the -X- _ O
whole -X- _ O
code -X- _ O
and -X- _ O
found -X- _ O
the -X- _ O
close() -X- _ B-Entity
method, -X- _ O
modifying -X- _ O
the -X- _ O
str -X- _ O
member -X- _ O
variabel. -X- _ O
Reading -X- _ O
the -X- _ O
JavaDoc -X- _ O
lead -X- _ O
to -X- _ O
the -X- _ O
conclusion, -X- _ O
that -X- _ O
read() -X- _ B-Entity
must -X- _ O
throw -X- _ O
the -X- _ O
IOException.",@Harmlezz -X- _ O
That's -X- _ O
what -X- _ O
I -X- _ O
have -X- _ O
already -X- _ O
asked -X- _ O
in -X- _ O
my -X- _ O
last -X- _ O
comment. -X- _ O

"I -X- _ O
did -X- _ O
it -X- _ O
before -X- _ O
asking -X- _ O
a -X- _ O
question -X- _ O
:). -X- _ O
I -X- _ O
found -X- _ O
out -X- _ O
that -X- _ O
ensureOpen -X- _ B-Entity
checks -X- _ O
if -X- _ O
input -X- _ O
string -X- _ O
is -X- _ O
not -X- _ O
null, -X- _ O
which -X- _ O
CAN'T -X- _ O
HAPPEN.","If -X- _ O
reader -X- _ O
is -X- _ O
,closed, -X- _ O
then -X- _ O
after -X- _ O
,read, -X- _ O
is -X- _ O
called -X- _ O
again -X- _ O
then -X- _ O
what -X- _ O
will -X- _ O
happen?" -X- _ O

"Its -X- _ O
actually -X- _ O
,ensureOpen(), -X- _ B-Entity
method -X- _ O
that -X- _ O
throws -X- _ O
it. -X- _ O
Then -X- _ O
I -X- _ O
investigated -X- _ O
how -X- _ O
,this.str, -X- _ O
can -X- _ O
be -X- _ O
assigned -X- _ O
to -X- _ O
,null, -X- _ O
then -X- _ O
I -X- _ O
come -X- _ O
to -X- _ O
,close(), -X- _ O
method.",@Harmlezz -X- _ O
That's -X- _ O
what -X- _ O
I -X- _ O
have -X- _ O
already -X- _ O
asked -X- _ O
in -X- _ O
my -X- _ O
last -X- _ O
comment. -X- _ O

"@Braj: -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
know -X- _ O
what's -X- _ O
wrong? -X- _ O
,ensureOpen(), -X- _ B-Entity
does -X- _ O
not -X- _ O
explain -X- _ O
why -X- _ O
the -X- _ O
,IOException, -X- _ O
must -X- _ O
be -X- _ O
thrown. -X- _ O
Only -X- _ O
if -X- _ O
you -X- _ O
follow -X- _ O
the -X- _ O
code -X- _ O
further -X- _ O
to -X- _ O
the -X- _ O
,close(), -X- _ O
method -X- _ O
you -X- _ O
find -X- _ O
the -X- _ O
real -X- _ O
cause. -X- _ O
And -X- _ O
besides: -X- _ O
it -X- _ O
is -X- _ O
a -X- _ O
platform -X- _ O
for -X- _ O
answering -X- _ O
questions -X- _ O
and -X- _ O
not -X- _ O
for","If -X- _ O
reader -X- _ O
is -X- _ O
,closed, -X- _ O
then -X- _ O
after -X- _ O
,read, -X- _ O
is -X- _ O
called -X- _ O
again -X- _ O
then -X- _ O
what -X- _ O
will -X- _ O
happen?" -X- _ O

Doesn't -X- _ O
matter. -X- _ O
The -X- _ O
makers -X- _ O
of -X- _ O
StringReader -X- _ B-Entity
could -X- _ O
declare -X- _ O
read -X- _ O
without -X- _ O
IOException. -X- _ O
That -X- _ O
was -X- _ O
a -X- _ O
mistake -X- _ O
on -X- _ O
their -X- _ O
part.,But -X- _ O
for -X- _ O
safer -X- _ O
side -X- _ O
a -X- _ O
expert -X- _ O
Java -X- _ O
programmer -X- _ O
has -X- _ O
put -X- _ O
this -X- _ O
check. -X- _ O

"Reader -X- _ O
is -X- _ O
a -X- _ O
class, -X- _ O
not -X- _ O
an -X- _ O
interface -X- _ O
and -X- _ O
you -X- _ O
can -X- _ O
override -X- _ O
a -X- _ O
function -X- _ O
with -X- _ O
an -X- _ O
implementation -X- _ O
with -X- _ O
fewer -X- _ O
or -X- _ O
no -X- _ O
exceptions -X- _ O
declared. -X- _ O
And -X- _ O
it -X- _ O
will -X- _ O
work. -X- _ O
So -X- _ O
there's -X- _ O
no -X- _ O
reason -X- _ O
for -X- _ O
StringReader -X- _ B-Entity
to -X- _ O
have -X- _ O
them -X- _ O
declared.",You -X- _ O
can't -X- _ O
do -X- _ O
it -X- _ O
here. -X- _ O

What -X- _ O
are -X- _ O
the -X- _ O
reasons -X- _ O
for -X- _ O
down -X- _ O
votes -X- _ O
?,Doesn't -X- _ O
matter. -X- _ O
The -X- _ O
makers -X- _ O
of -X- _ O
StringReader -X- _ B-Entity
could -X- _ O
declare -X- _ O
read -X- _ O
without -X- _ O
IOException. -X- _ O
That -X- _ O
was -X- _ O
a -X- _ O
mistake -X- _ O
on -X- _ O
their -X- _ O
part. -X- _ O

"The -X- _ O
throws -X- _ O
declaration -X- _ O
in -X- _ O
,StringReader, -X- _ B-Entity
is -X- _ O
mandatory, -X- _ O
because -X- _ O
the -X- _ O
interface -X- _ O
,Reader, -X- _ O
requires -X- _ O
it -X- _ O
even -X- _ O
if -X- _ O
the -X- _ O
implementing -X- _ O
class -X- _ O
won't -X- _ O
never -X- _ O
throws -X- _ O
such -X- _ O
an -X- _ O
exception.","Reader -X- _ O
is -X- _ O
a -X- _ O
class, -X- _ O
not -X- _ O
an -X- _ O
interface -X- _ O
and -X- _ O
you -X- _ O
can -X- _ O
override -X- _ O
a -X- _ O
function -X- _ O
with -X- _ O
an -X- _ O
implementation -X- _ O
with -X- _ O
fewer -X- _ O
or -X- _ O
no -X- _ O
exceptions -X- _ O
declared. -X- _ O
And -X- _ O
it -X- _ O
will -X- _ O
work. -X- _ O
So -X- _ O
there's -X- _ O
no -X- _ O
reason -X- _ O
for -X- _ O
StringReader -X- _ B-Entity
to -X- _ O
have -X- _ O
them -X- _ O
declared." -X- _ O

"Please -X- _ O
don't -X- _ O
use -X- _ O
this -X- _ O
code -X- _ O
,at -X- _ O
all., -X- _ O
There's -X- _ O
no -X- _ O
point -X- _ O
in -X- _ O
deploying -X- _ O
an -X- _ O
insecure -X- _ O
solution -X- _ O
even -X- _ O
just -X- _ O
to -X- _ O
test -X- _ O
it. -X- _ O
You're -X- _ O
running -X- _ O
the -X- _ O
risk -X- _ O
of -X- _ O
it -X- _ O
'leaking' -X- _ O
into -X- _ O
production, -X- _ O
which -X- _ O
would -X- _ O
be -X- _ O
a -X- _ O
,major, -X- _ O
security -X- _ O
breach. -X- _ O
Also -X- _ O
the -X- _ O
code -X- _ O
ignores -X- _ O
exceptions -X- _ O
and -X- _ O
violates -X- _ O
the -X- _ O
contract -X- _ O
of -X- _ O
,TrustManager., -X- _ B-Entity
Avoid.",@EJP -X- _ O
I -X- _ O
wrote -X- _ O
that -X- _ O
at -X- _ O
least -X- _ O
the -X- _ O
root -X- _ O
certificate -X- _ O
is -X- _ O
needed -X- _ O
(in -X- _ O
the -X- _ O
first -X- _ O
paragraph). -X- _ O
I -X- _ O
corrected -X- _ O
the -X- _ O
second -X- _ O
paragraph -X- _ O
to -X- _ O
clarify -X- _ O
this. -X- _ O

"Hi! -X- _ O
thanks -X- _ O
for -X- _ O
you -X- _ O
reply, -X- _ O
I -X- _ O
tried -X- _ O
with -X- _ O
this -X- _ O
code, -X- _ O
import -X- _ O
javax.net.ssl.TrustManager -X- _ B-Entity
and -X- _ O
javax.net.ssl.X509TrustManager, -X- _ B-Entity
and -X- _ O
I -X- _ O
call -X- _ O
this -X- _ O
method -X- _ O
before -X- _ O
my -X- _ O
code, -X- _ O
but -X- _ O
the -X- _ O
exception -X- _ O
still -X- _ O
saying -X- _ O
the -X- _ O
same.","Please -X- _ O
don't -X- _ O
use -X- _ O
this -X- _ O
code -X- _ O
,at -X- _ O
all., -X- _ O
There's -X- _ O
no -X- _ O
point -X- _ O
in -X- _ O
deploying -X- _ O
an -X- _ O
insecure -X- _ O
solution -X- _ O
even -X- _ O
just -X- _ O
to -X- _ O
test -X- _ O
it. -X- _ O
You're -X- _ O
running -X- _ O
the -X- _ O
risk -X- _ O
of -X- _ O
it -X- _ O
'leaking' -X- _ O
into -X- _ O
production, -X- _ O
which -X- _ O
would -X- _ O
be -X- _ O
a -X- _ O
,major, -X- _ O
security -X- _ O
breach. -X- _ O
Also -X- _ O
the -X- _ O
code -X- _ O
ignores -X- _ O
exceptions -X- _ O
and -X- _ O
violates -X- _ O
the -X- _ O
contract -X- _ O
of -X- _ O
,TrustManager., -X- _ O
Avoid." -X- _ O

"Please -X- _ O
don't -X- _ O
use -X- _ O
this -X- _ O
code -X- _ O
in -X- _ O
a -X- _ O
production -X- _ O
environment -X- _ O
as -X- _ O
it -X- _ O
disables -X- _ O
all -X- _ O
certificate -X- _ O
checking. -X- _ O
Therefore -X- _ O
your -X- _ O
implementation -X- _ O
is -X- _ O
then -X- _ O
vulnerable -X- _ O
to -X- _ O
,MITM -X- _ O
attacks,.","Hi! -X- _ O
thanks -X- _ O
for -X- _ O
you -X- _ O
reply, -X- _ O
I -X- _ O
tried -X- _ O
with -X- _ O
this -X- _ O
code, -X- _ O
import -X- _ O
javax.net.ssl.TrustManager -X- _ B-Entity
and -X- _ O
javax.net.ssl.X509TrustManager, -X- _ B-Entity
and -X- _ O
I -X- _ O
call -X- _ O
this -X- _ O
method -X- _ O
before -X- _ O
my -X- _ O
code, -X- _ O
but -X- _ O
the -X- _ O
exception -X- _ O
still -X- _ O
saying -X- _ O
the -X- _ O
same." -X- _ O

"I -X- _ O
agree, -X- _ O
Do -X- _ O
you -X- _ O
have -X- _ O
any -X- _ O
suggestion?","Hi! -X- _ O
thanks -X- _ O
for -X- _ O
you -X- _ O
reply, -X- _ O
I -X- _ O
tried -X- _ O
with -X- _ O
this -X- _ O
code, -X- _ O
import -X- _ O
javax.net.ssl.TrustManager -X- _ B-Entity
and -X- _ O
javax.net.ssl.X509TrustManager, -X- _ B-Entity
and -X- _ O
I -X- _ O
call -X- _ O
this -X- _ O
method -X- _ O
before -X- _ O
my -X- _ O
code, -X- _ O
but -X- _ O
the -X- _ O
exception -X- _ O
still -X- _ O
saying -X- _ O
the -X- _ O
same." -X- _ O

Your -X- _ O
RelaxedX509TrustManager -X- _ B-Entity
doesn't -X- _ O
check -X- _ O
anything -X- _ O
(and -X- _ O
its -X- _ O
isClientTrusted -X- _ O
and -X- _ O
isServerTrusted -X- _ O
methods -X- _ O
won't -X- _ O
be -X- _ O
used): -X- _ O
it's -X- _ O
insecure. -X- _ O
Don't -X- _ O
use -X- _ O
this -X- _ O
solution.,"I -X- _ O
agree, -X- _ O
Do -X- _ O
you -X- _ O
have -X- _ O
any -X- _ O
suggestion?" -X- _ O

"I -X- _ O
had -X- _ O
to -X- _ O
implement -X- _ O
the -X- _ O
""X509TrustManager"" -X- _ B-Entity
Interface -X- _ O
(,docs.oracle.com/javase/6/docs/api/javax/net/ssl/…,), -X- _ O
and -X- _ O
upgrade -X- _ O
to -X- _ O
java7, -X- _ O
these -X- _ O
two -X- _ O
things -X- _ O
were -X- _ O
the -X- _ O
solution, -X- _ O
now -X- _ O
work -X- _ O
fine. -X- _ O
Thanks!","I -X- _ O
agree, -X- _ O
Do -X- _ O
you -X- _ O
have -X- _ O
any -X- _ O
suggestion?" -X- _ O

"Hi, -X- _ O
thanks -X- _ O
for -X- _ O
you -X- _ O
reply, -X- _ O
I -X- _ O
saw -X- _ O
your -X- _ O
comment, -X- _ O
I -X- _ O
used -X- _ O
java6, -X- _ O
now -X- _ O
I -X- _ O
installed -X- _ O
and -X- _ O
configured -X- _ O
java7 -X- _ O
but -X- _ O
the -X- _ O
error -X- _ O
is -X- _ O
still -X- _ O
the -X- _ O
same -X- _ O
:/ -X- _ O
I'll -X- _ O
have -X- _ O
to -X- _ O
try -X- _ O
the -X- _ O
second -X- _ O
option -X- _ O
you -X- _ O
mention.","Hi! -X- _ O
thanks -X- _ O
for -X- _ O
you -X- _ O
reply, -X- _ O
I -X- _ O
tried -X- _ O
with -X- _ O
this -X- _ O
code, -X- _ O
import -X- _ O
javax.net.ssl.TrustManager -X- _ B-Entity
and -X- _ O
javax.net.ssl.X509TrustManager, -X- _ B-Entity
and -X- _ O
I -X- _ O
call -X- _ O
this -X- _ O
method -X- _ O
before -X- _ O
my -X- _ O
code, -X- _ O
but -X- _ O
the -X- _ O
exception -X- _ O
still -X- _ O
saying -X- _ O
the -X- _ O
same." -X- _ O

"By -X- _ O
the -X- _ O
way, -X- _ O
you'll -X- _ O
see -X- _ O
in -X- _ O
this -X- _ O
comment -X- _ O
(,vimeo.com/forums/topic:49393#comment_6729467,) -X- _ O
on -X- _ O
the -X- _ O
Vimeo -X- _ B-Entity
API -X- _ I-Entity
forum -X- _ O
(which -X- _ O
for -X- _ O
some -X- _ O
reason -X- _ O
I -X- _ O
can't -X- _ O
post -X- _ O
to) -X- _ O
that -X- _ O
there's -X- _ O
something -X- _ O
weird -X- _ O
about -X- _ O
the -X- _ O
last -X- _ O
bit. -X- _ O
I'm -X- _ O
guessing -X- _ O
this -X- _ O
means -X- _ O
that -X- _ O
on -X- _ O
my -X- _ O
last -X- _ O
iteration, -X- _ O
I -X- _ O
need -X- _ O
to -X- _ O
set -X- _ O
the -X- _ O
content -X- _ O
range -X- _ O
to -X- _ O
be -X- _ O
,14680064-15125119/15125120, -X- _ O
instead -X- _ O
of -X- _ O
,14680064-15125120/15125120, -X- _ O
for -X- _ O
example. -X- _ O
Right?","If -X- _ O
you -X- _ O
look -X- _ O
at -X- _ O
the -X- _ O
documentation -X- _ O
(,vimeo.com/api/docs/upload,) -X- _ O
toward -X- _ O
the -X- _ O
bottom -X- _ O
under -X- _ O
""Verify -X- _ O
the -X- _ O
Upload"" -X- _ O
you'll -X- _ O
see -X- _ O
in -X- _ O
their -X- _ O
example -X- _ O
they -X- _ O
have: -X- _ O
,Content-Range: -X- _ O
bytes -X- _ O
1001-339108/339108, -X- _ O
and -X- _ O
the -X- _ O
length -X- _ O
of -X- _ O
their -X- _ O
whole -X- _ O
file -X- _ O
is -X- _ O
339108. -X- _ O
But -X- _ O
I'll -X- _ O
give -X- _ O
it -X- _ O
a -X- _ O
shot. -X- _ O
Because -X- _ O
of -X- _ O
that -X- _ O
forum -X- _ O
thread -X- _ O
I -X- _ O
showed -X- _ O
you -X- _ O
I'm -X- _ O
a -X- _ O
little -X- _ O
less -X- _ O
than -X- _ O
trusting -X- _ O
of -X- _ O
their -X- _ O
documentation... -X- _ O
... -X- _ O
tested. -X- _ O
No -X- _ O
change." -X- _ O

"Weird -X- _ O
the -X- _ O
Vimeo -X- _ B-Entity
API -X- _ I-Entity
thing -X- _ O
isn't -X- _ O
working. -X- _ O
@anyone -X- _ O
else: -X- _ O
Is -X- _ O
that -X- _ O
the -X- _ O
same -X- _ O
for -X- _ O
you? -X- _ O
I -X- _ O
can't -X- _ O
seem -X- _ O
to -X- _ O
make -X- _ O
my -X- _ O
header -X- _ O
look -X- _ O
like -X- _ O
you've -X- _ O
indicated -X- _ O
because -X- _ O
it -X- _ O
throws -X- _ O
a -X- _ O
connection -X- _ O
exception -X- _ O
when -X- _ O
I -X- _ O
use -X- _ O
""bytes -X- _ O
"" -X- _ O
as -X- _ O
the -X- _ O
prefix -X- _ O
to -X- _ O
the -X- _ O
bytes -X- _ O
I'm -X- _ O
giving -X- _ O
it -X- _ O
(see -X- _ O
error -X- _ O
above).","Yep, -X- _ O
tried -X- _ O
that -X- _ O
already -X- _ O
too. -X- _ O
It -X- _ O
still -X- _ O
seems -X- _ O
to -X- _ O
""override -X- _ O
the -X- _ O
bytes -X- _ O
I've -X- _ O
already -X- _ O
sent -X- _ O
when -X- _ O
I -X- _ O
verify -X- _ O
the -X- _ O
bytes. -X- _ O
I'll -X- _ O
try -X- _ O
it -X- _ O
again -X- _ O
when -X- _ O
I -X- _ O
get -X- _ O
to -X- _ O
work -X- _ O
this -X- _ O
morning -X- _ O
just -X- _ O
in -X- _ O
case, -X- _ O
but -X- _ O
I -X- _ O
can't -X- _ O
have -X- _ O
""bytes -X- _ O
"" -X- _ O
in -X- _ O
the -X- _ O
header -X- _ O
with -X- _ O
a -X- _ O
space -X- _ O
like -X- _ O
that -X- _ O
or -X- _ O
it -X- _ O
throws -X- _ O
an -X- _ O
error -X- _ O
creating -X- _ O
the -X- _ O
connection -X- _ O
(which -X- _ O
is -X- _ O
why -X- _ O
I -X- _ O
tried -X- _ O
the -X- _ O
%20). -X- _ O
That -X- _ O
could -X- _ O
be -X- _ O
the -X- _ O
problem... -X- _ O
But -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
how -X- _ O
to -X- _ O
fix -X- _ O
that. -X- _ O
I -X- _ O
could -X- _ O
try -X- _ O
without -X- _ O
spaces -X- _ O
and -X- _ O
see -X- _ O
if -X- _ O
that -X- _ O
works. -X- _ O
I'll -X- _ O
let -X- _ O
you -X- _ O
know." -X- _ O

I've -X- _ O
used -X- _ O
that -X- _ O
at -X- _ O
the -X- _ O
top -X- _ O
of -X- _ O
my -X- _ O
onCreate -X- _ O
method -X- _ O
and -X- _ O
also -X- _ O
tried -X- _ O
after -X- _ O
setContentView -X- _ B-Entity
but -X- _ O
doesn't -X- _ O
seem -X- _ O
to -X- _ O
make -X- _ O
any -X- _ O
difference. -X- _ O
System -X- _ O
print -X- _ O
out -X- _ O
confirms -X- _ O
that -X- _ O
the -X- _ O
code -X- _ O
is -X- _ O
being -X- _ O
run -X- _ O
but -X- _ O
it -X- _ O
looks -X- _ O
the -X- _ O
same -X- _ O
with -X- _ O
or -X- _ O
without -X- _ O
the -X- _ O
code.,"I -X- _ O
have -X- _ O
edited -X- _ O
my -X- _ O
answer, -X- _ O
I -X- _ O
checked -X- _ O
its -X- _ O
working -X- _ O
now, -X- _ O
please -X- _ O
check." -X- _ O

"Hi, -X- _ O
thanks -X- _ O
for -X- _ O
pointing -X- _ O
that -X- _ O
out. -X- _ O
I -X- _ O
created -X- _ O
an -X- _ O
object -X- _ O
with -X- _ O
import -X- _ O
javax.mail.Transport; -X- _ B-Entity
and -X- _ O
that -X- _ O
allows -X- _ O
you -X- _ O
to -X- _ O
close -X- _ O
it -X- _ O
in -X- _ O
the -X- _ O
finally -X- _ O
block. -X- _ O
I -X- _ O
will -X- _ O
edit -X- _ O
this.","You -X- _ O
should -X- _ O
try -X- _ O
actually -X- _ O
running -X- _ O
this -X- _ O
code, -X- _ O
there -X- _ O
are -X- _ O
a -X- _ O
few -X- _ O
issues -X- _ O
with -X- _ O
the -X- _ O
way -X- _ O
you -X- _ O
have -X- _ O
it -X- _ O
now." -X- _ O

"Have -X- _ O
you -X- _ O
tried -X- _ O
running -X- _ O
this -X- _ O
code? -X- _ O
The -X- _ O
finally -X- _ O
does -X- _ O
not -X- _ O
work -X- _ O
because -X- _ O
'transport' -X- _ O
should -X- _ O
be -X- _ O
'Transport', -X- _ O
and -X- _ O
also -X- _ O
because -X- _ O
you -X- _ O
cannot -X- _ O
make -X- _ O
a -X- _ O
static -X- _ O
reference -X- _ O
to -X- _ O
close().","Hi, -X- _ O
thanks -X- _ O
for -X- _ O
pointing -X- _ O
that -X- _ O
out. -X- _ O
I -X- _ O
created -X- _ O
an -X- _ O
object -X- _ O
with -X- _ O
import -X- _ O
javax.mail.Transport; -X- _ B-Entity
and -X- _ O
that -X- _ O
allows -X- _ O
you -X- _ O
to -X- _ O
close -X- _ O
it -X- _ O
in -X- _ O
the -X- _ O
finally -X- _ O
block. -X- _ O
I -X- _ O
will -X- _ O
edit -X- _ O
this." -X- _ O

i -X- _ O
got -X- _ O
solution -X- _ O
to -X- _ O
the -X- _ O
connection -X- _ O
getting -X- _ O
stuck -X- _ O
at -X- _ O
transport.send();,"Have -X- _ B-Entity
you -X- _ O
tried -X- _ O
running -X- _ O
this -X- _ O
code? -X- _ O
The -X- _ O
finally -X- _ O
does -X- _ O
not -X- _ O
work -X- _ O
because -X- _ O
'transport' -X- _ O
should -X- _ O
be -X- _ O
'Transport', -X- _ O
and -X- _ O
also -X- _ O
because -X- _ O
you -X- _ O
cannot -X- _ O
make -X- _ O
a -X- _ O
static -X- _ O
reference -X- _ O
to -X- _ O
close()." -X- _ O

and -X- _ O
if -X- _ O
i -X- _ O
replace -X- _ O
the -X- _ O
port -X- _ O
number -X- _ O
25 -X- _ O
with -X- _ O
465 -X- _ O
then -X- _ O
it -X- _ O
gets -X- _ O
stuck -X- _ O
again -X- _ O
like -X- _ O
the -X- _ O
code -X- _ O
i -X- _ O
posted -X- _ O
in -X- _ O
the -X- _ O
first -X- _ O
place..,i -X- _ O
got -X- _ O
solution -X- _ O
to -X- _ O
the -X- _ O
connection -X- _ O
getting -X- _ O
stuck -X- _ O
at -X- _ O
transport.send(); -X- _ B-Entity

"its -X- _ O
giving -X- _ O
me -X- _ O
the -X- _ O
following -X- _ O
error -X- _ O
""java.net.ConnectException: -X- _ B-Entity
Connection -X- _ O
timed -X- _ O
out: -X- _ O
connect""","Have -X- _ O
you -X- _ O
tried -X- _ O
running -X- _ O
this -X- _ O
code? -X- _ O
The -X- _ O
finally -X- _ O
does -X- _ O
not -X- _ O
work -X- _ O
because -X- _ O
'transport' -X- _ O
should -X- _ O
be -X- _ O
'Transport', -X- _ O
and -X- _ O
also -X- _ O
because -X- _ O
you -X- _ O
cannot -X- _ O
make -X- _ O
a -X- _ O
static -X- _ O
reference -X- _ O
to -X- _ O
close()." -X- _ O

"i -X- _ O
managed -X- _ O
to -X- _ O
locate -X- _ O
the -X- _ O
file -X- _ O
but -X- _ O
after -X- _ O
running -X- _ O
the -X- _ O
code -X- _ O
now -X- _ O
the -X- _ O
following -X- _ O
error -X- _ O
comes:""java.net.ConnectException: -X- _ B-Entity
Connection -X- _ O
timed -X- _ O
out: -X- _ O
connect""","its -X- _ O
giving -X- _ O
me -X- _ O
the -X- _ O
following -X- _ O
error -X- _ O
""java.net.ConnectException: -X- _ B-Entity
Connection -X- _ O
timed -X- _ O
out: -X- _ O
connect""" -X- _ O

"this -X- _ O
file -X- _ O
that -X- _ O
i -X- _ O
am -X- _ O
trying -X- _ O
to -X- _ O
send -X- _ O
where -X- _ O
does -X- _ O
the -X- _ O
code -X- _ O
look -X- _ O
for -X- _ O
the -X- _ O
file -X- _ O
because -X- _ O
it -X- _ O
saying -X- _ O
""java.io.FileNotFoundException: -X- _ B-Entity
file.txt""","Have -X- _ O
you -X- _ O
tried -X- _ O
running -X- _ O
this -X- _ O
code? -X- _ O
The -X- _ O
finally -X- _ O
does -X- _ O
not -X- _ O
work -X- _ O
because -X- _ O
'transport' -X- _ O
should -X- _ O
be -X- _ O
'Transport', -X- _ O
and -X- _ O
also -X- _ O
because -X- _ O
you -X- _ O
cannot -X- _ O
make -X- _ O
a -X- _ O
static -X- _ O
reference -X- _ O
to -X- _ O
close()." -X- _ O

The -X- _ O
javax.mail; -X- _ O
includess -X- _ O
the -X- _ O
javax.mail.api. -X- _ B-Entity
It -X- _ O
worked -X- _ O
fine -X- _ O
for -X- _ O
me -X- _ O
once -X- _ O
I -X- _ O
got -X- _ O
rid -X- _ O
of -X- _ O
javax-mail-api. -X- _ O
I -X- _ O
have -X- _ O
just -X- _ O
mail-1.5.0-b01.jar -X- _ O
AND -X- _ O
activation-1.1.1.JAR -X- _ O
in -X- _ O
my -X- _ O
classpath -X- _ O
and -X- _ O
it -X- _ O
works -X- _ O
now!,"this -X- _ O
file -X- _ O
that -X- _ O
i -X- _ O
am -X- _ O
trying -X- _ O
to -X- _ O
send -X- _ O
where -X- _ O
does -X- _ O
the -X- _ O
code -X- _ O
look -X- _ O
for -X- _ O
the -X- _ O
file -X- _ O
because -X- _ O
it -X- _ O
saying -X- _ O
""java.io.FileNotFoundException: -X- _ O
file.txt""" -X- _ O

"Might -X- _ O
want -X- _ O
to -X- _ O
take -X- _ O
a -X- _ O
look -X- _ O
at -X- _ O
the -X- _ O
,ExecutorCompletionService, -X- _ B-Entity
but -X- _ O
that -X- _ O
allows -X- _ O
you -X- _ O
to -X- _ O
do -X- _ O
stuff -X- _ O
if -X- _ O
any -X- _ O
response -X- _ O
finishes.",stackoverflow.com/questions/3269445/… -X- _ O

"Note -X- _ O
for -X- _ O
anyone -X- _ O
looking -X- _ O
for -X- _ O
this: -X- _ O
Aether -X- _ O
has -X- _ O
been -X- _ O
adopted -X- _ O
by -X- _ O
the -X- _ O
apache -X- _ O
foundation -X- _ O
and -X- _ O
renamed -X- _ O
to -X- _ O
maven-resolver: -X- _ O
,mvnrepository.com/artifact/org.apache.maven.resolver","Hi! -X- _ O
I -X- _ O
try -X- _ O
to -X- _ O
use -X- _ O
jcabi-aether -X- _ O
outside -X- _ O
of -X- _ O
maven -X- _ O
project -X- _ O
as -X- _ O
visible -X- _ O
here: -X- _ O
,aether.jcabi.com/index.html,, -X- _ O
but -X- _ O
I -X- _ O
always -X- _ O
getting -X- _ O
a -X- _ O
compile -X- _ O
exception: -X- _ O
Error:(22, -X- _ O
25) -X- _ O
java: -X- _ O
cannot -X- _ O
access -X- _ O
org.apache.maven.project.MavenProject -X- _ B-Entity
class -X- _ O
file -X- _ O
for -X- _ O
org.apache.maven.project.MavenProject -X- _ O
not -X- _ O
found. -X- _ O
If -X- _ O
I -X- _ O
include -X- _ O
maven-core, -X- _ O
I -X- _ O
get -X- _ O
other -X- _ O
exceptions. -X- _ O
Why? -X- _ O
Is -X- _ O
this -X- _ O
project -X- _ O
still -X- _ O
maintained?" -X- _ O

"Contract -X- _ B-Entity
contract -X- _ O
= -X- _ O
new -X- _ O
Contract(); -X- _ O
contract.m_symbol -X- _ O
= -X- _ O
""C""; -X- _ O
contract.m_secType -X- _ O
= -X- _ O
""FUT""; -X- _ O
contract.m_exchange -X- _ O
= -X- _ O
""CFE""; -X- _ O
contract.m_currency -X- _ O
= -X- _ O
""USD""; -X- _ O
contract.m_expiry -X- _ O
= -X- _ O
""201412""; -X- _ O
m_client.reqMktData(12,contract,"""",FALSE)",Shouldn't -X- _ O
your -X- _ O
order -X- _ O
be -X- _ O
more -X- _ O
than -X- _ O
an -X- _ O
empty -X- _ O
string? -X- _ O

@techierishi: -X- _ O
Make -X- _ O
sure -X- _ O
that -X- _ O
you -X- _ O
are -X- _ O
on -X- _ O
version -X- _ O
1.3.0 -X- _ O
of -X- _ O
the -X- _ O
Gradle -X- _ O
for -X- _ O
Android -X- _ O
plugin.,"I've -X- _ O
added -X- _ O
useLibrary -X- _ B-Entity
but -X- _ O
I'm -X- _ O
still -X- _ O
getting -X- _ O
in -X- _ O
this -X- _ O
""Unable -X- _ O
to -X- _ O
find -X- _ O
optional -X- _ O
library: -X- _ O
org.apache.http.legacy"" -X- _ B-Entity
error -X- _ O
in -X- _ O
my -X- _ O
build?" -X- _ O

Gradle -X- _ O
does -X- _ O
not -X- _ O
seem -X- _ O
to -X- _ O
recognize -X- _ O
'useLibrary'. -X- _ O
Error -X- _ O
below -X- _ O
: -X- _ O
Gradle -X- _ O
DSL -X- _ O
method -X- _ O
not -X- _ O
found: -X- _ O
'useLibrary()',@techierishi: -X- _ B-Entity
Make -X- _ O
sure -X- _ O
that -X- _ O
you -X- _ O
are -X- _ O
on -X- _ O
version -X- _ O
1.3.0 -X- _ O
of -X- _ O
the -X- _ O
Gradle -X- _ O
for -X- _ O
Android -X- _ O
plugin. -X- _ O

"HttpClient -X- _ B-Entity
was -X- _ O
already -X- _ O
deprecated -X- _ O
in -X- _ O
Android -X- _ O
L, -X- _ O
so -X- _ O
i -X- _ O
recommend -X- _ O
using -X- _ O
HttpURLConnection",@techierishi: -X- _ B-Entity
Make -X- _ O
sure -X- _ O
that -X- _ O
you -X- _ O
are -X- _ O
on -X- _ O
version -X- _ O
1.3.0 -X- _ O
of -X- _ O
the -X- _ O
Gradle -X- _ O
for -X- _ O
Android -X- _ O
plugin. -X- _ O

The -X- _ O
problem -X- _ O
of -X- _ O
using -X- _ O
pageInfo.totalresults -X- _ O
is -X- _ O
that -X- _ O
sometimes -X- _ O
the -X- _ O
number -X- _ O
of -X- _ O
items -X- _ O
actually -X- _ O
returned -X- _ O
is -X- _ O
different -X- _ O
from -X- _ O
pageInfo.totalresults. -X- _ B-Entity
When -X- _ O
I -X- _ O
run -X- _ O
the -X- _ O
code -X- _ O
above -X- _ O
here -X- _ O
the -X- _ O
pageInfo.totalresults -X- _ O
is -X- _ O
236 -X- _ O
but -X- _ O
some -X- _ O
pages -X- _ O
returns -X- _ O
49 -X- _ O
or -X- _ O
48 -X- _ O
itens -X- _ O
and -X- _ O
in -X- _ O
I -X- _ O
ended -X- _ O
up -X- _ O
with -X- _ O
232 -X- _ O
itens -X- _ O
in -X- _ O
total. -X- _ O
So... -X- _ O
I -X- _ O
really -X- _ O
must -X- _ O
check -X- _ O
when -X- _ O
no -X- _ O
more -X- _ O
itens -X- _ O
are -X- _ O
returned. -X- _ O
:),"pretty -X- _ O
much -X- _ O
the -X- _ O
same -X- _ O
here, -X- _ O
suddenly -X- _ O
nextpagetoken -X- _ O
didnt -X- _ O
get -X- _ O
delivered -X- _ O
and -X- _ O
i -X- _ O
was -X- _ O
going -X- _ O
mental -X- _ O
>< -X- _ O
lets -X- _ O
hope -X- _ O
google -X- _ O
fixes -X- _ O
this -X- _ O
soon. -X- _ O
is -X- _ O
there -X- _ O
a -X- _ O
workaround -X- _ O
in -X- _ O
the -X- _ O
meantime?" -X- _ O

"its -X- _ O
probably -X- _ O
better -X- _ O
to -X- _ O
use -X- _ O
the -X- _ O
pageInfo.totalresults -X- _ B-Entity
and -X- _ O
look -X- _ O
if -X- _ O
you -X- _ O
got -X- _ O
as -X- _ O
many -X- _ O
items, -X- _ O
but -X- _ O
thank -X- _ O
you -X- _ O
for -X- _ O
the -X- _ O
static -X- _ O
tokens!",Good -X- _ O
idea! -X- _ O
Thanks -X- _ O
again -X- _ O
:-) -X- _ O

"@DarkKnight -X- _ O
yes, -X- _ O
i -X- _ O
haven't -X- _ O
tried -X- _ O
it -X- _ O
on -X- _ O
websphere, -X- _ O
but -X- _ O
as -X- _ O
it -X- _ O
is -X- _ O
shown -X- _ O
this -X- _ O
is -X- _ O
based -X- _ O
on -X- _ O
the -X- _ O
standard -X- _ O
api -X- _ O
for -X- _ O
adding -X- _ O
an -X- _ O
httpsessionlistener -X- _ O
from -X- _ O
web.xml -X- _ O
and -X- _ O
calling -X- _ O
the -X- _ O
jmx -X- _ O
service -X- _ O
through -X- _ O
,ManagementFactory.getPlatformMBeanServer(),. -X- _ B-Entity
WAS -X- _ O
is -X- _ O
a -X- _ O
standard -X- _ O
jee -X- _ O
a",@melc -X- _ O
Thanks -X- _ O
a -X- _ O
lot -X- _ O
for -X- _ O
quick -X- _ O
update. -X- _ O
I -X- _ O
am -X- _ O
checking -X- _ O
out -X- _ O
same. -X- _ O
Shall -X- _ O
come -X- _ O
back -X- _ O
to -X- _ O
you -X- _ O
with -X- _ O
update -X- _ O
soon. -X- _ O

"Thanks -X- _ O
for -X- _ O
this -X- _ O
answer. -X- _ O
I -X- _ O
can't -X- _ O
now -X- _ O
remember -X- _ O
why -X- _ O
I -X- _ O
wanted -X- _ O
to -X- _ O
know -X- _ O
this. -X- _ O
I -X- _ O
suspect -X- _ O
I -X- _ O
was -X- _ O
wondering -X- _ O
if -X- _ O
when -X- _ O
the -X- _ O
running -X- _ O
thread -X- _ O
updated -X- _ O
the -X- _ O
condition -X- _ O
and -X- _ O
called -X- _ O
,unpark,, -X- _ O
if -X- _ O
that -X- _ O
would -X- _ O
by -X- _ O
itself -X- _ O
guarantee -X- _ O
the -X- _ O
unparked -X- _ O
thread -X- _ O
would -X- _ O
see -X- _ O
the -X- _ O
updated -X- _ O
condition -X- _ O
in -X- _ O
a -X- _ O
consistent -X- _ O
state. -X- _ O
It -X- _ O
seems -X- _ O
there -X- _ O
is -X- _ O
no -X- _ O
guarantee, -X- _ O
so -X- _ O
the -X- _ O
only -X- _ O
safe -X- _ O
choice -X- _ O
is -X- _ O
to -X- _ O
explicitly -X- _ O
arrange -X- _ O
a -X- _ O
memory -X- _ O
barrier -X- _ O
for -X- _ O
the -X- _ O
condition -X- _ O
update.","I -X- _ O
see. -X- _ O
If -X- _ O
there -X- _ O
were -X- _ O
a -X- _ O
,happens-before, -X- _ O
relationship -X- _ O
between -X- _ O
,park(), -X- _ B-Entity
and -X- _ O
,unpark(),, -X- _ B-Entity
then -X- _ O
the -X- _ O
condition -X- _ O
would -X- _ O
not -X- _ O
need -X- _ O
to -X- _ O
involve -X- _ O
a -X- _ O
memory -X- _ O
barrier. -X- _ O
So -X- _ O
the -X- _ O
question -X- _ O
is -X- _ O
still -X- _ O
valid." -X- _ O

"More, -X- _ O
the -X- _ O
JVM -X- _ O
crash -X- _ O
is -X- _ O
probably -X- _ O
caused -X- _ O
by -X- _ O
the -X- _ O
opened -X- _ O
streams -X- _ O
or -X- _ O
by -X- _ O
the -X- _ O
rest -X- _ O
of -X- _ O
the -X- _ O
code -X- _ O
thats -X- _ O
ommited.","AFAIK, -X- _ O
using -X- _ O
,try -X- _ O
(BufferedReader -X- _ B-Entity
reader -X- _ O
= -X- _ O
new -X- _ O
BufferedReader( -X- _ O
new -X- _ O
InputStreamReader( -X- _ B-Entity
allmoviesUrl.openStream(), -X- _ O
""UTF-8"" -X- _ O
) -X- _ O
)), -X- _ O
closes -X- _ O
the -X- _ O
,reader,, -X- _ O
who -X- _ O
in -X- _ O
turn -X- _ O
closes -X- _ O
the -X- _ O
,InputStreamReader,, -X- _ O
who -X- _ O
in -X- _ O
turn -X- _ O
closes -X- _ O
the -X- _ O
,InputStream,. -X- _ O
Other -X- _ O
than -X- _ O
that, -X- _ O
I -X- _ O
agree -X- _ O
that -X- _ O
parallelization -X- _ O
of -X- _ O
broken -X- _ O
code -X- _ O
only -X- _ O
makes -X- _ O
it -X- _ O
crash -X- _ O
faster. -X- _ O
:D -X- _ O
Let's -X- _ O
call -X- _ O
it -X- _ O
,fail-fast,. -X- _ O
:D" -X- _ O

"If -X- _ O
you -X- _ O
read -X- _ O
the -X- _ O
question -X- _ O
he -X- _ O
ask -X- _ O
""BEST -X- _ O
PRACTICE..."", -X- _ O
it -X- _ O
is -X- _ O
a -X- _ O
best -X- _ O
practice -X- _ O
open -X- _ O
streams -X- _ O
and -X- _ O
bufferedereaders -X- _ O
and -X- _ O
keep -X- _ O
them -X- _ O
opened? -X- _ O
I -X- _ O
think -X- _ O
NOT, -X- _ O
and -X- _ O
my -X- _ O
post -X- _ O
yes, -X- _ O
answer -X- _ O
the -X- _ O
question, -X- _ O
or -X- _ O
part -X- _ O
of -X- _ O
it, -X- _ O
of -X- _ O
course, -X- _ O
there -X- _ O
are -X- _ O
many -X- _ O
other -X- _ O
tecniques -X- _ O
to -X- _ O
do -X- _ O
that -X- _ O
maybe -X- _ O
can -X- _ O
increase -X- _ O
the -X- _ O
performanse, -X- _ O
call -X- _ O
the -X- _ O
rest -X- _ O
by -X- _ O
batch -X- _ O
and -X- _ O
so -X- _ O
on.","AFAIK, -X- _ O
using -X- _ O
,try -X- _ O
(BufferedReader -X- _ B-Entity
reader -X- _ O
= -X- _ O
new -X- _ O
BufferedReader( -X- _ O
new -X- _ O
InputStreamReader( -X- _ B-Entity
allmoviesUrl.openStream(), -X- _ O
""UTF-8"" -X- _ O
) -X- _ O
)), -X- _ O
closes -X- _ O
the -X- _ O
,reader,, -X- _ O
who -X- _ O
in -X- _ O
turn -X- _ O
closes -X- _ O
the -X- _ O
,InputStreamReader,, -X- _ O
who -X- _ O
in -X- _ O
turn -X- _ O
closes -X- _ O
the -X- _ O
,InputStream,. -X- _ O
Other -X- _ O
than -X- _ O
that, -X- _ O
I -X- _ O
agree -X- _ O
that -X- _ O
parallelization -X- _ O
of -X- _ O
broken -X- _ O
code -X- _ O
only -X- _ O
makes -X- _ O
it -X- _ O
crash -X- _ O
faster. -X- _ O
:D -X- _ O
Let's -X- _ O
call -X- _ O
it -X- _ O
,fail-fast,. -X- _ O
:D" -X- _ O

"i -X- _ O
have -X- _ O
add -X- _ O
my -X- _ O
code -X- _ O
on -X- _ O
github -X- _ O
gist: -X- _ O
,gist.github.com/EikeBierman/fde05dde2e09d6167f76c41fe41828f1","AFAIK, -X- _ O
using -X- _ O
,try -X- _ O
(BufferedReader -X- _ B-Entity
reader -X- _ O
= -X- _ O
new -X- _ O
BufferedReader( -X- _ O
new -X- _ O
InputStreamReader( -X- _ O
allmoviesUrl.openStream(), -X- _ O
""UTF-8"" -X- _ O
) -X- _ O
)), -X- _ O
closes -X- _ O
the -X- _ O
,reader,, -X- _ O
who -X- _ O
in -X- _ O
turn -X- _ O
closes -X- _ O
the -X- _ O
,InputStreamReader,, -X- _ B-Entity
who -X- _ O
in -X- _ O
turn -X- _ O
closes -X- _ O
the -X- _ O
,InputStream,. -X- _ O
Other -X- _ O
than -X- _ O
that, -X- _ O
I -X- _ O
agree -X- _ O
that -X- _ O
parallelization -X- _ O
of -X- _ O
broken -X- _ O
code -X- _ O
only -X- _ O
makes -X- _ O
it -X- _ O
crash -X- _ O
faster. -X- _ O
:D -X- _ O
Let's -X- _ O
call -X- _ O
it -X- _ O
,fail-fast,. -X- _ O
:D" -X- _ O

"For -X- _ O
the -X- _ O
memory -X- _ O
issue, -X- _ O
I -X- _ O
might -X- _ O
try -X- _ O
closing -X- _ O
the -X- _ O
BufferedReader -X- _ B-Entity
at -X- _ O
the -X- _ O
end -X- _ O
of -X- _ O
each -X- _ O
loop. -X- _ O
As -X- _ O
for -X- _ O
time... -X- _ O
you're -X- _ O
making -X- _ O
>400k -X- _ O
web -X- _ O
socket -X- _ O
requests. -X- _ O
What's -X- _ O
your -X- _ O
download -X- _ O
speed?",This -X- _ O
does -X- _ O
not -X- _ O
answer -X- _ O
to -X- _ O
the -X- _ O
question. -X- _ O

java.nio.file.Files -X- _ B-Entity
-- -X- _ O
JDK7,"It's -X- _ O
Files, -X- _ O
not -X- _ O
File." -X- _ O

Which -X- _ O
package -X- _ O
are -X- _ O
you -X- _ O
working -X- _ O
in? -X- _ B-Entity
java.io.* -X- _ I-Entity
does -X- _ O
not -X- _ O
have -X- _ O
a -X- _ O
File -X- _ O
class -X- _ O
with -X- _ O
a -X- _ O
notExists() -X- _ O
method.,"Since -X- _ O
,exists()==false, -X- _ O
does -X- _ O
not -X- _ O
prove -X- _ O
the -X- _ O
non -X- _ O
existence -X- _ O
of -X- _ O
a -X- _ O
file, -X- _ O
you -X- _ O
can -X- _ O
use -X- _ O
,notExists(), -X- _ O
for -X- _ O
the -X- _ O
cases -X- _ O
when -X- _ O
you -X- _ O
want -X- _ O
to -X- _ O
check -X- _ O
if -X- _ O
the -X- _ O
file -X- _ O
does -X- _ O
not -X- _ O
exists, -X- _ O
e.g., -X- _ O
before -X- _ O
creating -X- _ O
a -X- _ O
new -X- _ O
file." -X- _ O

"You -X- _ O
can -X- _ O
call -X- _ O
it -X- _ O
objectCollection, -X- _ B-Entity
collectionOfObjects, -X- _ O
objects, -X- _ O
objectList, -X- _ O
objectSet... -X- _ O
this -X- _ O
is -X- _ O
not -X- _ O
design -X- _ O
but -X- _ O
it -X- _ O
is -X- _ O
coding -X- _ O
convention. -X- _ O
It -X- _ O
is -X- _ O
developer -X- _ O
responsibility -X- _ O
to -X- _ O
give -X- _ O
good -X- _ O
names -X- _ O
not -X- _ O
designers/architects. -X- _ O
So -X- _ O
what -X- _ O
i -X- _ O
tried -X- _ O
to -X- _ O
say -X- _ O
is, -X- _ O
naming -X- _ O
may -X- _ O
be -X- _ O
bad -X- _ O
yes. -X- _ O
instead -X- _ O
of -X- _ O
remove(int) -X- _ O
maybe -X- _ O
it -X- _ O
should -X- _ O
have -X- _ O
been -X- _ O
called -X- _ O
as -X- _ O
removeAtIndex(int) -X- _ B-Entity
or -X- _ O
something -X- _ O
which -X- _ O
will -X- _ O
make -X- _ O
easier -X- _ O
to -X- _ O
understand.","Yes -X- _ O
I -X- _ O
need -X- _ O
both, -X- _ O
but -X- _ O
I -X- _ O
wish -X- _ O
they -X- _ O
had -X- _ O
different -X- _ O
names -X- _ O
( -X- _ O
removeAt? -X- _ O
removeValue? -X- _ O
)" -X- _ O

"I -X- _ O
never -X- _ O
said -X- _ O
it -X- _ O
is -X- _ O
not -X- _ O
important, -X- _ O
if -X- _ O
you -X- _ O
call -X- _ O
Collection -X- _ O
as -X- _ O
ThingThatHoldsMultiplesOfOtherThings -X- _ O
thats -X- _ O
your -X- _ O
fault, -X- _ O
not -X- _ O
design -X- _ O
flaw/fault.","You -X- _ O
can -X- _ O
call -X- _ O
it -X- _ O
objectCollection, -X- _ O
collectionOfObjects, -X- _ O
objects, -X- _ O
objectList, -X- _ O
objectSet... -X- _ O
this -X- _ O
is -X- _ O
not -X- _ O
design -X- _ O
but -X- _ O
it -X- _ O
is -X- _ O
coding -X- _ O
convention. -X- _ O
It -X- _ O
is -X- _ O
developer -X- _ O
responsibility -X- _ O
to -X- _ O
give -X- _ O
good -X- _ O
names -X- _ O
not -X- _ O
designers/architects. -X- _ O
So -X- _ O
what -X- _ O
i -X- _ O
tried -X- _ O
to -X- _ O
say -X- _ O
is, -X- _ O
naming -X- _ O
may -X- _ O
be -X- _ O
bad -X- _ O
yes. -X- _ O
instead -X- _ O
of -X- _ O
remove(int) -X- _ O
maybe -X- _ O
it -X- _ O
should -X- _ O
have -X- _ O
been -X- _ O
called -X- _ O
as -X- _ O
removeAtIndex(int) -X- _ B-Entity
or -X- _ O
something -X- _ O
which -X- _ O
will -X- _ O
make -X- _ O
easier -X- _ O
to -X- _ O
understand." -X- _ O

"In -X- _ O
case -X- _ O
of -X- _ O
,List<Integer>,, -X- _ O
the -X- _ O
appropriate -X- _ O
way -X- _ O
to -X- _ O
remove -X- _ O
an -X- _ O
int -X- _ O
in -X- _ O
the -X- _ O
list -X- _ O
is -X- _ O
to -X- _ O
use -X- _ O
,remove(Integer.valueOf(number)),.",Ambiguity -X- _ B-Entity
is -X- _ O
precisely -X- _ O
when -X- _ O
two -X- _ O
different -X- _ O
things -X- _ O
have -X- _ O
the -X- _ O
same -X- _ O
name. -X- _ O

"Do -X- _ O
you -X- _ O
ask -X- _ O
""what -X- _ O
is -X- _ O
the -X- _ O
use -X- _ O
of -X- _ O
StringBuilder"" -X- _ B-Entity
or -X- _ O
""Why -X- _ O
use -X- _ O
StringBuilder -X- _ O
in -X- _ O
this -X- _ O
case""? -X- _ O
Generally -X- _ O
StringBuilder -X- _ O
is -X- _ O
for -X- _ O
fast -X- _ O
string -X- _ O
building -X- _ O
and -X- _ O
concatenation -X- _ O
(as -X- _ O
the -X- _ O
name -X- _ O
suggests). -X- _ O
In -X- _ O
this -X- _ O
case -X- _ O
it -X- _ O
is -X- _ O
the -X- _ O
only -X- _ O
way -X- _ O
to -X- _ O
achieve -X- _ O
desired -X- _ O
effect -X- _ O
(returning -X- _ O
string -X- _ O
value -X- _ O
by -X- _ O
modification -X- _ O
of -X- _ O
function -X- _ O
argument). -X- _ O
You -X- _ O
can't -X- _ O
do -X- _ O
this -X- _ O
with -X- _ O
String -X- _ O
object -X- _ O
as -X- _ O
it -X- _ O
is -X- _ O
immutable.","@Bombe: -X- _ O
(1) -X- _ O
Even -X- _ O
if -X- _ O
object -X- _ O
creation -X- _ O
is -X- _ O
cheap, -X- _ O
object -X- _ O
creation -X- _ O
,and, -X- _ O
assigning -X- _ O
cannot -X- _ O
be -X- _ O
cheaper -X- _ O
than -X- _ O
just -X- _ O
assigning -X- _ O
(2) -X- _ O
It -X- _ O
is -X- _ O
not -X- _ O
only -X- _ O
creation -X- _ O
that -X- _ O
costs; -X- _ O
there -X- _ O
is -X- _ O
also -X- _ O
garbage -X- _ O
colletion -X- _ O
that -X- _ O
costs. -X- _ O
(3) -X- _ O
There -X- _ O
are -X- _ O
Java -X- _ O
evironments -X- _ O
where -X- _ O
object -X- _ O
creation" -X- _ O

why -X- _ O
use -X- _ O
a -X- _ O
StringBuilder -X- _ B-Entity
at -X- _ O
all?,"Object -X- _ O
creation -X- _ O
is -X- _ O
cheap -X- _ O
and -X- _ O
should -X- _ O
,not, -X- _ O
be -X- _ O
the -X- _ O
reason -X- _ O
to -X- _ O
clutter -X- _ O
your -X- _ O
code -X- _ O
with -X- _ O
constructs -X- _ O
that -X- _ O
have -X- _ O
no -X- _ O
further -X- _ O
purpose -X- _ O
than -X- _ O
to -X- _ O
reduce -X- _ O
the -X- _ O
number -X- _ O
of -X- _ O
created -X- _ O
objects." -X- _ O

"I'm -X- _ O
not -X- _ O
sure -X- _ O
if -X- _ O
an -X- _ O
answer -X- _ O
or -X- _ O
comment -X- _ O
has -X- _ O
been -X- _ O
deleted, -X- _ O
but -X- _ O
I -X- _ O
see -X- _ O
no -X- _ O
mention -X- _ O
of -X- _ O
'Jasper' -X- _ O
anywhere -X- _ O
else -X- _ O
on -X- _ O
this -X- _ O
page. -X- _ O
The -X- _ O
question -X- _ O
was -X- _ O
about -X- _ O
Java -X- _ O
but -X- _ O
this -X- _ O
answer -X- _ O
discusses -X- _ O
.NET -X- _ O
without -X- _ O
providing -X- _ O
anything -X- _ O
useful -X- _ O
for -X- _ O
use -X- _ O
in -X- _ O
Java -X- _ O
by -X- _ O
the -X- _ O
OP.",why -X- _ O
use -X- _ O
a -X- _ O
StringBuilder -X- _ B-Entity
at -X- _ O
all? -X- _ O

Is -X- _ O
this -X- _ O
String -X- _ O
object -X- _ O
the -X- _ B-Entity
java.lang.String? -X- _ I-Entity
(which -X- _ O
is -X- _ O
immutable),"@Bombe: -X- _ O
(1) -X- _ O
Even -X- _ O
if -X- _ O
object -X- _ O
creation -X- _ O
is -X- _ O
cheap, -X- _ O
object -X- _ O
creation -X- _ O
,and, -X- _ O
assigning -X- _ O
cannot -X- _ O
be -X- _ O
cheaper -X- _ O
than -X- _ O
just -X- _ O
assigning -X- _ O
(2) -X- _ O
It -X- _ O
is -X- _ O
not -X- _ O
only -X- _ O
creation -X- _ O
that -X- _ O
costs; -X- _ O
there -X- _ O
is -X- _ O
also -X- _ O
garbage -X- _ O
colletion -X- _ O
that -X- _ O
costs. -X- _ O
(3) -X- _ O
There -X- _ O
are -X- _ O
Java -X- _ O
evironments -X- _ O
where -X- _ O
object -X- _ O
creation" -X- _ O

@Chathuranga: -X- _ O
take -X- _ O
a -X- _ O
closer -X- _ O
look -X- _ O
at -X- _ O
the -X- _ O
example. -X- _ O
It -X- _ O
is -X- _ O
using -X- _ O
a -X- _ O
StringBuilder -X- _ B-Entity
not -X- _ O
a -X- _ O
String!!,why -X- _ B-Entity
use -X- _ O
a -X- _ O
StringBuilder -X- _ O
at -X- _ O
all? -X- _ O

"@ -X- _ O
Bombe -X- _ O
: -X- _ O
,javapractices.com/topic/TopicAction.do?Id=37",Is -X- _ O
this -X- _ O
String -X- _ O
object -X- _ O
the -X- _ O
java.lang.String? -X- _ B-Entity
(which -X- _ O
is -X- _ O
immutable) -X- _ O

"BasicStroke, -X- _ B-Entity
pre-dates -X- _ O
,enum, -X- _ O
which -X- _ O
arrived -X- _ O
in -X- _ O
Java -X- _ O
1.5.","Thanks -X- _ O
Jon, -X- _ O
you'd -X- _ O
get -X- _ O
the -X- _ O
answer -X- _ O
if -X- _ O
Reimeus -X- _ O
hadn't -X- _ O
posted -X- _ O
his -X- _ O
comment -X- _ O
first. -X- _ O
;-) -X- _ O
Good -X- _ O
info -X- _ O
here -X- _ O
too." -X- _ O

"If -X- _ O
you -X- _ O
get -X- _ O
an -X- _ O
error -X- _ O
like -X- _ O
""You -X- _ O
can't -X- _ O
delete -X- _ O
all -X- _ O
the -X- _ O
rows -X- _ O
on -X- _ O
the -X- _ O
sheet."" -X- _ O
it's -X- _ O
because -X- _ O
when -X- _ O
you -X- _ O
update -X- _ O
the -X- _ O
grid -X- _ O
properties -X- _ O
you -X- _ O
also -X- _ O
need -X- _ O
to -X- _ O
set -X- _ B-Entity
rowCount -X- _ I-Entity
and -X- _ O
columnCount -X- _ B-Entity
properties -X- _ O
as -X- _ O
well. -X- _ O
,EX: -X- _ O
sheet.updateProperties({ -X- _ B-Entity
gridProperties: -X- _ O
{ -X- _ O
frozen_row_count: -X- _ O
0, -X- _ O
rowCount: -X- _ O
1, -X- _ O
columnCount: -X- _ O
headers.length -X- _ O
} -X- _ O
});",Thank -X- _ O
you -X- _ O
for -X- _ O
this. -X- _ O

"Maybe -X- _ O
possilbe -X- _ O
with -X- _ O
Google-apps-script, -X- _ O
but -X- _ O
it -X- _ O
is -X- _ O
not -X- _ O
possible -X- _ O
with -X- _ O
the -X- _ O
gdata -X- _ O
style -X- _ O
google-spreadsheet-api",Thank -X- _ B-Entity
you -X- _ O
for -X- _ O
this. -X- _ O

"You -X- _ O
are -X- _ O
not -X- _ O
really -X- _ O
complaining -X- _ O
about -X- _ O
a -X- _ O
standard -X- _ B-Entity
API -X- _ I-Entity
but -X- _ O
rather -X- _ O
a -X- _ O
standard -X- _ O
set -X- _ O
of -X- _ O
centralized -X- _ O
documentation. -X- _ O
You -X- _ O
could -X- _ O
say -X- _ O
that -X- _ O
it -X- _ O
is -X- _ O
defined -X- _ O
in -X- _ O
the -X- _ O
standard. -X- _ O
See -X- _ O
,here, -X- _ O
or -X- _ O
a -X- _ O
copy -X- _ O
,here","PS. -X- _ O
I -X- _ O
use -X- _ O
the -X- _ O
original -X- _ O
C++ -X- _ O
STL -X- _ O
documentation -X- _ O
a -X- _ O
lot: -X- _ O
,sgi.com/tech/stl" -X- _ O

Yes -X- _ O
but -X- _ O
I -X- _ O
don't -X- _ O
think -X- _ O
it's -X- _ O
the -X- _ O
point -X- _ O
of -X- _ O
this -X- _ O
problem.,"Well, -X- _ O
it -X- _ O
kinda -X- _ O
is, -X- _ O
because -X- _ O
you -X- _ O
say -X- _ O
'as -X- _ O
you -X- _ O
can -X- _ O
see -X- _ O
I'm -X- _ O
using -X- _ O
builder -X- _ O
to -X- _ O
set -X- _ O
my -X- _ O
key', -X- _ O
but -X- _ O
then -X- _ O
the -X- _ O
only -X- _ O
object -X- _ O
to -X- _ O
use -X- _ O
the -X- _ O
builder -X- _ O
is -X- _ O
'tf', -X- _ O
which -X- _ O
is -X- _ O
never -X- _ O
used. -X- _ O
Therefore, -X- _ O
setting -X- _ O
the -X- _ O
credentials -X- _ O
on -X- _ O
builder -X- _ O
has -X- _ O
zero -X- _ O
effect. -X- _ O
You -X- _ O
need -X- _ O
to -X- _ O
create -X- _ O
the -X- _ O
'twitter' -X- _ O
object -X- _ O
with: -X- _ O
,Twitter -X- _ O
twitter -X- _ O
= -X- _ O
tf.getInstance();, -X- _ O
And -X- _ O
drop -X- _ O
the -X- _ O
call -X- _ O
to -X- _ O
,twitter.setOAuthConsumer" -X- _ B-Entity

"Which -X- _ O
annotation -X- _ O
are -X- _ O
you -X- _ O
using -X- _ O
exactly -X- _ O
? -X- _ O
Is -X- _ O
it -X- _ O
the -X- _ O
one -X- _ O
from -X- _ O
the -X- _ O
,javax.validation.constraints, -X- _ B-Entity
package?",@Cosu -X- _ O
yes -X- _ O
that -X- _ O
is -X- _ O
the -X- _ O
package. -X- _ O

"@Yourchanges, -X- _ O
Please -X- _ O
check -X- _ O
me -X- _ O
for -X- _ O
this -X- _ O
(,stackoverflow.com/questions/17078543/…,)","I -X- _ O
could -X- _ O
be -X- _ O
wrong -X- _ O
but -X- _ O
I -X- _ O
think -X- _ O
I -X- _ O
am. -X- _ O
I -X- _ O
add -X- _ O
a -X- _ O
cell -X- _ O
to -X- _ O
rSheet -X- _ O
which -X- _ O
has -X- _ O
index -X- _ O
0. -X- _ O
Then -X- _ O
when -X- _ O
I -X- _ O
call -X- _ O
copySheet -X- _ O
it -X- _ O
is -X- _ O
copying -X- _ O
from -X- _ O
the -X- _ O
sheet -X- _ O
at -X- _ O
index -X- _ O
0 -X- _ O
and -X- _ O
putting -X- _ O
the -X- _ O
newSheet -X- _ O
at -X- _ O
index -X- _ O
0 -X- _ O
right? -X- _ O
Ive -X- _ O
tried -X- _ O
outputBook.copySheet(0, -X- _ B-Entity
""copy"", -X- _ O
1); -X- _ O
to -X- _ O
put -X- _ O
the -X- _ O
copy -X- _ O
at -X- _ O
index -X- _ O
1 -X- _ O
but -X- _ O
that -X- _ O
gives -X- _ O
the -X- _ O
same -X- _ O
error." -X- _ O

"though -X- _ O
you -X- _ O
have -X- _ O
already -X- _ O
selected -X- _ O
an -X- _ O
answer, -X- _ O
but -X- _ O
I -X- _ O
am -X- _ O
curious -X- _ O
what -X- _ O
do -X- _ O
you -X- _ O
think.","I'm -X- _ O
not -X- _ O
sure -X- _ O
what -X- _ O
you -X- _ O
mean -X- _ O
with -X- _ O
your -X- _ O
internal -X- _ O
stack. -X- _ O
I -X- _ O
thought -X- _ O
the -X- _ O
TreeSet -X- _ B-Entity
has -X- _ O
a -X- _ O
double -X- _ O
linked -X- _ O
list -X- _ O
for -X- _ O
storing -X- _ O
the -X- _ O
elements -X- _ O
and -X- _ O
remembering -X- _ O
the -X- _ O
first -X- _ O
and -X- _ O
last -X- _ O
one. -X- _ O
So -X- _ O
the -X- _ O
pollLast() -X- _ O
method -X- _ O
should -X- _ O
not -X- _ O
traverse -X- _ O
the -X- _ O
list -X- _ O
at -X- _ O
all, -X- _ O
because -X- _ O
the -X- _ O
last -X- _ O
element -X- _ O
is -X- _ O
known. -X- _ O
To -X- _ O
optimise -X- _ O
the -X- _ O
add() -X- _ O
operation, -X- _ O
a -X- _ O
precheck -X- _ O
can -X- _ O
be -X- _ O
done, -X- _ O
if -X- _ O
the -X- _ O
element -X- _ O
should -X- _ O
be -X- _ O
added -X- _ O
at -X- _ O
all." -X- _ O

"I -X- _ O
thought -X- _ O
of -X- _ O
this. -X- _ O
But -X- _ O
i -X- _ O
hoped -X- _ O
there -X- _ O
were -X- _ O
an -X- _ O
efficient -X- _ O
implementation -X- _ O
out -X- _ O
there -X- _ O
:-). -X- _ O
Removing -X- _ O
the -X- _ O
last -X- _ O
element -X- _ O
in -X- _ O
a -X- _ O
TreeSet -X- _ O
could -X- _ O
be -X- _ O
costly, -X- _ O
because -X- _ O
the -X- _ O
whole -X- _ O
list -X- _ O
has -X- _ O
to -X- _ O
be -X- _ O
traversed. -X- _ O
For -X- _ O
Java -X- _ O
1.6 -X- _ O
i -X- _ O
could -X- _ O
use -X- _ O
NavigableSet, -X- _ B-Entity
there -X- _ O
is -X- _ O
a -X- _ O
pollLast() -X- _ O
method -X- _ O
which -X- _ O
should -X- _ O
be -X- _ O
fast.","I'm -X- _ O
not -X- _ O
sure -X- _ O
what -X- _ O
you -X- _ O
mean -X- _ O
with -X- _ O
your -X- _ O
internal -X- _ O
stack. -X- _ O
I -X- _ O
thought -X- _ O
the -X- _ O
TreeSet -X- _ O
has -X- _ O
a -X- _ O
double -X- _ O
linked -X- _ O
list -X- _ O
for -X- _ O
storing -X- _ O
the -X- _ O
elements -X- _ O
and -X- _ O
remembering -X- _ O
the -X- _ O
first -X- _ O
and -X- _ O
last -X- _ O
one. -X- _ O
So -X- _ O
the -X- _ O
pollLast() -X- _ O
method -X- _ O
should -X- _ O
not -X- _ O
traverse -X- _ O
the -X- _ O
list -X- _ O
at -X- _ O
all, -X- _ O
because -X- _ O
the -X- _ O
last -X- _ O
element -X- _ O
is -X- _ O
known. -X- _ O
To -X- _ O
optimise -X- _ O
the -X- _ O
add() -X- _ O
operation, -X- _ O
a -X- _ O
precheck -X- _ O
can -X- _ O
be -X- _ O
done, -X- _ O
if -X- _ O
the -X- _ O
element -X- _ O
should -X- _ O
be -X- _ O
added -X- _ O
at -X- _ O
all." -X- _ O

"@Andreas -X- _ O
note -X- _ O
that -X- _ O
I -X- _ O
fixed -X- _ O
some -X- _ O
errors -X- _ O
in -X- _ O
my -X- _ O
code -X- _ O
(I -X- _ O
had -X- _ O
,headSet(), -X- _ B-Entity
instead -X- _ O
of -X- _ O
,tailSet(), -X- _ B-Entity
and -X- _ O
needed -X- _ O
to -X- _ O
""readd"" -X- _ O
the -X- _ O
last -X- _ O
element). -X- _ O
Also -X- _ O
please -X- _ O
note -X- _ O
that -X- _ O
this -X- _ O
is -X- _ O
just -X- _ O
an -X- _ O
example -X- _ O
for -X- _ O
you -X- _ O
to -X- _ O
build -X- _ O
on -X- _ O
and -X- _ O
you'd -X- _ O
still -X- _ O
need -X- _ O
to -X- _ O
check -X- _ O
for -X- _ O
bugs -X- _ O
and -X- _ O
fix -X- _ O
them.",Good -X- _ O
idea! -X- _ O
When -X- _ O
i -X- _ O
have -X- _ O
to -X- _ O
implement -X- _ O
more -X- _ O
than -X- _ O
one -X- _ O
'special' -X- _ O
Set -X- _ O
I'll -X- _ O
use -X- _ O
it. -X- _ O

"Thx -X- _ O
for -X- _ O
you -X- _ O
example! -X- _ O
I've -X- _ O
wrote -X- _ O
a -X- _ O
unit -X- _ O
test -X- _ O
and -X- _ O
it -X- _ O
failed -X- _ O
with -X- _ O
the -X- _ O
following -X- _ O
output: -X- _ O
[1, -X- _ O
3, -X- _ O
5]. -X- _ O
Like -X- _ O
I -X- _ O
mentioned -X- _ O
to -X- _ O
@Kowser -X- _ O
's -X- _ O
answer, -X- _ O
I'll -X- _ O
try -X- _ O
to -X- _ O
use -X- _ O
NavigableSet. -X- _ B-Entity
When -X- _ O
i'm -X- _ O
finished, -X- _ O
i -X- _ O
post -X- _ O
the -X- _ O
code -X- _ O
here. -X- _ O
For -X- _ O
your -X- _ O
efforts -X- _ O
I -X- _ O
mark -X- _ O
your -X- _ O
code -X- _ O
as -X- _ O
solution.",Good -X- _ O
idea! -X- _ O
When -X- _ O
i -X- _ O
have -X- _ O
to -X- _ O
implement -X- _ O
more -X- _ O
than -X- _ O
one -X- _ O
'special' -X- _ O
Set -X- _ O
I'll -X- _ O
use -X- _ O
it. -X- _ O

"Thx -X- _ O
for -X- _ O
you -X- _ O
example! -X- _ O
I've -X- _ O
wrote -X- _ O
a -X- _ O
unit -X- _ O
test -X- _ O
and -X- _ O
it -X- _ O
failed: -X- _ O
void -X- _ O
testLimitedSortedSet() -X- _ B-Entity
{ -X- _ O
final -X- _ O
LimitedSortedSet<Integer> -X- _ O
t1 -X- _ O
= -X- _ O
new -X- _ O
LimitedSortedSet<Integer>(3); -X- _ O
t1.add(5); -X- _ O
t1.add(3); -X- _ O
t1.add(1); -X- _ O
System.out.println(t1); -X- _ O
// -X- _ O
[1,3,5] -X- _ O
t1.add(2); -X- _ O
System.out.println(t1); -X- _ O
// -X- _ O
[1,2,3] -X- _ O
t1.add(9); -X- _ O
System.out.println(t1); -X- _ O
// -X- _ O
[1,2,3] -X- _ O
t1.add(0); -X- _ O
System.out.println(t1); -X- _ O
// -X- _ O
[0,1,2] -X- _ O
Assert.assertTrue(3 -X- _ O
== -X- _ O
t1.size()); -X- _ O
Assert.assertEquals(Integer.valueOf(0), -X- _ O
t1.first()); -X- _ O
}","Thx -X- _ O
for -X- _ O
you -X- _ O
example! -X- _ O
I've -X- _ O
wrote -X- _ O
a -X- _ O
unit -X- _ O
test -X- _ O
and -X- _ O
it -X- _ O
failed -X- _ O
with -X- _ O
the -X- _ O
following -X- _ O
output: -X- _ O
[1, -X- _ O
3, -X- _ O
5]. -X- _ O
Like -X- _ O
I -X- _ O
mentioned -X- _ O
to -X- _ O
@Kowser -X- _ O
's -X- _ O
answer, -X- _ O
I'll -X- _ O
try -X- _ O
to -X- _ O
use -X- _ O
NavigableSet. -X- _ O
When -X- _ O
i'm -X- _ O
finished, -X- _ O
i -X- _ O
post -X- _ O
the -X- _ O
code -X- _ O
here. -X- _ O
For -X- _ O
your -X- _ O
efforts -X- _ O
I -X- _ O
mark -X- _ O
your -X- _ O
code -X- _ O
as -X- _ O
solution." -X- _ O

I -X- _ O
was -X- _ O
looking -X- _ O
for -X- _ O
resources -X- _ O
to -X- _ O
get -X- _ O
started -X- _ O
with -X- _ O
Bayesian -X- _ O
networks. -X- _ O
Will -X- _ O
have -X- _ O
a -X- _ O
look -X- _ O
at -X- _ O
the -X- _ O
WEKA -X- _ B-Entity
API -X- _ I-Entity
you -X- _ O
mentioned.,I -X- _ O
don't -X- _ O
know -X- _ O
what -X- _ O
was -X- _ O
wrong -X- _ O
before -X- _ O
but -X- _ O
it -X- _ O
works -X- _ O
for -X- _ O
me -X- _ O
too -X- _ O
now. -X- _ O

Thanks -X- _ O
for -X- _ O
your -X- _ O
input. -X- _ O
I -X- _ O
agree -X- _ O
that -X- _ O
supporting -X- _ O
multiple -X- _ O
languages -X- _ O
would -X- _ O
be -X- _ O
a -X- _ O
hassle -X- _ O
and -X- _ O
I -X- _ O
was -X- _ O
eyeing -X- _ O
at -X- _ O
Groovy -X- _ O
already -X- _ O
anyway -X- _ O
(especially -X- _ O
because -X- _ O
Grails -X- _ O
already -X- _ O
offers -X- _ O
some -X- _ O
of -X- _ O
the -X- _ O
functionallity -X- _ O
I -X- _ O
intend -X- _ O
to -X- _ O
use). -X- _ O
But -X- _ O
since -X- _ O
you -X- _ O
say -X- _ O
that -X- _ O
the -X- _ O
other -X- _ O
interpreters -X- _ O
are -X- _ O
quite -X- _ O
slow -X- _ O
I -X- _ O
will -X- _ O
try -X- _ O
the -X- _ O
Groovy -X- _ B-Entity
API -X- _ I-Entity
before -X- _ O
the -X- _ O
JSR-223 -X- _ O
candidates.,"Don't -X- _ O
get -X- _ O
me -X- _ O
wrong, -X- _ O
all -X- _ O
of -X- _ O
the -X- _ O
scripting -X- _ O
languages -X- _ O
are -X- _ O
slow -X- _ O
but -X- _ O
you're -X- _ O
probably -X- _ O
not -X- _ O
picking -X- _ O
one -X- _ O
for -X- _ O
speed" -X- _ O

"Though -X- _ O
I -X- _ O
would -X- _ O
still -X- _ O
ask -X- _ O
the -X- _ O
following: -X- _ O
Does -X- _ O
anyone, -X- _ O
one -X- _ O
guy, -X- _ O
can -X- _ O
createContact -X- _ O
using -X- _ O
script.google.com? -X- _ O
Just -X- _ O
write -X- _ O
indide -X- _ O
""myFunction"": -X- _ O
ContactsApp.createContact(""testFirstName"", -X- _ B-Entity
""testLastName"", -X- _ O
""test.email@test.com"") -X- _ O
and -X- _ O
hit -X- _ O
run -X- _ O
button! -X- _ O
Does -X- _ O
it -X- _ O
create -X- _ O
the -X- _ O
testFirstName -X- _ O
contacts? -X- _ O
(search -X- _ O
inside -X- _ O
contacts.google.com). -X- _ O
Or -X- _ O
it -X- _ O
retrieves -X- _ O
""A -X- _ O
temporary -X- _ O
internal -X- _ O
problem -X- _ O
has -X- _ O
occurred. -X- _ O
Try -X- _ O
again -X- _ O
later.""? -X- _ O
If -X- _ O
only -X- _ O
one -X- _ O
guy -X- _ O
can -X- _ O
run -X- _ O
this -X- _ O
without -X- _ O
error, -X- _ O
than -X- _ O
certainly -X- _ O
the -X- _ O
issue -X- _ O
is -X- _ O
only -X- _ O
ours, -X- _ O
and -X- _ O
not -X- _ O
everyone's! -X- _ O
But -X- _ O
thanks -X- _ O
to -X- _ O
@PNC -X- _ O
we -X- _ O
already -X- _ O
have -X- _ O
hope -X- _ O
to -X- _ O
build -X- _ O
a -X- _ O
workaround -X- _ O
if -X- _ O
the -X- _ O
fail -X- _ O
persists!",@VladimirBrasil -X- _ O
- -X- _ O
The -X- _ O
basic -X- _ O
script -X- _ O
fails -X- _ O
for -X- _ O
me. -X- _ O
I -X- _ O
will -X- _ O
add -X- _ O
this -X- _ O
to -X- _ O
the -X- _ O
SR -X- _ O
I -X- _ O
have -X- _ O
open -X- _ O
with -X- _ O
Google. -X- _ O
I -X- _ O
have -X- _ O
been -X- _ O
trying -X- _ O
to -X- _ O
work -X- _ O
out -X- _ O
why -X- _ O
the -X- _ O
OAuth -X- _ O
Playground -X- _ O
is -X- _ O
not -X- _ O
failing -X- _ O
- -X- _ O
what -X- _ O
the -X- _ O
difference -X- _ O
is... -X- _ O
If -X- _ O
you -X- _ O
get -X- _ O
a -X- _ O
workaround -X- _ O
please -X- _ O
update -X- _ O
us. -X- _ O

"Google -X- _ O
Script -X- _ O
(script.google.com -X- _ O
| -X- _ O
,developers.google.com/apps-script, -X- _ O
| -X- _ O
,developers.google.com/apps-script/reference/contacts,) -X- _ O
acts -X- _ O
directly -X- _ O
inside -X- _ O
Google -X- _ O
Data -X- _ O
Center, -X- _ O
as -X- _ O
an -X- _ O
authorized -X- _ O
server, -X- _ O
so -X- _ O
the -X- _ O
code -X- _ O
does -X- _ O
not -X- _ O
require -X- _ O
oauth. -X- _ O
But -X- _ O
you -X- _ O
found -X- _ O
a -X- _ O
huge -X- _ O
info: -X- _ O
I've -X- _ O
just -X- _ O
tested -X- _ O
as -X- _ O
you -X- _ O
suggested, -X- _ O
and -X- _ O
the -X- _ O
oauthplayground -X- _ O
could, -X- _ O
as -X- _ O
you -X- _ O
stated, -X- _ O
create -X- _ O
a -X- _ O
contact. -X- _ O
That's -X- _ O
a -X- _ O
huge -X- _ O
improvement -X- _ O
and -X- _ O
possibly -X- _ O
a -X- _ O
first -X- _ O
candidate -X- _ O
to -X- _ O
implement -X- _ O
a -X- _ O
workaround. -X- _ O
Thanks -X- _ O
for -X- _ O
the -X- _ O
creative -X- _ O
alternative!","Though -X- _ O
I -X- _ O
would -X- _ O
still -X- _ O
ask -X- _ O
the -X- _ O
following: -X- _ O
Does -X- _ O
anyone, -X- _ O
one -X- _ O
guy, -X- _ O
can -X- _ O
createContact -X- _ O
using -X- _ O
script.google.com? -X- _ O
Just -X- _ O
write -X- _ O
indide -X- _ O
""myFunction"": -X- _ O
ContactsApp.createContact(""testFirstName"", -X- _ B-Entity
""testLastName"", -X- _ O
""test.email@test.com"") -X- _ O
and -X- _ O
hit -X- _ O
run -X- _ O
button! -X- _ O
Does -X- _ O
it -X- _ O
create -X- _ O
the -X- _ O
testFirstName -X- _ O
contacts? -X- _ O
(search -X- _ O
inside -X- _ O
contacts.google.com). -X- _ O
Or -X- _ O
it -X- _ O
retrieves -X- _ O
""A -X- _ O
temporary -X- _ O
internal -X- _ O
problem -X- _ O
has -X- _ O
occurred. -X- _ O
Try -X- _ O
again -X- _ O
later.""? -X- _ O
If -X- _ O
only -X- _ O
one -X- _ O
guy -X- _ O
can -X- _ O
run -X- _ O
this -X- _ O
without -X- _ O
error, -X- _ O
than -X- _ O
certainly -X- _ O
the -X- _ O
issue -X- _ O
is -X- _ O
only -X- _ O
ours, -X- _ O
and -X- _ O
not -X- _ O
everyone's! -X- _ O
But -X- _ O
thanks -X- _ O
to -X- _ O
@PNC -X- _ O
we -X- _ O
already -X- _ O
have -X- _ O
hope -X- _ O
to -X- _ O
build -X- _ O
a -X- _ O
workaround -X- _ O
if -X- _ O
the -X- _ O
fail -X- _ O
persists!" -X- _ O

"@VladimirBrasil -X- _ O
- -X- _ O
how -X- _ O
are -X- _ O
you -X- _ O
authorizing? -X- _ O
We -X- _ O
are -X- _ O
using -X- _ O
Service -X- _ O
Account. -X- _ O
I -X- _ O
just -X- _ O
ran -X- _ O
a -X- _ O
test -X- _ O
here -X- _ O
and -X- _ O
was -X- _ O
able -X- _ O
to -X- _ O
create -X- _ O
a -X- _ O
contact -X- _ O
in -X- _ O
the -X- _ O
OAuth -X- _ O
playground -X- _ O
(not -X- _ O
using -X- _ O
Service -X- _ O
Account -X- _ O
but -X- _ O
with -X- _ O
token) -X- _ O
,developers.google.com/oauthplayground, -X- _ O
Maybe -X- _ O
it -X- _ O
is -X- _ O
to -X- _ O
d","Though -X- _ O
I -X- _ O
would -X- _ O
still -X- _ O
ask -X- _ O
the -X- _ O
following: -X- _ O
Does -X- _ O
anyone, -X- _ O
one -X- _ O
guy, -X- _ O
can -X- _ O
createContact -X- _ O
using -X- _ O
script.google.com? -X- _ O
Just -X- _ O
write -X- _ O
indide -X- _ O
""myFunction"": -X- _ O
ContactsApp.createContact(""testFirstName"", -X- _ B-Entity
""testLastName"", -X- _ O
""test.email@test.com"") -X- _ O
and -X- _ O
hit -X- _ O
run -X- _ O
button! -X- _ O
Does -X- _ O
it -X- _ O
create -X- _ O
the -X- _ O
testFirstName -X- _ O
contacts? -X- _ O
(search -X- _ O
inside -X- _ O
contacts.google.com). -X- _ O
Or -X- _ O
it -X- _ O
retrieves -X- _ O
""A -X- _ O
temporary -X- _ O
internal -X- _ O
problem -X- _ O
has -X- _ O
occurred. -X- _ O
Try -X- _ O
again -X- _ O
later.""? -X- _ O
If -X- _ O
only -X- _ O
one -X- _ O
guy -X- _ O
can -X- _ O
run -X- _ O
this -X- _ O
without -X- _ O
error, -X- _ O
than -X- _ O
certainly -X- _ O
the -X- _ O
issue -X- _ O
is -X- _ O
only -X- _ O
ours, -X- _ O
and -X- _ O
not -X- _ O
everyone's! -X- _ O
But -X- _ O
thanks -X- _ O
to -X- _ O
@PNC -X- _ O
we -X- _ O
already -X- _ O
have -X- _ O
hope -X- _ O
to -X- _ O
build -X- _ O
a -X- _ O
workaround -X- _ O
if -X- _ O
the -X- _ O
fail -X- _ O
persists!" -X- _ O

"""This -X- _ O
is -X- _ O
affecting -X- _ O
a -X- _ O
lot -X- _ O
of -X- _ O
our -X- _ O
users -X- _ O
- -X- _ O
please -X- _ O
look -X- _ O
into -X- _ O
this -X- _ O
ASAP"". -X- _ O
I -X- _ O
would -X- _ O
state -X- _ O
this -X- _ O
differently: -X- _ O
present -X- _ O
yourself -X- _ O
if -X- _ O
YOU -X- _ O
CAN -X- _ O
make -X- _ O
this -X- _ O
work: -X- _ O
ContactsApp.createContact(""testFirstName"", -X- _ B-Entity
""testLastName"", -X- _ O
""test.email@test.com"") -X- _ O
If -X- _ O
one -X- _ O
single -X- _ O
person -X- _ O
can -X- _ O
make -X- _ O
this -X- _ O
work, -X- _ O
than -X- _ O
the -X- _ O
issue -X- _ O
is -X- _ O
specific -X- _ O
to -X- _ O
us, -X- _ O
otherwise -X- _ O
is -X- _ O
EVERYONE's -X- _ O
issue!",@VladimirBrasil -X- _ O
- -X- _ O
The -X- _ O
basic -X- _ O
script -X- _ O
fails -X- _ O
for -X- _ O
me. -X- _ O
I -X- _ O
will -X- _ O
add -X- _ O
this -X- _ O
to -X- _ O
the -X- _ O
SR -X- _ O
I -X- _ O
have -X- _ O
open -X- _ O
with -X- _ O
Google. -X- _ O
I -X- _ O
have -X- _ O
been -X- _ O
trying -X- _ O
to -X- _ O
work -X- _ O
out -X- _ O
why -X- _ O
the -X- _ O
OAuth -X- _ O
Playground -X- _ O
is -X- _ O
not -X- _ O
failing -X- _ O
- -X- _ O
what -X- _ O
the -X- _ O
difference -X- _ O
is... -X- _ O
If -X- _ O
you -X- _ O
get -X- _ O
a -X- _ O
workaround -X- _ O
please -X- _ O
update -X- _ O
us. -X- _ O

"Does -X- _ O
anyone -X- _ O
can -X- _ O
make -X- _ O
this -X- _ O
work?: -X- _ O
ContactsApp.createContact(""testFirstName"", -X- _ B-Entity
""testLastName"", -X- _ O
""test.email@test.com"") -X- _ O
If -X- _ O
one -X- _ O
person -X- _ O
can -X- _ O
make -X- _ O
this -X- _ O
work, -X- _ O
than -X- _ O
the -X- _ O
issue -X- _ O
is -X- _ O
specific -X- _ O
to -X- _ O
us, -X- _ O
otherwise -X- _ O
is -X- _ O
everyone's -X- _ O
issue!","""This -X- _ O
is -X- _ O
affecting -X- _ O
a -X- _ O
lot -X- _ O
of -X- _ O
our -X- _ O
users -X- _ O
- -X- _ O
please -X- _ O
look -X- _ O
into -X- _ O
this -X- _ O
ASAP"". -X- _ O
I -X- _ O
would -X- _ O
state -X- _ O
this -X- _ O
differently: -X- _ O
present -X- _ O
yourself -X- _ O
if -X- _ O
YOU -X- _ O
CAN -X- _ O
make -X- _ O
this -X- _ O
work: -X- _ O
ContactsApp.createContact(""testFirstName"", -X- _ O
""testLastName"", -X- _ O
""test.email@test.com"") -X- _ O
If -X- _ O
one -X- _ O
single -X- _ O
person -X- _ O
can -X- _ O
make -X- _ O
this -X- _ O
work, -X- _ O
than -X- _ O
the -X- _ O
issue -X- _ O
is -X- _ O
specific -X- _ O
to -X- _ O
us, -X- _ O
otherwise -X- _ O
is -X- _ O
EVERYONE's -X- _ O
issue!" -X- _ O

"The -X- _ O
same -X- _ O
error -X- _ O
is -X- _ O
ocurring -X- _ O
using -X- _ O
Google -X- _ O
Script. -X- _ O
The -X- _ O
error -X- _ O
started -X- _ O
August -X- _ O
1st, -X- _ O
in -X- _ O
the -X- _ O
afternoon. -X- _ O
I -X- _ O
believe -X- _ O
it -X- _ O
was -X- _ O
around -X- _ O
19:00 -X- _ O
GMT, -X- _ O
by -X- _ O
memory, -X- _ O
when -X- _ O
this -X- _ O
message -X- _ O
first -X- _ O
appeared. -X- _ O
Even -X- _ O
changing -X- _ O
accounts -X- _ O
- -X- _ O
changing -X- _ O
credentials -X- _ O
- -X- _ O
the -X- _ O
problem -X- _ O
persists. -X- _ O
Possibly -X- _ O
a -X- _ O
problem -X- _ O
with -X- _ O
ALL -X- _ O
guys -X- _ O
trying -X- _ O
to -X- _ O
""createContact"" -X- _ B-Entity
or -X- _ O
using -X- _ O
the -X- _ O
Contacts -X- _ O
API -X- _ O
in -X- _ O
general. -X- _ O
This -X- _ O
would -X- _ O
be -X- _ O
a -X- _ O
good -X- _ O
news: -X- _ O
Google -X- _ O
probably -X- _ O
will -X- _ O
ASAP -X- _ O
try -X- _ O
to -X- _ O
solve -X- _ O
it.",@VladimirBrasil -X- _ O
- -X- _ O
The -X- _ O
basic -X- _ O
script -X- _ O
fails -X- _ O
for -X- _ O
me. -X- _ O
I -X- _ O
will -X- _ O
add -X- _ O
this -X- _ O
to -X- _ O
the -X- _ O
SR -X- _ O
I -X- _ O
have -X- _ O
open -X- _ O
with -X- _ O
Google. -X- _ O
I -X- _ O
have -X- _ O
been -X- _ O
trying -X- _ O
to -X- _ O
work -X- _ O
out -X- _ O
why -X- _ O
the -X- _ O
OAuth -X- _ O
Playground -X- _ O
is -X- _ O
not -X- _ O
failing -X- _ O
- -X- _ O
what -X- _ O
the -X- _ O
difference -X- _ O
is... -X- _ O
If -X- _ O
you -X- _ O
get -X- _ O
a -X- _ O
workaround -X- _ O
please -X- _ O
update -X- _ O
us. -X- _ O

We -X- _ O
are -X- _ O
experiencing -X- _ O
the -X- _ O
same -X- _ O
issue. -X- _ O
This -X- _ O
has -X- _ O
just -X- _ O
started -X- _ O
today -X- _ O
a -X- _ O
few -X- _ O
hours -X- _ O
ago. -X- _ O
We -X- _ O
get -X- _ O
- -X- _ O
Error -X- _ O
A -X- _ O
temporary -X- _ O
internal -X- _ O
problem -X- _ O
has -X- _ O
occurred. -X- _ O
Try -X- _ O
again -X- _ O
later. -X- _ O
Out -X- _ O
service -X- _ O
has -X- _ O
been -X- _ O
running -X- _ O
for -X- _ O
several -X- _ O
years -X- _ O
without -X- _ O
a -X- _ O
problem.,"The -X- _ O
same -X- _ O
error -X- _ O
is -X- _ O
ocurring -X- _ O
using -X- _ O
Google -X- _ O
Script. -X- _ O
The -X- _ O
error -X- _ O
started -X- _ O
August -X- _ O
1st, -X- _ O
in -X- _ O
the -X- _ O
afternoon. -X- _ O
I -X- _ O
believe -X- _ O
it -X- _ O
was -X- _ O
around -X- _ O
19:00 -X- _ O
GMT, -X- _ O
by -X- _ O
memory, -X- _ O
when -X- _ O
this -X- _ O
message -X- _ O
first -X- _ O
appeared. -X- _ O
Even -X- _ O
changing -X- _ O
accounts -X- _ O
- -X- _ O
changing -X- _ O
credentials -X- _ O
- -X- _ O
the -X- _ O
problem -X- _ O
persists. -X- _ O
Possibly -X- _ O
a -X- _ O
problem -X- _ O
with -X- _ O
ALL -X- _ O
guys -X- _ O
trying -X- _ O
to -X- _ O
""createContact"" -X- _ B-Entity
or -X- _ O
using -X- _ O
the -X- _ O
Contacts -X- _ O
API -X- _ O
in -X- _ O
general. -X- _ O
This -X- _ O
would -X- _ O
be -X- _ O
a -X- _ O
good -X- _ O
news: -X- _ O
Google -X- _ O
probably -X- _ O
will -X- _ O
ASAP -X- _ O
try -X- _ O
to -X- _ O
solve -X- _ O
it." -X- _ O

I -X- _ O
can't -X- _ O
seem -X- _ O
to -X- _ O
wrap -X- _ O
my -X- _ O
head -X- _ O
around -X- _ O
RequestMappingHandlerMapping. -X- _ B-Entity
I -X- _ O
searched -X- _ O
for -X- _ O
working -X- _ O
examples -X- _ O
but -X- _ O
I -X- _ O
could -X- _ O
not -X- _ O
find -X- _ O
one. -X- _ O
Can -X- _ O
you -X- _ O
provide -X- _ O
an -X- _ O
example -X- _ O
with -X- _ O
code -X- _ O
samples -X- _ O
for -X- _ O
the -X- _ O
Solution2?,I -X- _ O
have -X- _ O
posted -X- _ O
my -X- _ O
own -X- _ O
version. -X- _ O
I -X- _ O
gave -X- _ O
the -X- _ O
bounty -X- _ O
to -X- _ O
this -X- _ O
question -X- _ O
because -X- _ O
of -X- _ O
the -X- _ O
upvotes. -X- _ O

Your -X- _ O
main -X- _ O
problem -X- _ O
seems -X- _ O
to -X- _ O
be -X- _ O
the -X- _ O
documentation: -X- _ O
why -X- _ O
don't -X- _ O
you -X- _ O
focus -X- _ O
on -X- _ O
generating -X- _ O
the -X- _ O
documentation -X- _ O
from -X- _ O
the -X- _ O
given -X- _ O
text -X- _ O
file?,I -X- _ O
can't -X- _ O
seem -X- _ O
to -X- _ O
wrap -X- _ O
my -X- _ O
head -X- _ O
around -X- _ O
RequestMappingHandlerMapping. -X- _ B-Entity
I -X- _ O
searched -X- _ O
for -X- _ O
working -X- _ O
examples -X- _ O
but -X- _ O
I -X- _ O
could -X- _ O
not -X- _ O
find -X- _ O
one. -X- _ O
Can -X- _ O
you -X- _ O
provide -X- _ O
an -X- _ O
example -X- _ O
with -X- _ O
code -X- _ O
samples -X- _ O
for -X- _ O
the -X- _ O
Solution2? -X- _ O

"It -X- _ O
sounds -X- _ O
like -X- _ O
there -X- _ O
could -X- _ O
be -X- _ O
a -X- _ O
template, -X- _ O
where -X- _ O
the -X- _ O
@RequestMapping -X- _ O
path -X- _ O
value -X- _ O
and -X- _ O
the -X- _ O
method -X- _ O
name -X- _ O
are -X- _ O
placeholders -X- _ O
which -X- _ O
are -X- _ O
populated/generated -X- _ O
for -X- _ O
each -X- _ O
url. -X- _ O
The -X- _ O
template -X- _ O
could -X- _ O
be -X- _ O
a -X- _ O
simple -X- _ O
text -X- _ O
file, -X- _ O
or -X- _ O
something -X- _ O
more -X- _ O
interesting -X- _ O
like -X- _ O
using -X- _ O
,FreeMarker,.",Having -X- _ B-Entity
a -X- _ O
single -X- _ O
endpoint -X- _ O
/ -X- _ O
get-resource-paths -X- _ O
would -X- _ O
be -X- _ O
fine -X- _ O
if -X- _ O
there -X- _ O
would -X- _ O
be -X- _ O
an -X- _ O
automatic -X- _ O
way -X- _ O
of -X- _ O
generating -X- _ O
which -X- _ O
urls -X- _ O
are -X- _ O
available -X- _ O
for -X- _ O
the -X- _ O
clients. -X- _ O

"I -X- _ O
agree, -X- _ O
it's -X- _ O
a -X- _ O
very -X- _ O
specific -X- _ O
use -X- _ O
case, -X- _ O
but -X- _ O
fortunately -X- _ O
it's -X- _ O
the -X- _ O
most -X- _ O
common -X- _ O
one, -X- _ O
too. -X- _ O
There -X- _ O
are -X- _ O
many -X- _ O
more -X- _ O
simple -X- _ O
apps -X- _ O
with -X- _ O
a -X- _ O
single -X- _ O
launcher/menu -X- _ O
activity -X- _ O
than -X- _ O
more -X- _ O
complex -X- _ O
flows. -X- _ O
Correction: -X- _ O
this -X- _ O
do -X- _ O
have -X- _ O
a -X- _ O
,similar, -X- _ O
effect -X- _ O
as -X- _ O
,finishAndRemoveTask,, -X- _ B-Entity
not -X- _ O
the -X- _ O
,same -X- _ O
one,, -X- _ O
of -X- _ O
course -X- _ O
(and, -X- _ O
as -X- _ O
you -X- _ O
can -X- _ O
see, -X- _ O
no -X- _ O
other -X- _ O
suggestions -X- _ O
have -X- _ O
been -X- _ O
made, -X- _ O
so -X- _ O
it's -X- _ O
the -X- _ O
best -X- _ O
we -X- _ O
have -X- _ O
for -X- _ O
now). -X- _ O
The -X- _ O
rest -X- _ O
of -X- _ O
your -X- _ O
analysis -X- _ O
is -X- _ O
mistaken: -X- _ O
many -X- _ O
activities -X- _ O
can -X- _ O
be -X- _ O
in -X- _ O
stack -X- _ O
and -X- _ O
even -X- _ O
many -X- _ O
instances -X- _ O
of -X- _ O
them, -X- _ O
thanks -X- _ O
to -X- _ O
the -X- _ O
FLAG_ACTIVITY_CLEAR_TOP -X- _ O
flag. -X- _ O
Anyway -X- _ O
and -X- _ O
most -X- _ O
important: -X- _ O
this -X- _ O
is -X- _ O
just -X- _ O
a -X- _ O
workaround -X- _ O
for -X- _ O
legacy -X- _ O
devices.",does't -X- _ O
finish -X- _ O
just -X- _ O
close -X- _ O
the -X- _ O
current -X- _ O
activity. -X- _ O
in -X- _ O
this -X- _ O
case -X- _ O
First -X- _ O
activity. -X- _ O

"This -X- _ O
would -X- _ O
work -X- _ O
in -X- _ O
a -X- _ O
very -X- _ O
specific -X- _ O
use -X- _ O
case -X- _ O
where -X- _ O
,FirstActivity, -X- _ O
is -X- _ O
the -X- _ O
only -X- _ O
activity -X- _ O
in -X- _ O
the -X- _ O
stack -X- _ O
and -X- _ O
it's -X- _ O
the -X- _ O
only -X- _ O
instance -X- _ O
of -X- _ O
that -X- _ O
activity -X- _ O
in -X- _ O
that -X- _ O
task -X- _ O
and -X- _ O
it -X- _ O
would -X- _ O
not -X- _ O
remove -X- _ O
the -X- _ O
task -X- _ O
from -X- _ O
recent -X- _ O
tasks. -X- _ O
In -X- _ O
other -X- _ O
words -X- _ O
that -X- _ O
does -X- _ O
not -X- _ O
have -X- _ O
a -X- _ O
similar -X- _ O
effect -X- _ O
as -X- _ O
,finishAndRemoveTask","I -X- _ O
agree, -X- _ O
it's -X- _ O
a -X- _ O
very -X- _ O
specific -X- _ O
use -X- _ O
case, -X- _ O
but -X- _ O
fortunately -X- _ O
it's -X- _ O
the -X- _ O
most -X- _ O
common -X- _ O
one, -X- _ O
too. -X- _ O
There -X- _ O
are -X- _ O
many -X- _ O
more -X- _ O
simple -X- _ O
apps -X- _ O
with -X- _ O
a -X- _ O
single -X- _ O
launcher/menu -X- _ O
activity -X- _ O
than -X- _ O
more -X- _ O
complex -X- _ O
flows. -X- _ O
Correction: -X- _ O
this -X- _ O
do -X- _ O
have -X- _ O
a -X- _ O
,similar, -X- _ O
effect -X- _ O
as -X- _ O
,finishAndRemoveTask,, -X- _ B-Entity
not -X- _ O
the -X- _ O
,same -X- _ O
one,, -X- _ O
of -X- _ O
course -X- _ O
(and, -X- _ O
as -X- _ O
you -X- _ O
can -X- _ O
see, -X- _ O
no -X- _ O
other -X- _ O
suggestions -X- _ O
have -X- _ O
been -X- _ O
made, -X- _ O
so -X- _ O
it's -X- _ O
the -X- _ O
best -X- _ O
we -X- _ O
have -X- _ O
for -X- _ O
now). -X- _ O
The -X- _ O
rest -X- _ O
of -X- _ O
your -X- _ O
analysis -X- _ O
is -X- _ O
mistaken: -X- _ O
many -X- _ O
activities -X- _ O
can -X- _ O
be -X- _ O
in -X- _ O
stack -X- _ O
and -X- _ O
even -X- _ O
many -X- _ O
instances -X- _ O
of -X- _ O
them, -X- _ O
thanks -X- _ O
to -X- _ O
the -X- _ O
FLAG_ACTIVITY_CLEAR_TOP -X- _ O
flag. -X- _ O
Anyway -X- _ O
and -X- _ O
most -X- _ O
important: -X- _ O
this -X- _ O
is -X- _ O
just -X- _ O
a -X- _ O
workaround -X- _ O
for -X- _ O
legacy -X- _ O
devices." -X- _ O

I -X- _ O
want -X- _ O
to -X- _ O
prevent -X- _ O
the -X- _ O
user -X- _ O
to -X- _ O
re-open -X- _ O
the -X- _ O
app -X- _ O
from -X- _ O
the -X- _ O
recent -X- _ O
task..,"This -X- _ O
would -X- _ O
work -X- _ O
in -X- _ O
a -X- _ O
very -X- _ O
specific -X- _ O
use -X- _ O
case -X- _ O
where -X- _ O
,FirstActivity, -X- _ O
is -X- _ O
the -X- _ O
only -X- _ O
activity -X- _ O
in -X- _ O
the -X- _ O
stack -X- _ O
and -X- _ O
it's -X- _ O
the -X- _ O
only -X- _ O
instance -X- _ O
of -X- _ O
that -X- _ O
activity -X- _ O
in -X- _ O
that -X- _ O
task -X- _ O
and -X- _ O
it -X- _ O
would -X- _ O
not -X- _ O
remove -X- _ O
the -X- _ O
task -X- _ O
from -X- _ O
recent -X- _ O
tasks. -X- _ O
In -X- _ O
other -X- _ O
words -X- _ O
that -X- _ O
does -X- _ O
not -X- _ O
have -X- _ O
a -X- _ O
similar -X- _ O
effect -X- _ O
as -X- _ O
,finishAndRemoveTask" -X- _ B-Entity

"P.S. -X- _ O
- -X- _ O
error -X- _ O
thrown -X- _ O
from -X- _ O
this -X- _ O
line: -X- _ O
,kafka.javaapi.TopicMetadataResponse -X- _ B-Entity
resp -X- _ O
= -X- _ O
consumer.send(req);","seeds.add(""104.131.40.xxx""), -X- _ B-Entity
is -X- _ O
this -X- _ O
the -X- _ O
ip -X- _ O
of -X- _ O
your -X- _ O
zookeeper -X- _ O
node -X- _ O
? -X- _ O
kafka -X- _ O
simple -X- _ O
consumer -X- _ O
does -X- _ O
not -X- _ O
require -X- _ O
zookeeper -X- _ O
to -X- _ O
discover -X- _ O
messages, -X- _ O
the -X- _ O
ip -X- _ O
you -X- _ O
are -X- _ O
providing -X- _ O
are -X- _ O
supposed -X- _ O
to -X- _ O
be -X- _ O
the -X- _ O
ip -X- _ O
of -X- _ O
the -X- _ O
node -X- _ O
that -X- _ O
kafka -X- _ O
is -X- _ O
running -X- _ O
and -X- _ O
not -X- _ O
the -X- _ O
zookeeper -X- _ O
info" -X- _ O

The -X- _ O
problem -X- _ O
is -X- _ O
that -X- _ O
getHostName() -X- _ B-Entity
blocks -X- _ O
for -X- _ O
around -X- _ O
5 -X- _ O
seconds -X- _ O
if -X- _ O
the -X- _ O
network -X- _ O
cart -X- _ O
is -X- _ O
not -X- _ O
connected.,"I -X- _ O
don't -X- _ O
think -X- _ O
changing -X- _ O
the -X- _ O
timeout -X- _ O
will -X- _ O
help. -X- _ O
If -X- _ O
you -X- _ O
make -X- _ O
it -X- _ O
too -X- _ O
short -X- _ O
then -X- _ O
it -X- _ O
will -X- _ O
timeout -X- _ O
when -X- _ O
there -X- _ O
is -X- _ O
an -X- _ O
actual -X- _ O
connection -X- _ O
delay. -X- _ O
But -X- _ O
there -X- _ O
are -X- _ O
circumstances -X- _ O
(such -X- _ O
as -X- _ O
not -X- _ O
having -X- _ O
a -X- _ O
network -X- _ O
card) -X- _ O
when -X- _ O
no -X- _ O
network -X- _ O
connection -X- _ O
is -X- _ O
possible, -X- _ O
and -X- _ O
the -X- _ O
questioner -X- _ O
wants -X- _ O
to -X- _ O
detect -X- _ O
that -X- _ O
immediately." -X- _ O

"AnalyticsScopes, -X- _ B-Entity
and -X- _ O
,Analytics, -X- _ B-Entity
are -X- _ O
the -X- _ O
part -X- _ O
of -X- _ O
,Google -X- _ B-Entity
Analytics -X- _ I-Entity
API -X- _ I-Entity
library,. -X- _ O
,OAuth2Native, -X- _ O
is -X- _ O
an -X- _ O
example. -X- _ O
You -X- _ O
should -X- _ O
implement -X- _ O
,authorization -X- _ O
code -X- _ O
flow, -X- _ O
on -X- _ O
your -X- _ O
own. -X- _ O
I'd -X- _ O
recommend -X- _ O
you -X- _ O
to -X- _ O
take -X- _ O
a -X- _ O
look -X- _ O
at -X- _ O
,this -X- _ O
good -X- _ O
example,.",How -X- _ O
did -X- _ O
you -X- _ O
solve -X- _ O
it? -X- _ O

"I -X- _ O
think -X- _ O
when -X- _ O
people -X- _ O
ask -X- _ O
about -X- _ O
a -X- _ O
memmove -X- _ O
equivalent -X- _ O
(as -X- _ O
opposed -X- _ O
to -X- _ O
a -X- _ O
memcpy -X- _ O
equivalent), -X- _ O
usually -X- _ O
case -X- _ O
(b) -X- _ O
applies. -X- _ O
Nonetheless, -X- _ O
good -X- _ O
answer.","@jalf: -X- _ O
As -X- _ O
Jherico -X- _ O
mentioned -X- _ O
in -X- _ O
the -X- _ O
answer, -X- _ O
copyOf -X- _ B-Entity
and -X- _ O
copyOfRange -X- _ B-Entity
both -X- _ O
create -X- _ O
new -X- _ O
arrays, -X- _ O
and -X- _ O
cannot -X- _ O
be -X- _ O
used -X- _ O
for -X- _ O
copying -X- _ O
stuff -X- _ O
to -X- _ O
the -X- _ O
same -X- _ O
array." -X- _ O

"memmove -X- _ O
specifically -X- _ O
allows -X- _ O
you -X- _ O
to -X- _ O
between -X- _ O
overlapping -X- _ O
ranges. -X- _ O
(say, -X- _ O
copy -X- _ O
the -X- _ O
range -X- _ O
a[0-5] -X- _ O
to -X- _ O
a[1-6]. -X- _ O
Do -X- _ O
the -X- _ O
ones -X- _ O
you -X- _ O
mention -X- _ O
allow -X- _ O
that?","@jalf: -X- _ O
As -X- _ O
Jherico -X- _ O
mentioned -X- _ O
in -X- _ O
the -X- _ O
answer, -X- _ O
copyOf -X- _ B-Entity
and -X- _ O
copyOfRange -X- _ B-Entity
both -X- _ O
create -X- _ O
new -X- _ O
arrays, -X- _ O
and -X- _ O
cannot -X- _ O
be -X- _ O
used -X- _ O
for -X- _ O
copying -X- _ O
stuff -X- _ O
to -X- _ O
the -X- _ O
same -X- _ O
array." -X- _ O

I'm -X- _ O
porting -X- _ O
a -X- _ O
forward -X- _ O
error -X- _ O
correcting -X- _ O
codec -X- _ O
from -X- _ O
C -X- _ O
to -X- _ O
Java. -X- _ O
The -X- _ O
original -X- _ O
programmer -X- _ O
used -X- _ O
memset -X- _ O
and -X- _ O
memmove -X- _ O
to -X- _ O
manipulate -X- _ O
the -X- _ O
data -X- _ O
in -X- _ O
vector -X- _ O
calculations.,"@jalf: -X- _ O
As -X- _ O
Jherico -X- _ O
mentioned -X- _ O
in -X- _ O
the -X- _ O
answer, -X- _ O
copyOf -X- _ B-Entity
and -X- _ O
copyOfRange -X- _ B-Entity
both -X- _ O
create -X- _ O
new -X- _ O
arrays, -X- _ O
and -X- _ O
cannot -X- _ O
be -X- _ O
used -X- _ O
for -X- _ O
copying -X- _ O
stuff -X- _ O
to -X- _ O
the -X- _ O
same -X- _ O
array." -X- _ O

"@overthink: -X- _ O
So -X- _ O
you're -X- _ O
saying -X- _ O
you -X- _ O
could -X- _ O
also -X- _ O
use -X- _ O
,synchronized(sharedObject) -X- _ O
{...}, -X- _ O
blocks -X- _ O
instead -X- _ O
of -X- _ O
the -X- _ O
,Global.webLock.lock()/unlock(), -X- _ B-Entity
statements?","@Marcus: -X- _ O
Yes, -X- _ O
you -X- _ O
could -X- _ O
use -X- _ O
synchronized -X- _ O
instead -X- _ O
of -X- _ O
lock/unlock. -X- _ O
e.g. -X- _ O
in -X- _ O
my -X- _ O
example -X- _ O
above -X- _ O
you -X- _ O
could -X- _ O
make -X- _ O
,webLock, -X- _ O
a -X- _ O
simple -X- _ O
,Object, -X- _ O
and -X- _ O
use -X- _ O
,synchronized(webLock) -X- _ O
{...}, -X- _ O
instead." -X- _ O

"""...REST -X- _ O
API..."" -X- _ O
- -X- _ O
don't -X- _ O
confuse -X- _ O
a -X- _ O
SOAP-less -X- _ O
web -X- _ O
service -X- _ O
with -X- _ O
a -X- _ O
true -X- _ O
REST -X- _ O
approach. -X- _ O
If -X- _ O
REST -X- _ O
is -X- _ O
modeled -X- _ O
after -X- _ O
the -X- _ O
stateless -X- _ O
HTTP -X- _ O
protocol, -X- _ O
your -X- _ O
services -X- _ O
don't -X- _ O
merit -X- _ O
the -X- _ O
title -X- _ O
- -X- _ O
they -X- _ O
aren't -X- _ O
stateless.","@overthink: -X- _ O
So -X- _ O
you're -X- _ O
saying -X- _ O
you -X- _ O
could -X- _ O
also -X- _ O
use -X- _ O
,synchronized(sharedObject) -X- _ O
{...}, -X- _ O
blocks -X- _ O
instead -X- _ O
of -X- _ O
the -X- _ O
,Global.webLock.lock()/unlock(), -X- _ B-Entity
statements?" -X- _ O

"Also -X- _ O
if -X- _ O
some -X- _ O
authentication -X- _ O
is -X- _ O
there, -X- _ O
might -X- _ O
be -X- _ O
calling -X- _ O
,linec.connect();, -X- _ O
before -X- _ O
using -X- _ O
,OutputStreamWriter, -X- _ B-Entity
will -X- _ O
help. -X- _ O
,linec.disconnect(), -X- _ O
at -X- _ O
the -X- _ O
end -X- _ O
to -X- _ O
disconnect",Your -X- _ O
payload -X- _ O
is -X- _ O
not -X- _ O
a -X- _ O
valid -X- _ O
JSON. -X- _ O

"yes, -X- _ O
it -X- _ O
works -X- _ O
when -X- _ O
I -X- _ O
use -X- _ O
curl.","Also -X- _ O
if -X- _ O
some -X- _ O
authentication -X- _ O
is -X- _ O
there, -X- _ O
might -X- _ O
be -X- _ O
calling -X- _ O
,linec.connect();, -X- _ O
before -X- _ O
using -X- _ O
,OutputStreamWriter, -X- _ B-Entity
will -X- _ O
help. -X- _ O
,linec.disconnect(), -X- _ O
at -X- _ O
the -X- _ O
end -X- _ O
to -X- _ O
disconnect" -X- _ O

Thanks -X- _ O
for -X- _ O
reply. -X- _ O
but -X- _ O
I -X- _ O
am -X- _ O
getting -X- _ O
this -X- _ O
error -X- _ O
java.lang.IllegalArgumentException: -X- _ B-Entity
@Path -X- _ O
parameter -X- _ O
name -X- _ O
must -X- _ O
match -X- _ O
\{([a-zA-Z][a-zA-Z0-9_-]*)\}. -X- _ O
Found: -X- _ O
_id -X- _ O
(parameter -X- _ O
#1) -X- _ O
I -X- _ O
am -X- _ O
calling -X- _ O
by -X- _ O
this. -X- _ O
Call<List<Course>> -X- _ O
call -X- _ O
= -X- _ O
serviceRetro.deleteRecords(id);,"Just -X- _ O
replace -X- _ O
,@Path(""_id""), -X- _ O
to -X- _ O
,@Path(""id""), -X- _ O
for -X- _ O
parameter -X- _ O
in -X- _ O
,deleteRecords, -X- _ O
method." -X- _ O

"I -X- _ O
haven't -X- _ O
worked -X- _ O
with -X- _ O
the -X- _ O
library -X- _ O
myself, -X- _ O
but -X- _ O
I -X- _ O
did -X- _ O
find -X- _ O
some -X- _ O
documentation -X- _ O
on -X- _ O
it, -X- _ O
albeit -X- _ O
scattered -X- _ O
a -X- _ O
bit. -X- _ O
See -X- _ O
the -X- _ O
addition -X- _ O
information -X- _ O
above...",I'm -X- _ O
using -X- _ O
CRFClassifier. -X- _ B-Entity
Looks -X- _ O
easy -X- _ O
to -X- _ O
configure. -X- _ O

Can -X- _ O
you -X- _ O
provide -X- _ O
code -X- _ O
example -X- _ O
from -X- _ O
CRFClassifier -X- _ B-Entity
to -X- _ O
training -X- _ O
and -X- _ O
classifying?,"I -X- _ O
haven't -X- _ O
worked -X- _ O
with -X- _ O
the -X- _ O
library -X- _ O
myself, -X- _ O
but -X- _ O
I -X- _ O
did -X- _ O
find -X- _ O
some -X- _ O
documentation -X- _ O
on -X- _ O
it, -X- _ O
albeit -X- _ O
scattered -X- _ O
a -X- _ O
bit. -X- _ O
See -X- _ O
the -X- _ O
addition -X- _ O
information -X- _ O
above..." -X- _ O

"@Renato -X- _ O
Dinhani -X- _ O
Concei??o -X- _ O
I -X- _ O
meant: -X- _ O
Does -X- _ O
all -X- _ O
of -X- _ O
your -X- _ O
pages -X- _ O
have -X- _ O
templated -X- _ O
html -X- _ O
structure? -X- _ O
To -X- _ O
extract -X- _ O
important -X- _ O
information -X- _ O
from -X- _ O
text, -X- _ O
you -X- _ O
need -X- _ O
to -X- _ O
find -X- _ O
most -X- _ O
informative -X- _ O
parts -X- _ O
in -X- _ O
it. -X- _ O
For -X- _ O
example -X- _ O
- -X- _ O
if -X- _ O
your -X- _ O
pages -X- _ O
has -X- _ O
templated -X- _ O
structure, -X- _ O
it -X- _ O
would -X- _ O
be -X- _ O
more -X- _ O
simpl",Can -X- _ O
you -X- _ O
provide -X- _ O
code -X- _ O
example -X- _ O
from -X- _ O
CRFClassifier -X- _ B-Entity
to -X- _ O
training -X- _ O
and -X- _ O
classifying? -X- _ O

"@stemm -X- _ O
Yes, -X- _ O
all -X- _ O
of -X- _ O
them -X- _ O
are -X- _ O
HTML. -X- _ O
I'm -X- _ O
avoiding -X- _ O
another -X- _ O
types.",I'm -X- _ O
using -X- _ O
CRFClassifier. -X- _ B-Entity
Looks -X- _ O
easy -X- _ O
to -X- _ O
configure. -X- _ O

"@ΔλЛ -X- _ O
IDK, -X- _ O
keys -X- _ O
=> -X- _ O
,keySet(),, -X- _ B-Entity
values -X- _ O
=> -X- _ O
,values(),, -X- _ B-Entity
both -X- _ O
=> -X- _ O
,entrySet(),; -X- _ B-Entity
doesn't -X- _ O
affect -X- _ O
the -X- _ O
,forEach,. -X- _ B-Entity
But -X- _ O
as -X- _ O
I -X- _ O
said, -X- _ O
it's -X- _ O
a -X- _ O
style -X- _ O
thing—just -X- _ O
wanted -X- _ O
to -X- _ O
mention -X- _ O
it.","100% -X- _ O
agree -X- _ O
with -X- _ O
you. -X- _ O
What -X- _ O
I -X- _ O
thought -X- _ O
was, -X- _ O
since -X- _ O
question -X- _ O
is -X- _ O
already -X- _ O
answered, -X- _ O
my -X- _ O
answer -X- _ O
will -X- _ O
help -X- _ O
to -X- _ O
a -X- _ O
person -X- _ O
who -X- _ O
is -X- _ O
looking -X- _ O
for -X- _ O
a -X- _ O
solution -X- _ O
can -X- _ O
easily -X- _ O
locate -X- _ O
the -X- _ O
answer. -X- _ O
But -X- _ O
I -X- _ O
do -X- _ O
agree -X- _ O
with -X- _ O
you -X- _ O
which -X- _ O
I -X- _ O
learnt -X- _ O
something -X- _ O
from -X- _ O
you, -X- _ O
thanks." -X- _ O

"You -X- _ O
could -X- _ O
pass -X- _ O
the -X- _ O
method -X- _ O
reference -X- _ O
directely -X- _ O
instead -X- _ O
of -X- _ O
creating -X- _ O
a -X- _ O
lambda: -X- _ O
,forEach(System.out::println),. -X- _ O
However, -X- _ O
it's -X- _ O
just -X- _ O
a -X- _ O
matter -X- _ O
of -X- _ O
style.","@ΔλЛ -X- _ O
IDK, -X- _ O
keys -X- _ O
=> -X- _ O
,keySet(),, -X- _ B-Entity
values -X- _ O
=> -X- _ O
,values(),, -X- _ B-Entity
both -X- _ O
=> -X- _ O
,entrySet(),; -X- _ B-Entity
doesn't -X- _ O
affect -X- _ O
the -X- _ O
,forEach,. -X- _ B-Entity
But -X- _ O
as -X- _ O
I -X- _ O
said, -X- _ O
it's -X- _ O
a -X- _ O
style -X- _ O
thing—just -X- _ O
wanted -X- _ O
to -X- _ O
mention -X- _ O
it." -X- _ O

Then -X- _ O
why -X- _ O
they -X- _ O
offer -X- _ O
batch -X- _ O
request -X- _ O
then? -X- _ O
I -X- _ O
got -X- _ O
rate -X- _ O
limited -X- _ O
every -X- _ O
time -X- _ O
I -X- _ O
do -X- _ O
batch -X- _ O
request.,"Thanks -X- _ O
for -X- _ O
an -X- _ O
answer. -X- _ O
Yes, -X- _ O
mine -X- _ O
shows -X- _ O
5.0 -X- _ O
requests/second/user -X- _ O
too. -X- _ O
But -X- _ O
I'm -X- _ O
using -X- _ O
wait -X- _ O
periods -X- _ O
(,Thread.sleep(),) -X- _ B-Entity
to -X- _ O
stay -X- _ O
inside -X- _ O
this -X- _ O
rate. -X- _ O
And -X- _ O
currently -X- _ O
I -X- _ O
am -X- _ O
the -X- _ O
only -X- _ O
user -X- _ O
of -X- _ O
this -X- _ O
app." -X- _ O

"One -X- _ O
approach -X- _ O
would -X- _ O
be -X- _ O
to -X- _ O
write -X- _ O
an -X- _ O
integration -X- _ O
test -X- _ O
that -X- _ O
exercises -X- _ O
the -X- _ O
REST -X- _ O
API. -X- _ O
See -X- _ O
,stackoverflow.com/questions/10752/…,. -X- _ O
In -X- _ O
a -X- _ O
unit -X- _ O
test -X- _ O
approach -X- _ O
you -X- _ O
would -X- _ O
typically -X- _ O
mock -X- _ O
,LayoutInflater -X- _ O
inflater, -X- _ O
ViewGroup -X- _ B-Entity
container, -X- _ O
Bundle -X- _ O
savedInstanceState,, -X- _ O
pass -X- _ O
them -X- _ O
to -X- _ O
,OffenceFrag. -X- _ O
onCreateView(), -X- _ O
and -X- _ O
assert -X- _ O
that -X- _ O
OffenceFrag -X- _ O
does -X- _ O
what -X- _ O
you -X- _ O
expect -X- _ O
it -X- _ O
to","one -X- _ O
assert -X- _ O
method -X- _ O
call -X- _ O
per -X- _ O
unit -X- _ O
test -X- _ O
case, -X- _ O
- -X- _ O
this -X- _ O
is -X- _ O
not -X- _ O
always -X- _ O
possible. -X- _ O
For -X- _ O
example: -X- _ O
nobody -X- _ O
checks -X- _ O
null -X- _ O
in -X- _ O
one -X- _ O
test -X- _ O
and -X- _ O
the -X- _ O
value -X- _ O
of -X- _ O
the -X- _ O
result -X- _ O
in -X- _ O
another -X- _ O
test." -X- _ O

Thanks. -X- _ O
The -X- _ O
getNeighboringKeys -X- _ B-Entity
method -X- _ O
could -X- _ O
be -X- _ O
optimized -X- _ O
to -X- _ O
do -X- _ O
lesser -X- _ O
operations -X- _ O
though.,The -X- _ O
optimization -X- _ O
would -X- _ O
yield -X- _ O
too -X- _ O
small -X- _ O
a -X- _ O
performance -X- _ O
boost -X- _ O
to -X- _ O
justify -X- _ O
the -X- _ O
additional -X- _ O
time -X- _ O
to -X- _ O
try -X- _ O
and -X- _ O
optimize -X- _ O
it.. -X- _ O
I -X- _ O
mean -X- _ O
there -X- _ O
are -X- _ O
only -X- _ O
80 -X- _ O
keys -X- _ O
more -X- _ O
or -X- _ O
less -X- _ O
in -X- _ O
the -X- _ O
grid -X- _ O
and -X- _ O
you -X- _ O
call -X- _ O
this -X- _ O
rarely. -X- _ O
But -X- _ O
be -X- _ O
my -X- _ O
guest -X- _ O
and -X- _ O
post -X- _ O
the -X- _ O
optimized -X- _ O
version -X- _ O
if -X- _ O
you -X- _ O
do -X- _ O
it -X- _ O
:) -X- _ O

"If -X- _ O
you're -X- _ O
really -X- _ O
lucky, -X- _ O
the -X- _ O
,Exception, -X- _ O
being -X- _ O
thrown -X- _ O
is -X- _ O
a -X- _ O
wrapper -X- _ O
for -X- _ O
some -X- _ O
other -X- _ O
exception -X- _ O
thrown -X- _ O
by -X- _ O
a -X- _ O
library -X- _ O
they're -X- _ O
using -X- _ O
internally. -X- _ O
Does -X- _ O
,getCause(), -X- _ B-Entity
return -X- _ O
anything? -X- _ O
I've -X- _ O
seen -X- _ O
this -X- _ O
kind -X- _ O
of -X- _ O
thing -X- _ O
from -X- _ O
too -X- _ O
many -X- _ O
companies -X- _ O
that -X- _ O
should -X- _ O
know -X- _ O
better. -X- _ O
Good -X- _ O
luck...","@Arcensoth -X- _ O
If -X- _ O
you -X- _ O
do -X- _ O
not -X- _ O
know -X- _ O
exceptions -X- _ O
upfront, -X- _ O
but -X- _ O
you -X- _ O
have -X- _ O
access -X- _ O
to -X- _ O
the -X- _ O
compiled -X- _ O
JAR, -X- _ O
you -X- _ O
could -X- _ O
write -X- _ O
a -X- _ O
small -X- _ O
program -X- _ O
to -X- _ O
find -X- _ O
all -X- _ O
subclasses -X- _ O
of -X- _ O
,Exception, -X- _ O
defined -X- _ O
in -X- _ O
the -X- _ O
program, -X- _ O
and -X- _ O
take -X- _ O
it -X- _ O
from -X- _ O
there. -X- _ O
I -X- _ O
would -X- _ O
also -X- _ O
try -X- _ O
contacting -X- _ O
the -X- _ O
developers -X- _ O
of -X- _ O
" -X- _ O

"Is -X- _ O
it -X- _ O
throwing -X- _ O
,Exception, -X- _ O
itself, -X- _ O
or -X- _ O
some -X- _ O
unknown -X- _ O
subclass? -X- _ O
If -X- _ O
the -X- _ O
former, -X- _ O
,instanceof, -X- _ O
won't -X- _ O
do -X- _ O
anything -X- _ O
for -X- _ O
you.","If -X- _ O
you're -X- _ O
really -X- _ O
lucky, -X- _ O
the -X- _ O
,Exception, -X- _ O
being -X- _ O
thrown -X- _ O
is -X- _ O
a -X- _ O
wrapper -X- _ O
for -X- _ O
some -X- _ O
other -X- _ O
exception -X- _ O
thrown -X- _ O
by -X- _ O
a -X- _ O
library -X- _ O
they're -X- _ O
using -X- _ O
internally. -X- _ O
Does -X- _ O
,getCause(), -X- _ B-Entity
return -X- _ O
anything? -X- _ O
I've -X- _ O
seen -X- _ O
this -X- _ O
kind -X- _ O
of -X- _ O
thing -X- _ O
from -X- _ O
too -X- _ O
many -X- _ O
companies -X- _ O
that -X- _ O
should -X- _ O
know -X- _ O
better. -X- _ O
Good -X- _ O
luck..." -X- _ O

"@Philipp -X- _ O
Working -X- _ O
on -X- _ O
that -X- _ O
at -X- _ O
the -X- _ O
moment, -X- _ O
you -X- _ O
want -X- _ O
to -X- _ O
be -X- _ O
able -X- _ O
to -X- _ O
use -X- _ O
something -X- _ O
like -X- _ O
,InitMessage, -X- _ B-Entity
instead -X- _ O
of -X- _ O
,Message<MessageType.INIT>,.",I -X- _ O
like -X- _ O
the -X- _ O
idea: -X- _ O
that's -X- _ O
more -X- _ O
of -X- _ O
a -X- _ O
callback -X- _ O
approach. -X- _ O

"Thanks, -X- _ O
that's -X- _ O
interesting. -X- _ O
Suppose -X- _ O
the -X- _ O
responses -X- _ O
carry -X- _ O
different -X- _ O
information, -X- _ O
how -X- _ O
could -X- _ O
I -X- _ O
access -X- _ O
this?","@Philipp -X- _ O
Working -X- _ O
on -X- _ O
that -X- _ O
at -X- _ O
the -X- _ O
moment, -X- _ O
you -X- _ O
want -X- _ O
to -X- _ O
be -X- _ O
able -X- _ O
to -X- _ O
use -X- _ O
something -X- _ O
like -X- _ O
,InitMessage, -X- _ B-Entity
instead -X- _ O
of -X- _ O
,Message<MessageType.INIT>,." -X- _ O

"Very -X- _ O
clean -X- _ O
solution, -X- _ O
thanks! -X- _ O
(very -X- _ O
similar -X- _ O
to -X- _ O
Skiwi's). -X- _ O
After -X- _ O
a -X- _ O
bit -X- _ O
of -X- _ O
tweaking -X- _ O
I -X- _ O
also -X- _ O
could -X- _ O
remove -X- _ O
the -X- _ O
getTypeClass() -X- _ B-Entity
method -X- _ O
from -X- _ O
Message. -X- _ O
You -X- _ O
can -X- _ O
access -X- _ O
that -X- _ O
same -X- _ O
information -X- _ O
with -X- _ O
message.getClass().getGenericInterfaces()[0].getActualTypeArguments() -X- _ B-Entity
(needs -X- _ O
some -X- _ O
casting -X- _ O
to -X- _ O
ParameterizedType -X- _ O
in -X- _ O
there -X- _ O
somewhere)",@Philipp -X- _ O
I've -X- _ O
got -X- _ O
my -X- _ O
final -X- _ O
working -X- _ O
example -X- _ O
now. -X- _ O
I -X- _ O
hope -X- _ O
this -X- _ O
is -X- _ O
exactly -X- _ O
what -X- _ O
you -X- _ O
want. -X- _ O

"@MarkTielemans -X- _ O
The -X- _ O
messages -X- _ O
have -X- _ O
many -X- _ O
similarities, -X- _ O
but -X- _ O
also -X- _ O
many -X- _ O
differences. -X- _ O
Say -X- _ O
the -X- _ O
HelloResponse -X- _ B-Entity
contains -X- _ O
the -X- _ O
serial -X- _ O
number -X- _ O
of -X- _ O
the -X- _ O
device. -X- _ O
I -X- _ O
would -X- _ O
like -X- _ O
the -X- _ O
HelloResponse -X- _ B-Entity
object -X- _ O
to -X- _ O
have -X- _ O
a -X- _ O
getSerialNumber() -X- _ B-Entity
method. -X- _ O
How -X- _ O
could -X- _ O
I -X- _ O
achieve -X- _ O
this -X- _ O
with -X- _ O
generics","Thanks, -X- _ O
that's -X- _ O
interesting. -X- _ O
Suppose -X- _ O
the -X- _ O
responses -X- _ O
carry -X- _ O
different -X- _ O
information, -X- _ O
how -X- _ O
could -X- _ O
I -X- _ O
access -X- _ O
this?" -X- _ O

"You -X- _ O
check -X- _ O
the -X- _ O
type -X- _ O
of -X- _ O
""Response"" -X- _ O
and -X- _ O
you -X- _ O
cast -X- _ O
then -X- _ O
the -X- _ O
HelloMessage. -X- _ B-Entity
It -X- _ O
seems -X- _ O
grotesque. -X- _ O
Anyway, -X- _ O
you -X- _ O
can -X- _ O
hide -X- _ O
the -X- _ O
""instanceOf"" -X- _ O
and -X- _ O
the -X- _ O
""casting"" -X- _ O
operations -X- _ O
in -X- _ O
the -X- _ O
implementation -X- _ O
classes.",@Philipp -X- _ O
I've -X- _ O
got -X- _ O
my -X- _ O
final -X- _ O
working -X- _ O
example -X- _ O
now. -X- _ O
I -X- _ O
hope -X- _ O
this -X- _ O
is -X- _ O
exactly -X- _ O
what -X- _ O
you -X- _ O
want. -X- _ O

"Thank -X- _ O
you -X- _ O
both -X- _ O
for -X- _ O
your -X- _ O
comments. -X- _ O
I -X- _ O
have -X- _ O
updated -X- _ O
the -X- _ O
original -X- _ O
question -X- _ O
to -X- _ O
incorporate -X- _ O
your -X- _ O
advice. -X- _ O
The -X- _ O
application -X- _ O
opens -X- _ O
the -X- _ O
Google -X- _ B-Entity
Places -X- _ I-Entity
API -X- _ I-Entity
now -X- _ O
(actually -X- _ O
shows -X- _ O
the -X- _ O
map) -X- _ O
and -X- _ O
then -X- _ O
crashes. -X- _ O
So -X- _ O
the -X- _ O
application -X- _ O
gets -X- _ O
one -X- _ O
step -X- _ O
further, -X- _ O
but -X- _ O
still -X- _ O
reverts -X- _ O
back -X- _ O
to -X- _ O
the -X- _ O
original -X- _ O
screen.","You -X- _ O
deserve -X- _ O
a -X- _ O
prize! -X- _ O
Thanks, -X- _ O
@YvetteColomb" -X- _ O

"Thank -X- _ O
you -X- _ O
for -X- _ O
your -X- _ O
post! -X- _ O
Unfortunately, -X- _ O
this -X- _ O
was -X- _ O
not -X- _ O
the -X- _ O
issue. -X- _ O
I -X- _ O
have -X- _ O
already -X- _ O
enabled -X- _ O
the -X- _ O
Google -X- _ B-Entity
Places -X- _ I-Entity
API -X- _ I-Entity
for -X- _ O
Android -X- _ O
API -X- _ O
in -X- _ O
my -X- _ O
application.","You -X- _ O
deserve -X- _ O
a -X- _ O
prize! -X- _ O
Thanks, -X- _ O
@YvetteColomb" -X- _ O

"1st -X- _ O
point: -X- _ O
I -X- _ O
disagree. -X- _ O
,entrySet, -X- _ B-Entity
and -X- _ O
,keySet, -X- _ B-Entity
wouldn't -X- _ O
be -X- _ O
hard -X- _ O
to -X- _ O
implement, -X- _ O
would -X- _ O
run -X- _ O
in -X- _ O
,n, -X- _ O
time, -X- _ O
and -X- _ O
have -X- _ O
no -X- _ O
performance -X- _ O
penalty -X- _ O
if -X- _ O
they -X- _ O
were -X- _ O
unused. -X- _ O
2nd -X- _ O
point: -X- _ O
Yep, -X- _ O
I -X- _ O
think -X- _ O
that's -X- _ O
the -X- _ O
real -X- _ O
answer, -X- _ O
but -X- _ O
Omkar -X- _ O
beat -X- _ O
you -X- _ O
to -X- _ O
it. -X- _ O
:-) -X- _ O
3rd -X- _ O
point: -X- _ O
This -X- _ O
doesn't -X- _ O
answer -X- _ O
the -X- _ O
question -X- _ O
,why,. -X- _ O
It -X- _ O
is -X- _ O
indeed -X- _ O
what -X- _ O
prompted -X- _ O
the -X- _ O
question—nonstandard -X- _ O
API -X- _ O
is -X- _ O
a -X- _ O
pain.",Yep! -X- _ O
But -X- _ O
@Omkar -X- _ O
beat -X- _ O
you -X- _ O
to -X- _ O
it. -X- _ O
? -X- _ O
Thanks! -X- _ O

@MichaelScheper -X- _ O
Edited -X- _ O
my -X- _ O
answer -X- _ O
after -X- _ O
some -X- _ O
more -X- _ O
analysis -X- _ O
of -X- _ O
SparseIntArray. -X- _ B-Entity
:),Yep! -X- _ O
But -X- _ O
@Omkar -X- _ O
beat -X- _ O
you -X- _ O
to -X- _ O
it. -X- _ O
? -X- _ O
Thanks! -X- _ O

Yep. -X- _ O
The -X- _ O
question -X- _ O
is -X- _ O
why -X- _ O
they -X- _ O
made -X- _ O
that -X- _ O
choice.,@MichaelScheper -X- _ O
Edited -X- _ O
my -X- _ O
answer -X- _ O
after -X- _ O
some -X- _ O
more -X- _ O
analysis -X- _ O
of -X- _ O
SparseIntArray. -X- _ B-Entity
:) -X- _ O

I -X- _ O
probably -X- _ O
misinterpreted -X- _ O
your -X- _ O
question. -X- _ O
It -X- _ O
is -X- _ O
more -X- _ O
of -X- _ O
interface -X- _ O
and -X- _ O
design -X- _ O
choice -X- _ O
for -X- _ O
SparseIntArray. -X- _ B-Entity
Will -X- _ O
keep -X- _ O
you -X- _ O
posted -X- _ O
once -X- _ O
got -X- _ O
any -X- _ O
clue.,Yep! -X- _ O
But -X- _ O
@Omkar -X- _ O
beat -X- _ O
you -X- _ O
to -X- _ O
it. -X- _ O
? -X- _ O
Thanks! -X- _ O

"Sorry; -X- _ O
I -X- _ O
don't -X- _ O
see -X- _ O
how -X- _ O
this -X- _ O
answers -X- _ O
the -X- _ O
question. -X- _ O
AFAIK, -X- _ O
the -X- _ O
Map -X- _ O
interface -X- _ O
doesn't -X- _ O
define -X- _ O
how -X- _ O
an -X- _ O
implementation -X- _ O
works -X- _ O
under -X- _ O
the -X- _ O
bonnet, -X- _ O
nor -X- _ O
how -X- _ O
efficient -X- _ O
it -X- _ O
is—I -X- _ O
believe -X- _ O
that's -X- _ O
the -X- _ O
whole -X- _ O
point.",@MichaelScheper -X- _ O
Edited -X- _ O
my -X- _ O
answer -X- _ O
after -X- _ O
some -X- _ O
more -X- _ O
analysis -X- _ O
of -X- _ O
SparseIntArray. -X- _ B-Entity
:) -X- _ O

"keep -X- _ O
in -X- _ O
mind -X- _ O
that -X- _ O
all -X- _ O
those -X- _ O
methods -X- _ O
are -X- _ O
mandatory -X- _ O
in -X- _ O
map: -X- _ O
,developer.android.com/reference/java/util/Map.html, -X- _ O
(also, -X- _ O
if -X- _ O
you -X- _ O
call -X- _ O
it -X- _ O
a -X- _ O
map -X- _ O
for -X- _ O
higher -X- _ O
abstraction, -X- _ O
you -X- _ O
can't -X- _ O
use -X- _ O
the -X- _ O
SparseIntArray -X- _ B-Entity
specific -X- _ O
functions. -X- _ O
And -X- _ O
iterating -X- _ O
using -X- _ O
,size, -X- _ O
and -X- _ O
,keyAt, -X- _ B-Entity
is -X- _ O
designed -X- _ O
to -X- _ O
be -X- _ O
more -X- _ O
efficient -X- _ O
that -X- _ O
the -X- _ O
,entrySet, -X- _ B-Entity
from -X- _ O
,Map,, -X- _ O
while -X- _ O
being -X- _ O
a -X- _ O
little -X- _ O
less -X- _ O
convenient)","Sorry; -X- _ O
I -X- _ O
don't -X- _ O
see -X- _ O
how -X- _ O
this -X- _ O
answers -X- _ O
the -X- _ O
question. -X- _ O
AFAIK, -X- _ O
the -X- _ O
Map -X- _ O
interface -X- _ O
doesn't -X- _ O
define -X- _ O
how -X- _ O
an -X- _ O
implementation -X- _ O
works -X- _ O
under -X- _ O
the -X- _ O
bonnet, -X- _ O
nor -X- _ O
how -X- _ O
efficient -X- _ O
it -X- _ O
is—I -X- _ O
believe -X- _ O
that's -X- _ O
the -X- _ O
whole -X- _ O
point." -X- _ O

"I -X- _ O
would -X- _ O
assume -X- _ O
it -X- _ O
is -X- _ O
because -X- _ O
implementing -X- _ O
the -X- _ O
Map -X- _ O
interface -X- _ O
would -X- _ O
result -X- _ O
in -X- _ O
heavy -X- _ O
functions -X- _ O
(boxing -X- _ O
the -X- _ O
keys, -X- _ O
creating -X- _ O
the -X- _ O
sets -X- _ O
of -X- _ O
values -X- _ O
and -X- _ O
of -X- _ O
keys,...) -X- _ O
while -X- _ O
the -X- _ O
functions -X- _ O
define -X- _ O
in -X- _ O
SparseIntArray -X- _ B-Entity
are -X- _ O
designed -X- _ O
for -X- _ O
efficiency. -X- _ O
Having -X- _ O
both -X- _ O
would -X- _ O
be -X- _ O
counter-productive.","Sorry; -X- _ O
I -X- _ O
don't -X- _ O
see -X- _ O
how -X- _ O
this -X- _ O
answers -X- _ O
the -X- _ O
question. -X- _ O
AFAIK, -X- _ O
the -X- _ O
Map -X- _ O
interface -X- _ O
doesn't -X- _ O
define -X- _ O
how -X- _ O
an -X- _ O
implementation -X- _ O
works -X- _ O
under -X- _ O
the -X- _ O
bonnet, -X- _ O
nor -X- _ O
how -X- _ O
efficient -X- _ O
it -X- _ O
is—I -X- _ O
believe -X- _ O
that's -X- _ O
the -X- _ O
whole -X- _ O
point." -X- _ O

"I've -X- _ O
looked -X- _ O
at -X- _ O
android.hardware, -X- _ O
but -X- _ O
it's -X- _ O
even -X- _ O
less -X- _ O
extensible -X- _ O
than -X- _ O
JSR-256, -X- _ B-Entity
it's -X- _ O
limited -X- _ O
to -X- _ O
Android, -X- _ O
and -X- _ O
it -X- _ O
doesn't -X- _ O
allow -X- _ O
me -X- _ O
to -X- _ O
extend -X- _ O
with -X- _ O
my -X- _ O
own -X- _ O
sensors -X- _ O
(aka -X- _ O
being -X- _ O
limited -X- _ O
to -X- _ O
the -X- _ O
handset's -X- _ O
sensors).",Where -X- _ O
was -X- _ O
that -X- _ O
announced? -X- _ O

"Examples -X- _ O
of -X- _ O
sensors -X- _ O
for -X- _ O
temperature, -X- _ O
humidity, -X- _ O
and -X- _ O
location -X- _ O
(GPS) -X- _ O
are -X- _ O
given -X- _ O
on -X- _ O
pages -X- _ O
68-69 -X- _ O
of -X- _ O
version -X- _ O
1.2 -X- _ O
of -X- _ O
the -X- _ O
JSR-256 -X- _ B-Entity
spec.","BTW -X- _ O
if -X- _ O
you -X- _ O
know -X- _ O
DIO, -X- _ O
you -X- _ O
might -X- _ O
take -X- _ O
a -X- _ O
look -X- _ O
at -X- _ O
my -X- _ O
question -X- _ O
about -X- _ O
it: -X- _ O
,stackoverflow.com/questions/42539556/…" -X- _ O

"Yes, -X- _ O
unfortunately -X- _ O
the -X- _ O
JSR-256 -X- _ B-Entity
doesn't -X- _ O
allow -X- _ O
you -X- _ O
to -X- _ O
extend -X- _ O
with -X- _ O
your -X- _ O
own -X- _ O
sensors. -X- _ O
You're -X- _ O
limited -X- _ O
to -X- _ O
your -X- _ O
device' -X- _ O
sensors. -X- _ O
In -X- _ O
my -X- _ O
case, -X- _ O
I -X- _ O
need -X- _ O
to -X- _ O
interface -X- _ O
a -X- _ O
sensor -X- _ O
network -X- _ O
that -X- _ O
isn't -X- _ O
part -X- _ O
of -X- _ O
a -X- _ O
mobile -X- _ O
device, -X- _ O
so -X- _ O
that -X- _ O
isn't -X- _ O
an -X- _ O
option -X- _ O
(apart -X- _ O
from -X- _ O
JSR-256 -X- _ O
being -X- _ O
meant -X- _ O
for -X- _ O
J2ME -X- _ O
which -X- _ O
rules -X- _ O
it -X- _ O
out -X- _ O
to -X- _ O
begin -X- _ O
with).",Where -X- _ O
was -X- _ O
that -X- _ O
announced? -X- _ O

"JSR-256 -X- _ B-Entity
is -X- _ O
intended -X- _ O
for -X- _ O
J2ME, -X- _ O
according -X- _ O
to -X- _ O
this: -X- _ O
,jcp.org/en/jsr/tech?listBy=1&listByType=platform",Where -X- _ O
was -X- _ O
that -X- _ O
announced? -X- _ O

Perhaps -X- _ O
in -X- _ O
JDK8 -X- _ O
it -X- _ O
will -X- _ O
be -X- _ O
added -X- _ O
back -X- _ O
in -X- _ O
as -X- _ O
a -X- _ O
defender -X- _ O
method. -X- _ O
:),"An -X- _ O
alternative -X- _ O
is -X- _ O
to -X- _ O
return -X- _ O
a -X- _ O
File -X- _ O
object -X- _ O
representing -X- _ O
that -X- _ O
path -X- _ O
by -X- _ O
calling -X- _ O
toFile() -X- _ B-Entity
and -X- _ O
then -X- _ O
calling -X- _ O
,its, -X- _ O
exists() -X- _ B-Entity
method." -X- _ O

You -X- _ O
need -X- _ O
to -X- _ O
make -X- _ O
a -X- _ O
request -X- _ O
to -X- _ O
a -X- _ O
secure -X- _ O
https -X- _ B-Entity
API. -X- _ I-Entity
right?,"So -X- _ O
in -X- _ O
that -X- _ O
case -X- _ O
you -X- _ O
need -X- _ O
not -X- _ O
host -X- _ O
a -X- _ O
https -X- _ O
server, -X- _ O
your -X- _ O
java -X- _ O
client -X- _ O
will -X- _ O
make -X- _ O
a -X- _ O
https -X- _ O
connection -X- _ O
request." -X- _ O

"If -X- _ O
you -X- _ O
have -X- _ O
,id,. -X- _ O
What -X- _ O
is -X- _ O
the -X- _ O
problem -X- _ O
of -X- _ O
doing -X- _ O
,saveOrUpdate(),?","Sorry, -X- _ B-Entity
I -X- _ O
misunderstood -X- _ O
your -X- _ O
question. -X- _ O
I -X- _ O
updated -X- _ O
my -X- _ O
answer -X- _ O
to -X- _ O
clarify." -X- _ O

"FYI, -X- _ O
on -X- _ O
May -X- _ O
2015 -X- _ O
WhastAPI -X- _ B-Entity
repo -X- _ O
has -X- _ O
been -X- _ O
""wiped -X- _ O
away"" -X- _ O
due -X- _ O
to -X- _ O
legal -X- _ O
threats -X- _ O
and -X- _ O
it's -X- _ O
not -X- _ O
an -X- _ O
option -X- _ O
anymore.",duplicated -X- _ O
answer -X- _ O

"Well, -X- _ O
you -X- _ O
still -X- _ O
have -X- _ O
to -X- _ O
make -X- _ O
the -X- _ O
internal -X- _ O
abstract -X- _ O
Accessor -X- _ O
public -X- _ O
(thus -X- _ O
a -X- _ O
part -X- _ O
of -X- _ O
API). -X- _ O
Worse, -X- _ O
an -X- _ O
evil -X- _ O
user -X- _ O
can -X- _ O
provide -X- _ O
his/her -X- _ O
own -X- _ O
AccessorImpl, -X- _ B-Entity
thus -X- _ O
forcing -X- _ O
your -X- _ O
internal -X- _ O
package -X- _ O
to -X- _ O
use -X- _ O
his/her -X- _ O
own -X- _ O
API -X- _ O
instead. -X- _ O
This -X- _ O
will -X- _ O
work -X- _ O
until -X- _ O
the -X- _ O
Item -X- _ O
class -X- _ O
gets -X- _ O
initialized -X- _ O
and -X- _ O
fires -X- _ O
the -X- _ O
IllegalStateException.",+1 -X- _ B-Entity
Thanks -X- _ O
for -X- _ O
the -X- _ O
information. -X- _ O
I -X- _ O
am -X- _ O
aware -X- _ O
that -X- _ O
I -X- _ O
can -X- _ O
package -X- _ O
the -X- _ O
problem -X- _ O
away -X- _ O
but -X- _ O
really -X- _ O
I -X- _ O
wish -X- _ O
to -X- _ O
restrict -X- _ O
users -X- _ O
that -X- _ O
have -X- _ O
both -X- _ O
the -X- _ O
api -X- _ O
and -X- _ O
implementation -X- _ O
jars -X- _ O
from -X- _ O
being -X- _ O
able -X- _ O
to -X- _ O
access -X- _ O
non-interface -X- _ O
implementation -X- _ O
methods -X- _ O
in -X- _ O
a -X- _ O
way -X- _ O
not -X- _ O
intended. -X- _ O

I'm -X- _ O
glad -X- _ O
I -X- _ O
could -X- _ O
help. -X- _ O
I -X- _ O
too -X- _ O
needed -X- _ O
a -X- _ O
solution -X- _ O
to -X- _ O
this -X- _ O
seemingly -X- _ O
serious -X- _ O
limitation -X- _ O
of -X- _ O
Java. -X- _ O
This -X- _ O
pattern -X- _ O
should -X- _ O
be -X- _ O
an -X- _ O
ideal -X- _ O
candidate -X- _ O
for -X- _ O
extending -X- _ O
Java -X- _ O
using -X- _ O
Jetbrains -X- _ O
MPS -X- _ O
or -X- _ O
other -X- _ O
model-driven -X- _ O
development -X- _ O
tool.,"Well, -X- _ O
you -X- _ O
still -X- _ O
have -X- _ O
to -X- _ O
make -X- _ O
the -X- _ O
internal -X- _ O
abstract -X- _ O
Accessor -X- _ O
public -X- _ O
(thus -X- _ O
a -X- _ O
part -X- _ O
of -X- _ O
API). -X- _ O
Worse, -X- _ O
an -X- _ O
evil -X- _ O
user -X- _ O
can -X- _ O
provide -X- _ O
his/her -X- _ O
own -X- _ O
AccessorImpl, -X- _ O
thus -X- _ O
forcing -X- _ O
your -X- _ O
internal -X- _ O
package -X- _ O
to -X- _ O
use -X- _ O
his/her -X- _ O
own -X- _ O
API -X- _ O
instead. -X- _ O
This -X- _ O
will -X- _ O
work -X- _ O
until -X- _ O
the -X- _ O
Item -X- _ O
class -X- _ O
gets -X- _ O
initialized -X- _ O
and -X- _ O
fires -X- _ O
the -X- _ O
IllegalStateException." -X- _ B-Entity

"/api/users -X- _ O
which -X- _ O
returns -X- _ O
all -X- _ O
users -X- _ O
with -X- _ O
a -X- _ O
get -X- _ O
request. -X- _ O
I -X- _ O
can -X- _ O
see -X- _ O
the -X- _ O
output -X- _ O
JSON -X- _ B-Entity
in -X- _ O
my -X- _ O
android -X- _ O
chrome -X- _ O
browser. -X- _ O
But -X- _ O
when -X- _ O
I -X- _ O
make -X- _ O
this -X- _ O
call -X- _ O
in -X- _ O
my -X- _ O
android -X- _ O
device -X- _ O
apk -X- _ O
build, -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
get -X- _ O
a -X- _ O
connection.","I -X- _ O
can -X- _ O
access -X- _ O
my -X- _ O
rest -X- _ O
url -X- _ O
no -X- _ O
problem -X- _ O
from -X- _ O
my -X- _ O
tablet -X- _ O
device -X- _ O
browser, -X- _ O
but -X- _ O
when -X- _ O
I -X- _ O
access -X- _ O
the -X- _ O
same -X- _ O
url -X- _ O
from -X- _ O
my -X- _ O
apk -X- _ O
build -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
get -X- _ O
a -X- _ O
connection." -X- _ O

"You -X- _ O
can -X- _ O
access -X- _ O
,localhost:8080, -X- _ O
from -X- _ O
the -X- _ O
,android -X- _ O
browser,? -X- _ O
Probably -X- _ O
not. -X- _ O
,localhost, -X- _ O
means -X- _ O
different -X- _ O
things -X- _ O
on -X- _ O
all -X- _ O
devices.","/api/users -X- _ O
which -X- _ O
returns -X- _ O
all -X- _ O
users -X- _ O
with -X- _ O
a -X- _ O
get -X- _ O
request. -X- _ O
I -X- _ O
can -X- _ O
see -X- _ O
the -X- _ O
output -X- _ O
JSON -X- _ B-Entity
in -X- _ O
my -X- _ O
android -X- _ O
chrome -X- _ O
browser. -X- _ O
But -X- _ O
when -X- _ O
I -X- _ O
make -X- _ O
this -X- _ O
call -X- _ O
in -X- _ O
my -X- _ O
android -X- _ O
device -X- _ O
apk -X- _ O
build, -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
get -X- _ O
a -X- _ O
connection." -X- _ O

"Yes, -X- _ O
I -X- _ O
know. -X- _ O
You -X- _ O
need -X- _ O
to -X- _ O
group -X- _ O
those -X- _ O
items -X- _ O
in -X- _ O
,an -X- _ O
array, -X- _ O
in -X- _ O
the -X- _ O
JSON -X- _ B-Entity
side, -X- _ O
using -X- _ O
the -X- _ O
,[, -X- _ O
and -X- _ O
,], -X- _ O
things -X- _ O
to -X- _ O
identify -X- _ O
its -X- _ O
start -X- _ O
and -X- _ O
end. -X- _ O
Only -X- _ O
then -X- _ O
you -X- _ O
can -X- _ O
collect -X- _ O
them -X- _ O
in -X- _ O
a -X- _ O
,List,. -X- _ O
Check -X- _ O
my -X- _ O
answer -X- _ O
and -X- _ O
the -X- _ O
code -X- _ O
example -X- _ O
in -X- _ O
that -X- _ O
topic -X- _ O
once -X- _ O
again. -X- _ O
,This -X- _ O
tutorial, -X- _ O
may -X- _ O
also -X- _ O
be -X- _ O
useful -X- _ O
I -X- _ O
think.","Hi, -X- _ O
thanks -X- _ O
for -X- _ O
your -X- _ O
answer. -X- _ O
Actually, -X- _ O
I -X- _ O
wasn't -X- _ O
so -X- _ O
sure -X- _ O
how -X- _ O
GSON -X- _ B-Entity
operates -X- _ O
internally -X- _ O
and -X- _ O
consequently -X- _ O
did -X- _ O
not -X- _ O
quite -X- _ O
understand -X- _ O
how -X- _ O
to -X- _ O
use -X- _ O
it. -X- _ O
I -X- _ O
am -X- _ O
now -X- _ O
using -X- _ O
custom -X- _ O
parsing -X- _ O
with -X- _ O
Rhino -X- _ O
instead, -X- _ O
which -X- _ O
is -X- _ O
much -X- _ O
more -X- _ O
handy -X- _ O
in -X- _ O
my -X- _ O
opinion. -X- _ O
Java -X- _ O
does -X- _ O
not -X- _ O
support -X- _ O
nested -X- _ O
data -X- _ O
objects -X- _ O
in -X- _ O
the -X- _ O
same -X- _ O
simple -X- _ O
way -X- _ O
JavaScript -X- _ O
does, -X- _ O
so -X- _ O
there -X- _ O
is -X- _ O
no -X- _ O
real -X- _ O
reason -X- _ O
to -X- _ O
not -X- _ O
use -X- _ O
Rhino -X- _ O
for -X- _ O
that -X- _ O
kind -X- _ O
of -X- _ O
thing." -X- _ O

"You -X- _ O
cannot -X- _ O
have -X- _ O
an -X- _ O
undetermined -X- _ O
amount -X- _ O
of -X- _ O
properties -X- _ O
in -X- _ O
a -X- _ O
java -X- _ O
bean -X- _ O
as -X- _ O
well. -X- _ O
The -X- _ O
topic -X- _ O
which -X- _ O
you -X- _ O
linked -X- _ O
basically -X- _ O
shows -X- _ O
and -X- _ O
answers -X- _ O
the -X- _ O
same: -X- _ O
,use -X- _ O
an -X- _ O
array -X- _ O
property,. -X- _ O
Your -X- _ O
problem -X- _ O
is -X- _ O
just -X- _ O
the -X- _ O
misunderstanding/misconception -X- _ O
of -X- _ O
basic -X- _ O
OO -X- _ O
principles, -X- _ O
not -X- _ O
JSON/Java.","Yes, -X- _ B-Entity
I -X- _ O
know. -X- _ O
You -X- _ O
need -X- _ O
to -X- _ O
group -X- _ O
those -X- _ O
items -X- _ O
in -X- _ O
,an -X- _ O
array, -X- _ O
in -X- _ O
the -X- _ O
JSON -X- _ O
side, -X- _ O
using -X- _ O
the -X- _ O
,[, -X- _ O
and -X- _ O
,], -X- _ O
things -X- _ O
to -X- _ O
identify -X- _ O
its -X- _ O
start -X- _ O
and -X- _ O
end. -X- _ O
Only -X- _ O
then -X- _ O
you -X- _ O
can -X- _ O
collect -X- _ O
them -X- _ O
in -X- _ O
a -X- _ O
,List,. -X- _ O
Check -X- _ O
my -X- _ O
answer -X- _ O
and -X- _ O
the -X- _ O
code -X- _ O
example -X- _ O
in -X- _ O
that -X- _ O
topic -X- _ O
once -X- _ O
again. -X- _ O
,This -X- _ O
tutorial, -X- _ O
may -X- _ O
also -X- _ O
be -X- _ O
useful -X- _ O
I -X- _ O
think." -X- _ O

"That -X- _ O
kinda -X- _ O
beats -X- _ O
the -X- _ O
purpose -X- _ O
of -X- _ O
using -X- _ O
JSON -X- _ O
altogether. -X- _ O
If -X- _ O
I -X- _ O
cannot -X- _ O
mirror -X- _ O
the -X- _ O
object -X- _ O
mapping -X- _ O
style -X- _ O
of -X- _ O
JSON -X- _ B-Entity
in -X- _ O
JAVA, -X- _ O
I -X- _ O
might -X- _ O
aswell -X- _ O
write -X- _ O
my -X- _ O
own -X- _ O
API. -X- _ O
;-) -X- _ O
I'm -X- _ O
basically -X- _ O
trying -X- _ O
to -X- _ O
do -X- _ O
the -X- _ O
same -X- _ O
thing -X- _ O
as -X- _ O
in -X- _ O
this -X- _ O
<a -X- _ O
href="",stackoverflow.com/questions/2710137/…,> -X- _ O
while -X- _ O
somehow -X- _ O
retaining -X- _ O
the -X- _ O
identifier -X- _ O
strings.","Yes, -X- _ O
I -X- _ O
know. -X- _ O
You -X- _ O
need -X- _ O
to -X- _ O
group -X- _ O
those -X- _ O
items -X- _ O
in -X- _ O
,an -X- _ O
array, -X- _ O
in -X- _ O
the -X- _ O
JSON -X- _ B-Entity
side, -X- _ O
using -X- _ O
the -X- _ O
,[, -X- _ O
and -X- _ O
,], -X- _ O
things -X- _ O
to -X- _ O
identify -X- _ O
its -X- _ O
start -X- _ O
and -X- _ O
end. -X- _ O
Only -X- _ O
then -X- _ O
you -X- _ O
can -X- _ O
collect -X- _ O
them -X- _ O
in -X- _ O
a -X- _ O
,List,. -X- _ O
Check -X- _ O
my -X- _ O
answer -X- _ O
and -X- _ O
the -X- _ O
code -X- _ O
example -X- _ O
in -X- _ O
that -X- _ O
topic -X- _ O
once -X- _ O
again. -X- _ O
,This -X- _ O
tutorial, -X- _ O
may -X- _ O
also -X- _ O
be -X- _ O
useful -X- _ O
I -X- _ O
think." -X- _ O

"If -X- _ O
those -X- _ O
identifier -X- _ O
strings -X- _ O
are -X- _ O
tied -X- _ O
to -X- _ O
every -X- _ O
item -X- _ O
(,Node,), -X- _ O
not -X- _ O
to -X- _ O
the -X- _ O
container -X- _ O
(,nodes,), -X- _ O
then -X- _ O
you -X- _ O
need -X- _ O
to -X- _ O
make -X- _ O
it -X- _ O
a -X- _ O
property -X- _ O
of -X- _ O
the -X- _ O
,Node, -X- _ O
instead. -X- _ O
JS -X- _ O
objects -X- _ O
with -X- _ O
an -X- _ O
unknown -X- _ O
amount -X- _ O
of -X- _ O
properties -X- _ O
and -X- _ O
unknown -X- _ O
property -X- _ O
names -X- _ O
are -X- _ O
simply -X- _ O
not -X- _ O
a -X- _ O
good -X- _ O
idea/practice. -X- _ O
You -X- _ O
need -X- _ O
to -X- _ O
put -X- _ O
them -X- _ O
in -X- _ O
an -X- _ O
array -X- _ O
and -X- _ O
give -X- _ O
the -X- _ O
array -X- _ O
a -X- _ O
fixed -X- _ O
name.","You -X- _ O
cannot -X- _ O
have -X- _ O
an -X- _ O
undetermined -X- _ O
amount -X- _ O
of -X- _ O
properties -X- _ O
in -X- _ O
a -X- _ O
java -X- _ O
bean -X- _ O
as -X- _ O
well. -X- _ O
The -X- _ O
topic -X- _ O
which -X- _ O
you -X- _ O
linked -X- _ O
basically -X- _ O
shows -X- _ O
and -X- _ O
answers -X- _ O
the -X- _ O
same: -X- _ O
,use -X- _ O
an -X- _ O
array -X- _ O
property,. -X- _ O
Your -X- _ O
problem -X- _ O
is -X- _ O
just -X- _ O
the -X- _ O
misunderstanding/misconception -X- _ O
of -X- _ O
basic -X- _ O
OO -X- _ O
principles, -X- _ O
not -X- _ O
JSON/Java." -X- _ B-Entity

"To -X- _ O
copy -X- _ O
the -X- _ O
streams, -X- _ O
you -X- _ O
can -X- _ O
also -X- _ O
use -X- _ O
Apache -X- _ O
Commons -X- _ O
IO's -X- _ O
,IOUtils.copyLarge,.",Serious -X- _ B-Entity
difference -X- _ O
here! -X- _ O

"Hello, -X- _ O
I've -X- _ O
read -X- _ O
and -X- _ O
tried -X- _ O
to -X- _ O
implement -X- _ O
the -X- _ O
example -X- _ O
given -X- _ O
here -X- _ O
and -X- _ O
unfortunately -X- _ O
it -X- _ O
doesn't -X- _ O
work. -X- _ O
It -X- _ O
says -X- _ O
also -X- _ O
that -X- _ O
the -X- _ O
only -X- _ O
thing -X- _ O
I -X- _ O
have -X- _ O
to -X- _ O
do -X- _ O
is -X- _ O
to -X- _ O
fullfill -X- _ O
the -X- _ O
blanks -X- _ O
in -X- _ O
the -X- _ O
example -X- _ O
application -X- _ O
but -X- _ O
id -X- _ O
doesn't -X- _ O
seem -X- _ O
to -X- _ O
have -X- _ O
any -X- _ O
""blanks"" -X- _ O
to -X- _ O
fullfill. -X- _ O
The -X- _ O
example -X- _ O
in -X- _ O
command -X- _ O
line -X- _ O
is -X- _ O
in -X- _ O
C, -X- _ O
so -X- _ O
I'm -X- _ O
afraid -X- _ O
it -X- _ O
doesn't -X- _ O
match -X- _ O
for -X- _ O
the -X- _ O
cases -X- _ O
I -X- _ O
need. -X- _ O
I -X- _ O
solved -X- _ O
the -X- _ O
problem -X- _ O
of -X- _ O
the -X- _ O
AbsApiState, -X- _ B-Entity
but -X- _ O
I -X- _ O
get -X- _ O
an -X- _ O
TimeoutException. -X- _ O
Again, -X- _ O
it -X- _ O
seems -X- _ O
that -X- _ O
one -X- _ O
of -X- _ O
these -X- _ O
timeouts -X- _ O
is -X- _ O
caused -X- _ O
by -X- _ O
Linux -X- _ O
(java -X- _ O
must -X- _ O
use -X- _ O
/dev/urandom -X- _ O
instead -X- _ O
of -X- _ O
/dev/random), -X- _ O
but -X- _ O
after -X- _ O
that -X- _ O
I -X- _ O
get -X- _ O
another -X- _ O
Timeout. -X- _ O
Sorry -X- _ O
but -X- _ O
this -X- _ O
is -X- _ O
too -X- _ O
much -X- _ O
for -X- _ O
me","While -X- _ O
this -X- _ O
link -X- _ O
may -X- _ O
answer -X- _ O
the -X- _ O
question, -X- _ O
it -X- _ O
is -X- _ O
better -X- _ O
to -X- _ O
include -X- _ O
the -X- _ O
essential -X- _ O
parts -X- _ O
of -X- _ O
the -X- _ O
answer -X- _ O
here -X- _ O
and -X- _ O
provide -X- _ O
the -X- _ O
link -X- _ O
for -X- _ O
reference. -X- _ O
Link-only -X- _ O
answers -X- _ O
can -X- _ O
become -X- _ O
invalid -X- _ O
if -X- _ O
the -X- _ O
linked -X- _ O
page -X- _ O
changes" -X- _ O

"Hi, -X- _ O
thanks -X- _ O
for -X- _ O
your -X- _ O
answer! -X- _ O
I -X- _ O
intended -X- _ O
to -X- _ O
maintain -X- _ O
the -X- _ O
identifier -X- _ O
strings -X- _ O
(e.g. -X- _ O
,Object1,), -X- _ O
to -X- _ O
be -X- _ O
able -X- _ O
to -X- _ O
properly -X- _ O
parse -X- _ O
the -X- _ O
Container -X- _ O
class -X- _ O
for -X- _ O
its -X- _ O
content, -X- _ O
just -X- _ O
like -X- _ O
I -X- _ O
would -X- _ O
in -X- _ O
JavaScript. -X- _ O
Do -X- _ O
you -X- _ O
know -X- _ O
how -X- _ O
to -X- _ O
go -X- _ O
about -X- _ O
that?","Yes, -X- _ O
I -X- _ O
know. -X- _ O
You -X- _ O
need -X- _ O
to -X- _ O
group -X- _ O
those -X- _ O
items -X- _ O
in -X- _ O
,an -X- _ O
array, -X- _ O
in -X- _ O
the -X- _ O
JSON -X- _ B-Entity
side, -X- _ O
using -X- _ O
the -X- _ O
,[, -X- _ O
and -X- _ O
,], -X- _ O
things -X- _ O
to -X- _ O
identify -X- _ O
its -X- _ O
start -X- _ O
and -X- _ O
end. -X- _ O
Only -X- _ O
then -X- _ O
you -X- _ O
can -X- _ O
collect -X- _ O
them -X- _ O
in -X- _ O
a -X- _ O
,List,. -X- _ O
Check -X- _ O
my -X- _ O
answer -X- _ O
and -X- _ O
the -X- _ O
code -X- _ O
example -X- _ O
in -X- _ O
that -X- _ O
topic -X- _ O
once -X- _ O
again. -X- _ O
,This -X- _ O
tutorial, -X- _ O
may -X- _ O
also -X- _ O
be -X- _ O
useful -X- _ O
I -X- _ O
think." -X- _ O

"The -X- _ O
,MyApiStorage, -X- _ B-Entity
bit -X- _ O
is -X- _ O
the -X- _ O
complicated -X- _ O
part. -X- _ O
You'll -X- _ O
need -X- _ O
to -X- _ O
make -X- _ O
a -X- _ O
class -X- _ O
that -X- _ O
implements -X- _ O
the -X- _ O
,org.telegram.api.engine.storage.AbsApiState, -X- _ B-Entity
interface, -X- _ O
and -X- _ O
use -X- _ O
that -X- _ O
as -X- _ O
the -X- _ O
first -X- _ O
argument -X- _ O
to -X- _ O
the -X- _ O
constructor. -X- _ O
Your -X- _ O
IDE -X- _ O
should -X- _ O
be -X- _ O
able -X- _ O
to -X- _ O
help -X- _ O
build -X- _ O
a -X- _ O
skeleton -X- _ O
class -X- _ O
to -X- _ O
get -X- _ O
you -X- _ O
started...","While -X- _ O
this -X- _ O
link -X- _ O
may -X- _ O
answer -X- _ O
the -X- _ O
question, -X- _ O
it -X- _ O
is -X- _ O
better -X- _ O
to -X- _ O
include -X- _ O
the -X- _ O
essential -X- _ O
parts -X- _ O
of -X- _ O
the -X- _ O
answer -X- _ O
here -X- _ O
and -X- _ O
provide -X- _ O
the -X- _ O
link -X- _ O
for -X- _ O
reference. -X- _ O
Link-only -X- _ O
answers -X- _ O
can -X- _ O
become -X- _ O
invalid -X- _ O
if -X- _ O
the -X- _ O
linked -X- _ O
page -X- _ O
changes" -X- _ O

"Furthermore, -X- _ O
I -X- _ O
am -X- _ O
,unable -X- _ O
to -X- _ O
build -X- _ O
the -X- _ O
libraries, -X- _ O
with -X- _ O
gradle. -X- _ O
I -X- _ O
downloaded -X- _ O
the -X- _ O
resources -X- _ O
from -X- _ O
GitHub -X- _ O
and -X- _ O
renamed -X- _ O
the -X- _ O
folders -X- _ O
as -X- _ O
told -X- _ O
in -X- _ O
the -X- _ O
readme, -X- _ O
but -X- _ O
,gradle -X- _ O
always -X- _ O
fails, -X- _ O
with -X- _ O
an -X- _ O
'* -X- _ O
What -X- _ O
went -X- _ O
wrong: -X- _ O
Could -X- _ O
not -X- _ O
determine -X- _ O
the -X- _ O
dependencies -X- _ O
of -X- _ O
task -X- _ O
':test'. -X- _ O
> -X- _ O
Configuration -X- _ O
with -X- _ O
name -X- _ O
'default' -X- _ O
not -X- _ O
found.' -X- _ O
I -X- _ O
don't -X- _ O
know -X- _ O
how -X- _ O
to -X- _ O
fix -X- _ O
this, -X- _ O
can -X- _ O
you -X- _ O
help? -X- _ O
Right -X- _ O
now -X- _ O
I -X- _ O
have -X- _ O
copied -X- _ O
the -X- _ O
raw -X- _ O
resource -X- _ O
files -X- _ O
into -X- _ O
my -X- _ O
eclipse -X- _ O
project, -X- _ O
but -X- _ O
there -X- _ O
must -X- _ O
be -X- _ O
a -X- _ O
way -X- _ O
to -X- _ O
fix -X- _ O
that -X- _ O
gradle -X- _ O
problem. -X- _ O
I -X- _ O
would -X- _ O
appreciate -X- _ O
any -X- _ O
answers, -X- _ O
Thanks -X- _ O
in -X- _ O
advance, -X- _ O
Lukas","The -X- _ O
,MyApiStorage, -X- _ B-Entity
bit -X- _ O
is -X- _ O
the -X- _ O
complicated -X- _ O
part. -X- _ O
You'll -X- _ O
need -X- _ O
to -X- _ O
make -X- _ O
a -X- _ O
class -X- _ O
that -X- _ O
implements -X- _ O
the -X- _ O
,org.telegram.api.engine.storage.AbsApiState, -X- _ B-Entity
interface, -X- _ O
and -X- _ O
use -X- _ O
that -X- _ O
as -X- _ O
the -X- _ O
first -X- _ O
argument -X- _ O
to -X- _ O
the -X- _ O
constructor. -X- _ O
Your -X- _ O
IDE -X- _ O
should -X- _ O
be -X- _ O
able -X- _ O
to -X- _ O
help -X- _ O
build -X- _ O
a -X- _ O
skeleton -X- _ O
class -X- _ O
to -X- _ O
get -X- _ O
you -X- _ O
started..." -X- _ O

"Hey, -X- _ O
sorry -X- _ O
that -X- _ O
it's -X- _ O
been -X- _ O
a -X- _ O
while -X- _ O
since -X- _ O
my -X- _ O
last -X- _ O
reply, -X- _ O
I -X- _ O
gave -X- _ O
up -X- _ O
working -X- _ O
on -X- _ O
this -X- _ O
project -X- _ O
until -X- _ O
I -X- _ O
saw -X- _ O
that -X- _ O
someone -X- _ O
has -X- _ O
answered -X- _ O
my -X- _ O
old -X- _ O
thread. -X- _ O
I -X- _ O
think, -X- _ O
I -X- _ O
understood -X- _ O
the -X- _ O
most -X- _ O
of -X- _ O
how -X- _ O
to -X- _ O
get -X- _ O
started -X- _ O
with -X- _ O
this -X- _ O
project, -X- _ O
but -X- _ O
now -X- _ O
I'm -X- _ O
stuck -X- _ O
at -X- _ O
the -X- _ O
,""apiStorage"",-point. -X- _ B-Entity
In -X- _ O
the -X- _ O
readme.md -X- _ O
of -X- _ O
ex3ndr's-gitHub-page -X- _ O
it -X- _ O
says, -X- _ O
the -X- _ O
""Telegram-Api""-Object -X- _ B-Entity
requires -X- _ O
an -X- _ O
""ApiStorage""-object, -X- _ O
created -X- _ O
by -X- _ O
,""new -X- _ O
MyApiStorage"",. -X- _ B-Entity
But -X- _ O
,I -X- _ O
can't -X- _ O
find -X- _ O
that -X- _ O
""MyApiStorage""-class,, -X- _ O
so -X- _ O
what -X- _ O
should -X- _ O
I -X- _ O
put -X- _ O
there?","hello -X- _ O
grkvlt! -X- _ O
i -X- _ O
have -X- _ O
been -X- _ O
able -X- _ O
to -X- _ O
figure -X- _ O
this -X- _ O
out -X- _ O
but -X- _ O
i'm -X- _ O
stuck -X- _ O
here -X- _ O
on -X- _ O
how -X- _ O
to -X- _ O
send -X- _ O
and -X- _ O
receive -X- _ O
messages. -X- _ O
please -X- _ O
advise -X- _ O
how -X- _ O
to -X- _ O
proceed. -X- _ O
LukeLR, -X- _ O
check -X- _ O
the -X- _ O
telegram-bot -X- _ O
sample -X- _ O
app! -X- _ O
it -X- _ O
resolves -X- _ O
some -X- _ O
of -X- _ O
these -X- _ O
issues -X- _ O
of -X- _ O
urs!" -X- _ O

"There's -X- _ O
an -X- _ O
example -X- _ O
here -X- _ O
,stackoverflow.com/a/30798785/3975649, -X- _ O
using -X- _ O
JitPack","The -X- _ O
,guide, -X- _ O
says -X- _ O
users -X- _ O
of -X- _ O
the -X- _ O
repository -X- _ O
will -X- _ O
also -X- _ O
need -X- _ O
to -X- _ O
add -X- _ O
,jcenter(), -X- _ B-Entity
to -X- _ O
the -X- _ O
,repositories, -X- _ O
section -X- _ O
of -X- _ O
their -X- _ O
build.gradle." -X- _ O

"@LawrenceDol -X- _ O
your -X- _ O
definition -X- _ O
is -X- _ O
not -X- _ O
the -X- _ O
only -X- _ O
one. -X- _ O
For -X- _ O
example, -X- _ O
check -X- _ O
out -X- _ O
javadoc -X- _ O
for -X- _ O
,Deque.peekLast, -X- _ B-Entity
,the -X- _ O
tail -X- _ O
of -X- _ O
this -X- _ O
deque, -X- _ O
or -X- _ O
null -X- _ O
if -X- _ O
this -X- _ O
deque -X- _ O
is -X- _ O
empty,. -X- _ O
Documents -X- _ O
for -X- _ O
Java -X- _ O
collections -X- _ O
define -X- _ O
tail -X- _ O
as -X- _ O
the -X- _ O
last -X- _ O
element. -X- _ O
Original -X- _ O
question -X- _ O
also -X- _ O
uses -X- _ O
thi","@Sigmax -X- _ O
This -X- _ O
answer -X- _ O
answers -X- _ O
the -X- _ O
question -X- _ O
that -X- _ O
was -X- _ O
actually -X- _ O
asked, -X- _ O
using -X- _ O
the -X- _ O
same -X- _ O
definitions -X- _ O
that -X- _ O
the -X- _ O
OP -X- _ O
used. -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
see -X- _ O
the -X- _ O
point -X- _ O
of -X- _ O
stating -X- _ O
that -X- _ O
he -X- _ O
asked -X- _ O
the -X- _ O
wrong -X- _ O
question, -X- _ O
or -X- _ O
of -X- _ O
criticizing -X- _ O
answers -X- _ O
that -X- _ O
answer -X- _ O
it." -X- _ O

"@LawrenceDol -X- _ O
- -X- _ O
seems -X- _ O
like -X- _ O
your -X- _ O
issue -X- _ O
is -X- _ O
with -X- _ O
the -X- _ O
question, -X- _ O
not -X- _ O
this -X- _ O
answer, -X- _ O
since -X- _ O
the -X- _ O
answer -X- _ O
addresses -X- _ O
the -X- _ O
question -X- _ O
as -X- _ O
asked. -X- _ O
your -X- _ O
interpretation -X- _ O
seems -X- _ O
to -X- _ O
be -X- _ O
one -X- _ O
of -X- _ O
the -X- _ O
two -X- _ O
valid -X- _ O
interpretations -X- _ O
according -X- _ O
to -X- _ O
wikipedia: -X- _ O
""The -X- _ O
'tail' -X- _ O
of -X- _ O
a -X- _ O
list -X- _ O
may -X- _ O
refer -X- _ O
eit","@LawrenceDol -X- _ O
your -X- _ O
definition -X- _ O
is -X- _ O
not -X- _ O
the -X- _ O
only -X- _ O
one. -X- _ O
For -X- _ O
example, -X- _ O
check -X- _ O
out -X- _ O
javadoc -X- _ O
for -X- _ O
,Deque.peekLast, -X- _ B-Entity
,the -X- _ O
tail -X- _ O
of -X- _ O
this -X- _ O
deque, -X- _ O
or -X- _ O
null -X- _ O
if -X- _ O
this -X- _ O
deque -X- _ O
is -X- _ O
empty,. -X- _ O
Documents -X- _ O
for -X- _ O
Java -X- _ O
collections -X- _ O
define -X- _ O
tail -X- _ O
as -X- _ O
the -X- _ O
last -X- _ O
element. -X- _ O
Original -X- _ O
question -X- _ O
also -X- _ O
uses -X- _ O
thi" -X- _ O

"This -X- _ O
answer -X- _ O
copies -X- _ O
the -X- _ O
mistake -X- _ O
in -X- _ O
the -X- _ O
question, -X- _ O
which -X- _ O
gives -X- _ O
an -X- _ O
incorrect -X- _ O
definition -X- _ O
of -X- _ O
tail(). -X- _ B-Entity
Tail -X- _ O
means -X- _ O
the -X- _ O
list -X- _ O
sans -X- _ O
the -X- _ O
head, -X- _ O
not -X- _ O
the -X- _ O
last -X- _ O
element -X- _ O
of -X- _ O
the -X- _ O
list.","@LawrenceDol -X- _ O
- -X- _ O
seems -X- _ O
like -X- _ O
your -X- _ O
issue -X- _ O
is -X- _ O
with -X- _ O
the -X- _ O
question, -X- _ O
not -X- _ O
this -X- _ O
answer, -X- _ O
since -X- _ O
the -X- _ O
answer -X- _ O
addresses -X- _ O
the -X- _ O
question -X- _ O
as -X- _ O
asked. -X- _ O
your -X- _ O
interpretation -X- _ O
seems -X- _ O
to -X- _ O
be -X- _ O
one -X- _ O
of -X- _ O
the -X- _ O
two -X- _ O
valid -X- _ O
interpretations -X- _ O
according -X- _ O
to -X- _ O
wikipedia: -X- _ O
""The -X- _ O
'tail' -X- _ O
of -X- _ O
a -X- _ O
list -X- _ O
may -X- _ O
refer -X- _ O
eit" -X- _ O

"The -X- _ O
question -X- _ O
gets -X- _ O
the -X- _ O
definition -X- _ O
of -X- _ O
tail() -X- _ B-Entity
wrong, -X- _ O
and -X- _ O
the -X- _ O
answers -X- _ O
reproduce -X- _ O
that -X- _ O
mistake.","This -X- _ O
answer -X- _ O
copies -X- _ O
the -X- _ O
mistake -X- _ O
in -X- _ O
the -X- _ O
question, -X- _ O
which -X- _ O
gives -X- _ O
an -X- _ O
incorrect -X- _ O
definition -X- _ O
of -X- _ O
tail(). -X- _ O
Tail -X- _ O
means -X- _ O
the -X- _ O
list -X- _ O
sans -X- _ O
the -X- _ O
head, -X- _ O
not -X- _ O
the -X- _ O
last -X- _ O
element -X- _ O
of -X- _ O
the -X- _ O
list." -X- _ O

"""Get -X- _ O
last"" -X- _ O
isn't -X- _ O
the -X- _ O
same -X- _ O
as -X- _ O
""tail"".","@LawrenceDol -X- _ O
your -X- _ O
definition -X- _ O
is -X- _ O
not -X- _ O
the -X- _ O
only -X- _ O
one. -X- _ O
For -X- _ O
example, -X- _ O
check -X- _ O
out -X- _ O
javadoc -X- _ O
for -X- _ O
,Deque.peekLast, -X- _ B-Entity
,the -X- _ O
tail -X- _ O
of -X- _ O
this -X- _ O
deque, -X- _ O
or -X- _ O
null -X- _ O
if -X- _ O
this -X- _ O
deque -X- _ O
is -X- _ O
empty,. -X- _ O
Documents -X- _ O
for -X- _ O
Java -X- _ O
collections -X- _ O
define -X- _ O
tail -X- _ O
as -X- _ O
the -X- _ O
last -X- _ O
element. -X- _ O
Original -X- _ O
question -X- _ O
also -X- _ O
uses -X- _ O
thi" -X- _ O

This -X- _ O
sounds -X- _ O
like -X- _ O
the -X- _ O
argument -X- _ O
Oracle -X- _ O
used -X- _ O
for -X- _ O
not -X- _ O
having -X- _ O
booleans -X- _ O
in -X- _ O
their -X- _ O
database.,"This -X- _ O
answer -X- _ O
copies -X- _ O
the -X- _ O
mistake -X- _ O
in -X- _ O
the -X- _ O
question, -X- _ O
which -X- _ O
gives -X- _ O
an -X- _ O
incorrect -X- _ O
definition -X- _ O
of -X- _ O
tail(). -X- _ B-Entity
Tail -X- _ O
means -X- _ O
the -X- _ O
list -X- _ O
sans -X- _ O
the -X- _ O
head, -X- _ O
not -X- _ O
the -X- _ O
last -X- _ O
element -X- _ O
of -X- _ O
the -X- _ O
list." -X- _ O

"@averasko, -X- _ O
I -X- _ O
don't -X- _ O
think -X- _ O
there -X- _ O
is -X- _ O
a -X- _ O
valid -X- _ O
way -X- _ O
to -X- _ O
define -X- _ O
head() -X- _ B-Entity
/ -X- _ O
tail() -X- _ B-Entity
on -X- _ O
an -X- _ O
empty -X- _ O
list","@LawrenceDol -X- _ O
- -X- _ O
seems -X- _ O
like -X- _ O
your -X- _ O
issue -X- _ O
is -X- _ O
with -X- _ O
the -X- _ O
question, -X- _ O
not -X- _ O
this -X- _ O
answer, -X- _ O
since -X- _ O
the -X- _ O
answer -X- _ O
addresses -X- _ O
the -X- _ O
question -X- _ O
as -X- _ O
asked. -X- _ O
your -X- _ O
interpretation -X- _ O
seems -X- _ O
to -X- _ O
be -X- _ O
one -X- _ O
of -X- _ O
the -X- _ O
two -X- _ O
valid -X- _ O
interpretations -X- _ O
according -X- _ O
to -X- _ O
wikipedia: -X- _ O
""The -X- _ O
'tail' -X- _ O
of -X- _ O
a -X- _ O
list -X- _ O
may -X- _ O
refer -X- _ O
eit" -X- _ O

"Finally, -X- _ O
someone -X- _ O
knows -X- _ O
what -X- _ O
,tail(), -X- _ B-Entity
is -X- _ O
supposed -X- _ O
to -X- _ O
be.",@LawrenceDol -X- _ O
- -X- _ O
please -X- _ O
remove -X- _ O
your -X- _ O
misguided -X- _ O
downvote. -X- _ O

"You -X- _ O
can -X- _ O
do -X- _ O
that -X- _ O
too. -X- _ O
This -X- _ O
is -X- _ O
probably -X- _ O
in -X- _ O
line -X- _ O
with -X- _ O
the -X- _ O
common -X- _ O
meaning -X- _ O
of -X- _ O
,head, -X- _ O
and -X- _ O
,tail","Finally, -X- _ O
someone -X- _ O
knows -X- _ O
what -X- _ O
,tail(), -X- _ B-Entity
is -X- _ O
supposed -X- _ O
to -X- _ O
be." -X- _ O

"Shouldn't -X- _ O
""head"" -X- _ O
return -X- _ O
an -X- _ O
element -X- _ O
rather -X- _ O
than -X- _ O
a -X- _ O
sublist? -X- _ O
I.e. -X- _ O
,public -X- _ O
<T> -X- _ O
T -X- _ O
head(List<T> -X- _ O
list) -X- _ O
{ -X- _ O
return -X- _ O
list.get(0); -X- _ O
}","@averasko, -X- _ O
I -X- _ O
don't -X- _ O
think -X- _ O
there -X- _ O
is -X- _ O
a -X- _ O
valid -X- _ O
way -X- _ O
to -X- _ O
define -X- _ O
head() -X- _ B-Entity
/ -X- _ O
tail() -X- _ B-Entity
on -X- _ O
an -X- _ O
empty -X- _ O
list" -X- _ O

"As -X- _ O
explained -X- _ O
by -X- _ O
others -X- _ O
,head(), -X- _ B-Entity
and -X- _ O
,tail(), -X- _ B-Entity
can -X- _ O
be -X- _ O
implemented -X- _ O
trivially. -X- _ O
But -X- _ O
I -X- _ O
want -X- _ O
to -X- _ O
caution -X- _ O
you -X- _ O
against -X- _ O
the -X- _ O
,return -X- _ O
null, -X- _ O
part -X- _ O
-- -X- _ O
don't -X- _ O
do -X- _ O
it -X- _ O
unless -X- _ O
you -X- _ O
have -X- _ O
very -X- _ O
good -X- _ O
reason.",@LawrenceDol -X- _ O
- -X- _ O
please -X- _ O
remove -X- _ O
your -X- _ O
misguided -X- _ O
downvote. -X- _ O

"There -X- _ O
is -X- _ O
also -X- _ O
,getFirst(), -X- _ B-Entity
and -X- _ O
,getLast(), -X- _ B-Entity
in -X- _ O
the -X- _ O
,Deque, -X- _ O
interface","Shouldn't -X- _ O
""head"" -X- _ O
return -X- _ O
an -X- _ O
element -X- _ O
rather -X- _ O
than -X- _ O
a -X- _ O
sublist? -X- _ O
I.e. -X- _ O
,public -X- _ O
<T> -X- _ O
T -X- _ O
head(List<T> -X- _ O
list) -X- _ O
{ -X- _ O
return -X- _ O
list.get(0); -X- _ O
}" -X- _ O

You -X- _ O
need -X- _ O
to -X- _ O
set -X- _ O
your -X- _ O
authentication -X- _ O
keys -X- _ O
-- -X- _ O
fill -X- _ O
in -X- _ O
the -X- _ O
values -X- _ O
in -X- _ O
ConfigurationBuilder,"You'll -X- _ B-Entity
only -X- _ O
need -X- _ O
the -X- _ O
consumer -X- _ O
keys -X- _ O
for -X- _ O
this, -X- _ O
not -X- _ O
the -X- _ O
access -X- _ O
tokens. -X- _ O
little -X- _ O
detail." -X- _ O

"You -X- _ O
shouldn't -X- _ O
have -X- _ O
to -X- _ O
authenticate -X- _ O
to -X- _ O
do -X- _ O
this, -X- _ O
are -X- _ O
you -X- _ O
not -X- _ O
able -X- _ O
to -X- _ O
use -X- _ O
the -X- _ O
code -X- _ O
above -X- _ O
to -X- _ O
get -X- _ O
the -X- _ O
public -X- _ O
timeline -X- _ O
of -X- _ O
google -X- _ O
or -X- _ O
your -X- _ O
own -X- _ O
page? -X- _ O
What -X- _ O
are -X- _ O
you -X- _ O
using -X- _ O
for -X- _ O
paging? -X- _ O
Could -X- _ O
you -X- _ O
try -X- _ O
with -X- _ O
just -X- _ O
""username"" -X- _ O
as -X- _ O
the -X- _ O
only -X- _ O
parameter -X- _ O
to -X- _ O
getUserTimeline()",@viren -X- _ B-Entity
did -X- _ O
you -X- _ O
set -X- _ O
your -X- _ O
authentication -X- _ O
keys? -X- _ O

"Tyler, -X- _ O
Thanks -X- _ O
for -X- _ O
the -X- _ O
response! -X- _ O
However, -X- _ O
when -X- _ O
I -X- _ O
run -X- _ O
the -X- _ O
same -X- _ O
code -X- _ O
as -X- _ O
said -X- _ O
above -X- _ O
I -X- _ O
get -X- _ O
this -X- _ O
error -X- _ O
<code> -X- _ O
""[Thu -X- _ O
Jun -X- _ O
03 -X- _ O
01:29:51 -X- _ O
IST -X- _ O
2010]Using -X- _ O
class -X- _ O
twitter4j.internal.logging.StdOutLoggerFactory -X- _ B-Entity
as -X- _ O
logging -X- _ O
factory. -X- _ O
[Thu -X- _ O
Jun -X- _ O
03 -X- _ O
01:29:51 -X- _ O
IST -X- _ O
2010]Use -X- _ O
twitter4j.internal.http.HttpClientImpl -X- _ B-Entity
as -X- _ O
HttpClient -X- _ O
implementation. -X- _ O
Failed:Connection -X- _ O
refused: -X- _ O
connect"" -X- _ O
</code> -X- _ O
I -X- _ O
am -X- _ O
able -X- _ O
to -X- _ O
get -X- _ O
the -X- _ O
public -X- _ O
timeline -X- _ O
using -X- _ O
the -X- _ O
getPublicTimeLine() -X- _ O
function.",@viren -X- _ O
did -X- _ O
you -X- _ O
set -X- _ O
your -X- _ O
authentication -X- _ O
keys? -X- _ O

"so -X- _ O
how -X- _ O
come -X- _ O
it -X- _ O
works -X- _ O
even -X- _ O
if -X- _ O
I -X- _ O
remove -X- _ O
this -X- _ O
line? -X- _ O
,.setData(CalendarContract.Events.CONTENT_URI);, -X- _ B-Entity
?",` -X- _ O
So -X- _ O
it's -X- _ O
waiting -X- _ O
for -X- _ O
something -X- _ O
to -X- _ O
be -X- _ O
inserted.` -X- _ O
who -X- _ O
is -X- _ O
inserting -X- _ O
anything? -X- _ O

"Have -X- _ O
you -X- _ O
looked -X- _ O
into -X- _ O
,CalendarContract, -X- _ B-Entity
to -X- _ O
get -X- _ O
a -X- _ O
better -X- _ O
idea?","I -X- _ O
really -X- _ O
can -X- _ O
say -X- _ O
its -X- _ O
a -X- _ O
very -X- _ O
bad -X- _ O
naming. -X- _ O
I -X- _ O
don't -X- _ O
why -X- _ O
can't -X- _ O
they -X- _ O
just -X- _ O
name -X- _ O
it -X- _ O
like -X- _ O
,setUri,. -X- _ O
And -X- _ O
for -X- _ O
the -X- _ O
setExtras -X- _ O
just -X- _ O
name -X- _ O
it -X- _ O
like, -X- _ O
,setData, -X- _ O
instead? -X- _ O
I -X- _ O
don't -X- _ O
know, -X- _ O
I -X- _ O
still -X- _ O
don't -X- _ O
get -X- _ O
the -X- _ O
entire -X- _ O
picture. -X- _ O
I -X- _ O
am -X- _ O
just -X- _ O
hoping -X- _ O
the -X- _ O
name -X- _ O
would -X- _ O
communicate -X- _ O
better." -X- _ O

"Thanks -X- _ O
for -X- _ O
that -X- _ O
link -X- _ O
- -X- _ O
I'd -X- _ O
actually -X- _ O
come -X- _ O
across -X- _ O
that -X- _ O
answer -X- _ O
when -X- _ O
searching -X- _ O
around -X- _ O
earlier, -X- _ O
it's -X- _ O
good -X- _ O
to -X- _ O
solve -X- _ O
the -X- _ O
installer -X- _ O
problem! -X- _ O
I -X- _ O
couldn't -X- _ O
get -X- _ O
VLCJ -X- _ O
to -X- _ O
work -X- _ O
reliably -X- _ O
at -X- _ O
all. -X- _ O
It -X- _ O
kept -X- _ O
crashing -X- _ O
before -X- _ O
doing -X- _ O
anything -X- _ O
initially, -X- _ O
and -X- _ O
then -X- _ O
when -X- _ O
I -X- _ O
did -X- _ O
manage -X- _ O
to -X- _ O
get -X- _ O
it -X- _ O
to -X- _ O
work -X- _ O
it -X- _ O
kept -X- _ O
crashing -X- _ O
at -X- _ O
seemingly -X- _ O
random -X- _ O
intervals. -X- _ O
It's -X- _ O
a -X- _ O
shame, -X- _ O
because -X- _ O
if -X- _ O
it -X- _ O
""just -X- _ O
worked"" -X- _ O
it'd -X- _ O
be -X- _ O
exactly -X- _ O
what -X- _ O
I -X- _ O
needed!","As -X- _ O
per -X- _ O
some -X- _ O
of -X- _ O
the -X- _ O
other -X- _ O
comments, -X- _ O
I'd -X- _ O
be -X- _ O
weary -X- _ O
of -X- _ O
using -X- _ O
anything -X- _ O
based -X- _ O
on -X- _ O
Xuggle -X- _ B-Entity
as -X- _ O
it's -X- _ O
been -X- _ O
inactive -X- _ O
for -X- _ O
a -X- _ O
number -X- _ O
of -X- _ O
years -X- _ O
now. -X- _ O
Besides, -X- _ O
it's -X- _ O
a -X- _ O
rather -X- _ O
low -X- _ O
level -X- _ O
libary -X- _ O
and -X- _ O
is -X- _ O
much -X- _ O
more -X- _ O
suited -X- _ O
to -X- _ O
processing -X- _ O
of -X- _ O
individual -X- _ O
frames -X- _ O
rather -X- _ O
than -X- _ O
actual -X- _ O
video -X- _ O
playback." -X- _ O

"gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!","As -X- _ O
per -X- _ O
some -X- _ O
of -X- _ O
the -X- _ O
other -X- _ O
comments, -X- _ O
I'd -X- _ O
be -X- _ O
weary -X- _ O
of -X- _ O
using -X- _ O
anything -X- _ O
based -X- _ O
on -X- _ O
Xuggle -X- _ B-Entity
as -X- _ O
it's -X- _ O
been -X- _ O
inactive -X- _ O
for -X- _ O
a -X- _ O
number -X- _ O
of -X- _ O
years -X- _ O
now. -X- _ O
Besides, -X- _ O
it's -X- _ O
a -X- _ O
rather -X- _ O
low -X- _ O
level -X- _ O
libary -X- _ O
and -X- _ O
is -X- _ O
much -X- _ O
more -X- _ O
suited -X- _ O
to -X- _ O
processing -X- _ O
of -X- _ O
individual -X- _ O
frames -X- _ O
rather -X- _ O
than -X- _ O
actual -X- _ O
video -X- _ O
playback." -X- _ O

"FWIW -X- _ O
if -X- _ O
others -X- _ O
are -X- _ O
looking -X- _ O
at -X- _ O
this, -X- _ O
Xuggle -X- _ B-Entity
has -X- _ O
now -X- _ O
been -X- _ O
inactive -X- _ O
for -X- _ O
a -X- _ O
number -X- _ O
of -X- _ O
years -X- _ O
(,xuggle.com/xuggler/status,).","Thanks -X- _ O
for -X- _ O
that -X- _ O
link -X- _ O
- -X- _ O
I'd -X- _ O
actually -X- _ O
come -X- _ O
across -X- _ O
that -X- _ O
answer -X- _ O
when -X- _ O
searching -X- _ O
around -X- _ O
earlier, -X- _ O
it's -X- _ O
good -X- _ O
to -X- _ O
solve -X- _ O
the -X- _ O
installer -X- _ O
problem! -X- _ O
I -X- _ O
couldn't -X- _ O
get -X- _ O
VLCJ -X- _ O
to -X- _ O
work -X- _ O
reliably -X- _ O
at -X- _ O
all. -X- _ O
It -X- _ O
kept -X- _ O
crashing -X- _ O
before -X- _ O
doing -X- _ O
anything -X- _ O
initially, -X- _ O
and -X- _ O
then -X- _ O
when -X- _ O
I -X- _ O
did -X- _ O
manage -X- _ O
to -X- _ O
get -X- _ O
it -X- _ O
to -X- _ O
work -X- _ O
it -X- _ O
kept -X- _ O
crashing -X- _ O
at -X- _ O
seemingly -X- _ O
random -X- _ O
intervals. -X- _ O
It's -X- _ O
a -X- _ O
shame, -X- _ O
because -X- _ O
if -X- _ O
it -X- _ O
""just -X- _ O
worked"" -X- _ O
it'd -X- _ O
be -X- _ O
exactly -X- _ O
what -X- _ O
I -X- _ O
needed!" -X- _ O

"Xuggler -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
I'm -X- _ O
currently -X- _ O
using -X- _ O
it -X- _ O
with -X- _ O
good -X- _ O
results. -X- _ O
Thanks!","Thanks -X- _ O
for -X- _ O
that -X- _ O
link -X- _ O
- -X- _ O
I'd -X- _ O
actually -X- _ O
come -X- _ O
across -X- _ O
that -X- _ O
answer -X- _ O
when -X- _ O
searching -X- _ O
around -X- _ O
earlier, -X- _ O
it's -X- _ O
good -X- _ O
to -X- _ O
solve -X- _ O
the -X- _ O
installer -X- _ O
problem! -X- _ O
I -X- _ O
couldn't -X- _ O
get -X- _ O
VLCJ -X- _ O
to -X- _ O
work -X- _ O
reliably -X- _ O
at -X- _ O
all. -X- _ O
It -X- _ O
kept -X- _ O
crashing -X- _ O
before -X- _ O
doing -X- _ O
anything -X- _ O
initially, -X- _ O
and -X- _ O
then -X- _ O
when -X- _ O
I -X- _ O
did -X- _ O
manage -X- _ O
to -X- _ O
get -X- _ O
it -X- _ O
to -X- _ O
work -X- _ O
it -X- _ O
kept -X- _ O
crashing -X- _ O
at -X- _ O
seemingly -X- _ O
random -X- _ O
intervals. -X- _ O
It's -X- _ O
a -X- _ O
shame, -X- _ O
because -X- _ O
if -X- _ O
it -X- _ O
""just -X- _ O
worked"" -X- _ O
it'd -X- _ O
be -X- _ O
exactly -X- _ O
what -X- _ O
I -X- _ O
needed!" -X- _ O

"I -X- _ O
haven't -X- _ O
yet -X- _ O
tried -X- _ O
using -X- _ O
them, -X- _ O
but -X- _ O
if -X- _ O
I -X- _ O
am -X- _ O
using -X- _ O
JavaFX -X- _ B-Entity
I'd -X- _ O
prefer -X- _ O
to -X- _ O
wait -X- _ O
until -X- _ O
2.0 -X- _ O
came -X- _ O
out -X- _ O
and -X- _ O
that -X- _ O
horrible -X- _ O
JavaFX -X- _ O
script -X- _ O
was -X- _ O
deprecated. -X- _ O
JavaFX -X- _ O
on -X- _ O
the -X- _ O
desktop -X- _ O
is -X- _ O
possible -X- _ O
with -X- _ O
the -X- _ O
current -X- _ O
versions -X- _ O
sure -X- _ O
- -X- _ O
but -X- _ O
all -X- _ O
the -X- _ O
examples -X- _ O
I've -X- _ O
seen -X- _ O
using -X- _ O
video -X- _ O
are -X- _ O
rather -X- _ O
hacky -X- _ O
and -X- _ O
usually -X- _ O
depend -X- _ O
on -X- _ O
internals -X- _ O
that -X- _ O
might -X- _ O
change -X- _ O
from -X- _ O
release -X- _ O
to -X- _ O
release.","Thanks -X- _ O
for -X- _ O
that -X- _ O
link -X- _ O
- -X- _ O
I'd -X- _ O
actually -X- _ O
come -X- _ O
across -X- _ O
that -X- _ O
answer -X- _ O
when -X- _ O
searching -X- _ O
around -X- _ O
earlier, -X- _ O
it's -X- _ O
good -X- _ O
to -X- _ O
solve -X- _ O
the -X- _ O
installer -X- _ O
problem! -X- _ O
I -X- _ O
couldn't -X- _ O
get -X- _ O
VLCJ -X- _ O
to -X- _ O
work -X- _ O
reliably -X- _ O
at -X- _ O
all. -X- _ O
It -X- _ O
kept -X- _ O
crashing -X- _ O
before -X- _ O
doing -X- _ O
anything -X- _ O
initially, -X- _ O
and -X- _ O
then -X- _ O
when -X- _ O
I -X- _ O
did -X- _ O
manage -X- _ O
to -X- _ O
get -X- _ O
it -X- _ O
to -X- _ O
work -X- _ O
it -X- _ O
kept -X- _ O
crashing -X- _ O
at -X- _ O
seemingly -X- _ O
random -X- _ O
intervals. -X- _ O
It's -X- _ O
a -X- _ O
shame, -X- _ O
because -X- _ O
if -X- _ O
it -X- _ O
""just -X- _ O
worked"" -X- _ O
it'd -X- _ O
be -X- _ O
exactly -X- _ O
what -X- _ O
I -X- _ O
needed!" -X- _ O

Isn't -X- _ O
jffmpeg -X- _ O
just -X- _ O
a -X- _ O
codec -X- _ O
pack -X- _ O
for -X- _ O
JMF -X- _ O
rather -X- _ O
than -X- _ O
a -X- _ O
media -X- _ O
library?,"gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

I -X- _ O
had -X- _ O
to -X- _ O
use -X- _ O
custom -X- _ O
stream -X- _ O
that -X- _ O
decrypted -X- _ O
mp4 -X- _ O
on -X- _ O
the -X- _ O
fly -X- _ O
and -X- _ O
passed -X- _ O
data -X- _ O
to -X- _ O
vlclib -X- _ O
through -X- _ O
memory -X- _ O
buffer -X- _ O
(imem). -X- _ O
That -X- _ O
was -X- _ O
so -X- _ O
slow -X- _ O
that -X- _ O
mp4 -X- _ O
video -X- _ O
started -X- _ O
up -X- _ O
in -X- _ O
like -X- _ O
20-30 -X- _ O
seconds. -X- _ O
Each -X- _ O
read -X- _ O
had -X- _ O
to -X- _ O
be -X- _ O
done -X- _ O
through -X- _ O
JNI. -X- _ O
any -X- _ O
ideas -X- _ O
how -X- _ O
to -X- _ O
do -X- _ O
this -X- _ O
othervise?,"gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

"@berry120 -X- _ O
thanks, -X- _ O
me -X- _ O
too -X- _ O
finally -X- _ O
had -X- _ O
to -X- _ O
resorted -X- _ O
to -X- _ O
vlcj, -X- _ O
my -X- _ O
initial -X- _ O
intention -X- _ O
is -X- _ O
to -X- _ O
keep -X- _ O
everything -X- _ O
to -X- _ O
run -X- _ O
from -X- _ O
within, -X- _ O
would -X- _ O
have -X- _ O
felt -X- _ O
fine -X- _ O
if -X- _ O
xuggler -X- _ O
was -X- _ O
still -X- _ O
active. -X- _ O
Sad -X- _ O
to -X- _ O
see -X- _ O
it -X- _ O
is -X- _ O
no -X- _ O
longer -X- _ O
active.","gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

"@kuhajeyan -X- _ O
The -X- _ O
only -X- _ O
thing -X- _ O
that's -X- _ O
really -X- _ O
changed -X- _ O
is -X- _ O
that -X- _ O
some -X- _ O
of -X- _ O
the -X- _ O
bugs -X- _ O
with -X- _ O
more -X- _ O
than -X- _ O
one -X- _ O
VLCJ -X- _ O
instance -X- _ O
in -X- _ O
the -X- _ O
same -X- _ O
VM -X- _ O
have -X- _ O
been -X- _ O
fixed, -X- _ O
but -X- _ O
AFAIK -X- _ O
still -X- _ O
not -X- _ O
all -X- _ O
of -X- _ O
them. -X- _ O
There's -X- _ O
certainly -X- _ O
no -X- _ O
additional -X- _ O
Java -X- _ O
based -X- _ O
libraries -X- _ O
that -X- _ O
I -X- _ O
know -X- _ O
of -X- _ O
that -X- _ O
offer -X- _ O
bette","FWIW -X- _ O
if -X- _ O
others -X- _ O
are -X- _ O
looking -X- _ O
at -X- _ O
this, -X- _ O
Xuggle -X- _ B-Entity
has -X- _ O
now -X- _ O
been -X- _ O
inactive -X- _ O
for -X- _ O
a -X- _ O
number -X- _ O
of -X- _ O
years -X- _ O
(,xuggle.com/xuggler/status,)." -X- _ O

Xuggler -X- _ O
is -X- _ O
great -X- _ O
as -X- _ O
long -X- _ O
as -X- _ O
one -X- _ O
of -X- _ O
the -X- _ O
released -X- _ O
versions -X- _ O
will -X- _ O
work -X- _ O
for -X- _ O
you -X- _ O
and -X- _ O
you -X- _ O
aren't -X- _ O
expecting -X- _ O
any -X- _ O
fixes -X- _ O
or -X- _ O
updates. -X- _ O
Its -X- _ O
pretty -X- _ O
much -X- _ O
DIY -X- _ O
now.,"gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

"@Mondain -X- _ O
It's -X- _ O
great -X- _ O
for -X- _ O
lower -X- _ O
level -X- _ O
transcoding -X- _ O
work, -X- _ O
but -X- _ O
if -X- _ O
you -X- _ O
just -X- _ O
want -X- _ O
to -X- _ O
build -X- _ O
a -X- _ O
media -X- _ O
player -X- _ O
it -X- _ O
requires -X- _ O
a -X- _ O
lot -X- _ O
of -X- _ O
work -X- _ O
just -X- _ O
to -X- _ O
get -X- _ O
relatively -X- _ O
simple -X- _ O
features -X- _ O
working -X- _ O
properly -X- _ O
(such -X- _ O
as -X- _ O
seeking.)","gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

"Any -X- _ O
current -X- _ O
best -X- _ O
recommendation -X- _ O
as -X- _ O
of -X- _ O
now, -X- _ O
as -X- _ O
this -X- _ O
post -X- _ O
is -X- _ O
about -X- _ O
5 -X- _ O
years -X- _ O
back. -X- _ O
I -X- _ O
hope -X- _ O
there -X- _ O
may -X- _ O
be -X- _ O
some -X- _ O
libraries -X- _ O
now. -X- _ O
is -X- _ O
any?","gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

"Yep, -X- _ O
thats -X- _ O
true. -X- _ O
I've -X- _ O
tried -X- _ O
all -X- _ O
of -X- _ O
the -X- _ O
libraries -X- _ O
and -X- _ O
only -X- _ O
had -X- _ O
luck -X- _ O
with -X- _ O
Xuggler -X- _ O
and -X- _ O
VLCJ -X- _ O
(tnx -X- _ O
for -X- _ O
recommending -X- _ O
VLCJ, -X- _ O
,STACK,). -X- _ O
I -X- _ O
decided -X- _ O
to -X- _ O
use -X- _ O
VLCJ -X- _ O
since -X- _ O
Xuggler -X- _ O
has -X- _ O
no -X- _ O
camera -X- _ O
support. -X- _ O
For -X- _ O
now -X- _ O
I -X- _ O
developed -X- _ O
app -X- _ O
that -X- _ O
uses -X- _ O
VLCJ -X- _ O
and -X- _ O
streams -X- _ O
from -X- _ O
2 -X- _ O
different -X- _ O
cameras -X- _ O
and -X- _ O
desktop -X- _ O
into -X- _ O
3 -X- _ O
separate -X- _ O
.flv -X- _ O
files -X- _ O
at -X- _ O
the -X- _ O
same -X- _ O
time -X- _ O
and -X- _ O
it -X- _ O
works. -X- _ O
But -X- _ O
I -X- _ O
don't -X- _ O
use -X- _ O
out -X- _ O
of -X- _ O
process.. -X- _ O
to -X- _ O
be -X- _ O
true, -X- _ O
didn't -X- _ O
heard -X- _ O
about -X- _ O
out -X- _ O
of -X- _ O
process -X- _ O
player -X- _ O
until -X- _ O
yours -X- _ O
answer -X- _ O
on -X- _ O
my -X- _ O
question. -X- _ O
I'll -X- _ O
go -X- _ O
now -X- _ O
and -X- _ O
read -X- _ O
your -X- _ O
article.","gstreamer-java -X- _ B-Entity
definitely -X- _ O
looks -X- _ O
promising, -X- _ O
thanks -X- _ O
for -X- _ O
that. -X- _ O
I'll -X- _ O
have -X- _ O
a -X- _ O
play -X- _ O
around -X- _ O
and -X- _ O
see -X- _ O
what -X- _ O
I -X- _ O
can -X- _ O
get -X- _ O
working!" -X- _ O

"@shabunc: -X- _ O
you're -X- _ O
correct. -X- _ O
JavaHg -X- _ B-Entity
is -X- _ O
using -X- _ O
the -X- _ O
only -X- _ O
stable -X- _ O
API -X- _ O
there -X- _ O
is -X- _ O
for -X- _ O
Mercurial: -X- _ O
the -X- _ O
command -X- _ O
line. -X- _ O
This -X- _ O
means -X- _ O
that -X- _ O
it -X- _ O
will -X- _ O
keep -X- _ O
working -X- _ O
if -X- _ O
the -X- _ O
underlying -X- _ O
data -X- _ O
structures -X- _ O
change. -X- _ O
However, -X- _ O
you're -X- _ O
correct -X- _ O
that -X- _ O
unlike, -X- _ O
say, -X- _ O
JGit, -X- _ O
it -X- _ O
isn't -X- _ O
a -X- _ O
Java-only -X- _ O
lib","apparently, -X- _ O
Jython -X- _ O
cannot -X- _ O
run -X- _ O
Mercurial -X- _ O
just -X- _ O
yet, -X- _ O
partly -X- _ O
because -X- _ O
of -X- _ O
the -X- _ O
sections -X- _ O
of -X- _ O
Mercurial -X- _ O
that -X- _ O
are -X- _ O
written -X- _ O
in -X- _ O
C." -X- _ O

"That -X- _ O
is -X- _ O
true -X- _ O
Aleadam, -X- _ O
but -X- _ O
what -X- _ O
happens -X- _ O
when -X- _ O
you -X- _ O
do -X- _ O
need -X- _ O
that -X- _ O
extra -X- _ O
stuff. -X- _ O
Plus -X- _ O
it -X- _ O
makes -X- _ O
it -X- _ O
cleaner -X- _ O
and -X- _ O
easier -X- _ O
to -X- _ O
read, -X- _ O
as -X- _ O
well -X- _ O
as -X- _ O
to -X- _ O
update. -X- _ O
Java -X- _ O
is -X- _ O
all -X- _ O
about -X- _ O
OO -X- _ O
programming -X- _ O
no?",i -X- _ O
use -X- _ O
the -X- _ O
same -X- _ O
thing -X- _ O
throughout -X- _ O
my -X- _ O
application. -X- _ O
what -X- _ O
is -X- _ O
our -X- _ O
opinion -X- _ O
JSON -X- _ B-Entity
parsing -X- _ O
or -X- _ O
OBJECT -X- _ O
MODELLING -X- _ O

"@Kevin -X- _ O
for -X- _ O
such -X- _ O
a -X- _ O
simple -X- _ O
task, -X- _ O
I -X- _ O
still -X- _ O
find -X- _ O
it -X- _ O
the -X- _ O
best -X- _ O
approach. -X- _ O
Just -X- _ O
2 -X- _ O
LOCs -X- _ O
and -X- _ O
you -X- _ O
get -X- _ O
your -X- _ O
result. -X- _ O
You -X- _ O
had -X- _ O
to -X- _ O
define -X- _ O
3 -X- _ O
classes -X- _ O
to -X- _ O
get -X- _ O
the -X- _ O
same -X- _ O
result -X- _ O
with -X- _ O
Gson. -X- _ B-Entity
I -X- _ O
won't -X- _ O
deny -X- _ O
its -X- _ O
advantages -X- _ O
in -X- _ O
other -X- _ O
situations, -X- _ O
but -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
see -X- _ O
any -X- _ O
here.\","That -X- _ O
is -X- _ O
true -X- _ O
Aleadam, -X- _ O
but -X- _ O
what -X- _ O
happens -X- _ O
when -X- _ O
you -X- _ O
do -X- _ O
need -X- _ O
that -X- _ O
extra -X- _ O
stuff. -X- _ O
Plus -X- _ O
it -X- _ O
makes -X- _ O
it -X- _ O
cleaner -X- _ O
and -X- _ O
easier -X- _ O
to -X- _ O
read, -X- _ O
as -X- _ O
well -X- _ O
as -X- _ O
to -X- _ O
update. -X- _ O
Java -X- _ O
is -X- _ O
all -X- _ O
about -X- _ O
OO -X- _ O
programming -X- _ O
no?" -X- _ O

Nice -X- _ O
to -X- _ O
know -X- _ O
a -X- _ O
simple -X- _ O
and -X- _ O
new -X- _ O
method! -X- _ O
Thanks,"@Kevin -X- _ O
for -X- _ O
such -X- _ O
a -X- _ O
simple -X- _ O
task, -X- _ O
I -X- _ O
still -X- _ O
find -X- _ O
it -X- _ O
the -X- _ O
best -X- _ O
approach. -X- _ O
Just -X- _ O
2 -X- _ O
LOCs -X- _ O
and -X- _ O
you -X- _ O
get -X- _ O
your -X- _ O
result. -X- _ O
You -X- _ O
had -X- _ O
to -X- _ O
define -X- _ O
3 -X- _ O
classes -X- _ O
to -X- _ O
get -X- _ O
the -X- _ O
same -X- _ O
result -X- _ O
with -X- _ O
Gson. -X- _ B-Entity
I -X- _ O
won't -X- _ O
deny -X- _ O
its -X- _ O
advantages -X- _ O
in -X- _ O
other -X- _ O
situations, -X- _ O
but -X- _ O
I -X- _ O
do -X- _ O
not -X- _ O
see -X- _ O
any -X- _ O
here.\" -X- _ O

"If -X- _ O
the -X- _ O
parameter -X- _ O
is -X- _ O
""translated_text"" -X- _ O
with -X- _ O
underscore -X- _ O
and -X- _ O
the -X- _ O
innerClass -X- _ O
iis -X- _ O
""translatedText"", -X- _ B-Entity
the -X- _ O
result -X- _ O
for -X- _ O
this -X- _ O
variable -X- _ O
is -X- _ O
null. -X- _ O
I'd -X- _ O
resolved -X- _ O
this: -X- _ O
,stackoverflow.com/a/15907855/3332734","Yeah! -X- _ O
@SerializeName(""json_field"") -X- _ O
it's -X- _ O
a -X- _ O
way." -X- _ O

Thanks -X- _ O
for -X- _ O
the -X- _ O
answer -X- _ O
however -X- _ O
I -X- _ O
am -X- _ O
choosing -X- _ O
second -X- _ O
answer -X- _ O
to -X- _ O
be -X- _ O
be -X- _ O
more -X- _ O
acceptable -X- _ O
how -X- _ O
ever -X- _ O
your -X- _ O
answer -X- _ O
made -X- _ O
my -X- _ O
understanding -X- _ O
more -X- _ O
clear -X- _ O
about -X- _ O
Gson...cheers,"That -X- _ B-Entity
is -X- _ O
true -X- _ O
Aleadam, -X- _ O
but -X- _ O
what -X- _ O
happens -X- _ O
when -X- _ O
you -X- _ O
do -X- _ O
need -X- _ O
that -X- _ O
extra -X- _ O
stuff. -X- _ O
Plus -X- _ O
it -X- _ O
makes -X- _ O
it -X- _ O
cleaner -X- _ O
and -X- _ O
easier -X- _ O
to -X- _ O
read, -X- _ O
as -X- _ O
well -X- _ O
as -X- _ O
to -X- _ O
update. -X- _ O
Java -X- _ O
is -X- _ O
all -X- _ O
about -X- _ O
OO -X- _ O
programming -X- _ O
no?" -X- _ O

"@krio, -X- _ O
thats -X- _ O
fine, -X- _ O
but -X- _ O
i -X- _ O
would -X- _ O
go -X- _ O
with -X- _ O
kevins -X- _ O
answer. -X- _ O
gson -X- _ B-Entity
looks -X- _ O
to -X- _ O
be -X- _ O
more -X- _ O
up -X- _ O
to -X- _ O
date -X- _ O
and -X- _ O
robust.","That -X- _ O
is -X- _ O
true -X- _ O
Aleadam, -X- _ O
but -X- _ O
what -X- _ O
happens -X- _ O
when -X- _ O
you -X- _ O
do -X- _ O
need -X- _ O
that -X- _ O
extra -X- _ O
stuff. -X- _ O
Plus -X- _ O
it -X- _ O
makes -X- _ O
it -X- _ O
cleaner -X- _ O
and -X- _ O
easier -X- _ O
to -X- _ O
read, -X- _ O
as -X- _ O
well -X- _ O
as -X- _ O
to -X- _ O
update. -X- _ O
Java -X- _ O
is -X- _ O
all -X- _ O
about -X- _ O
OO -X- _ O
programming -X- _ O
no?" -X- _ O

There -X- _ O
are -X- _ O
Gson -X- _ B-Entity
annotations -X- _ O
when -X- _ O
the -X- _ O
json -X- _ O
field -X- _ O
doesn't -X- _ O
match -X- _ O
the -X- _ O
pojo -X- _ O
field -X- _ O
name.,That's -X- _ O
super -X- _ O
old -X- _ O
school -X- _ O
and -X- _ O
nobody -X- _ O
uses -X- _ O
that -X- _ O
library -X- _ O
anymore -X- _ O
in -X- _ O
the -X- _ O
real -X- _ O
world. -X- _ O
Pretty -X- _ O
funny -X- _ O
that -X- _ O
it -X- _ O
got -X- _ O
marked -X- _ O
as -X- _ O
the -X- _ O
right -X- _ O
answer. -X- _ O

"I -X- _ O
think -X- _ O
it -X- _ O
has -X- _ O
to -X- _ O
be -X- _ O
with -X- _ O
an -X- _ O
enhancement -X- _ O
for -X- _ O
Closeable -X- _ O
superclasses, -X- _ O
so -X- _ O
that -X- _ O
the -X- _ O
JVM -X- _ O
can -X- _ O
auto -X- _ O
close -X- _ O
them -X- _ O
on -X- _ O
the -X- _ O
new -X- _ O
JDK -X- _ O
versions. -X- _ O
Since -X- _ O
Closeable -X- _ O
only -X- _ O
defines -X- _ O
that -X- _ O
a -X- _ O
class -X- _ O
implements -X- _ O
a -X- _ O
close() -X- _ O
method, -X- _ O
but -X- _ O
AutoCloseable -X- _ B-Entity
would -X- _ O
ensure -X- _ O
to -X- _ O
call -X- _ O
the -X- _ O
close -X- _ O
method.","With -X- _ O
Closeable -X- _ O
you -X- _ O
can -X- _ O
throw -X- _ O
only -X- _ O
IOException, -X- _ O
while -X- _ O
with -X- _ O
AutoCloseable -X- _ B-Entity
interface -X- _ O
you -X- _ O
can -X- _ O
throw -X- _ O
all -X- _ O
the -X- _ O
Exception" -X- _ O

"Read -X- _ O
the -X- _ O
last -X- _ O
sentence -X- _ O
of -X- _ O
the -X- _ O
,AutoCloseable#close(), -X- _ B-Entity
method's -X- _ O
javadoc.","With -X- _ O
Closeable -X- _ O
you -X- _ O
can -X- _ O
throw -X- _ O
only -X- _ O
IOException, -X- _ O
while -X- _ O
with -X- _ O
AutoCloseable -X- _ B-Entity
interface -X- _ O
you -X- _ O
can -X- _ O
throw -X- _ O
all -X- _ O
the -X- _ O
Exception" -X- _ O

"@BrunoJCM -X- _ O
good -X- _ O
catch. -X- _ O
I -X- _ O
have -X- _ O
restore -X- _ O
the -X- _ O
link -X- _ O
(the -X- _ O
class -X- _ O
has -X- _ O
been -X- _ O
moved -X- _ O
from -X- _ O
project -X- _ O
,org.springframework.core, -X- _ B-Entity
to -X- _ O
project -X- _ O
,spring-framework,: -X- _ O
,fisheye.springsource.org/browse/spring-framework/…,)",A -X- _ O
third -X- _ O
use -X- _ O
of -X- _ O
bridge -X- _ O
methods -X- _ O
is -X- _ O
the -X- _ O
alteration -X- _ O
of -X- _ O
a -X- _ O
methods -X- _ O
visibility -X- _ O
to -X- _ O
public -X- _ O
if -X- _ O
the -X- _ O
class -X- _ O
was -X- _ O
declared -X- _ O
with -X- _ O
package -X- _ O
private -X- _ O
visibility. -X- _ O

"Even -X- _ O
without -X- _ O
generics, -X- _ O
bridge -X- _ O
methods -X- _ O
are -X- _ O
necessary -X- _ O
for -X- _ O
covariant -X- _ O
return -X- _ O
types.","@BrunoJCM -X- _ O
good -X- _ O
catch. -X- _ O
I -X- _ O
have -X- _ O
restore -X- _ O
the -X- _ O
link -X- _ O
(the -X- _ O
class -X- _ O
has -X- _ O
been -X- _ O
moved -X- _ O
from -X- _ O
project -X- _ O
,org.springframework.core, -X- _ B-Entity
to -X- _ O
project -X- _ O
,spring-framework,: -X- _ O
,fisheye.springsource.org/browse/spring-framework/…,)" -X- _ O

"Improved -X- _ O
the -X- _ O
answer -X- _ O
by -X- _ O
adding -X- _ O
links -X- _ O
to -X- _ O
the -X- _ O
,Commons -X- _ O
IO, -X- _ O
(,IOUtils,) -X- _ B-Entity
documentation -X- _ O
and -X- _ O
the -X- _ O
maven -X- _ O
search -X- _ O
site.","I -X- _ O
believe -X- _ O
it's -X- _ O
better -X- _ O
to -X- _ O
use -X- _ O
HttpURLConnection, -X- _ B-Entity
as -X- _ O
described -X- _ O
in -X- _ O
,stackoverflow.com/a/2938787/3281252,." -X- _ O

"What -X- _ O
is -X- _ O
,IOUtils, -X- _ B-Entity
in -X- _ O
your -X- _ O
answer?","I -X- _ O
believe -X- _ O
it's -X- _ O
better -X- _ O
to -X- _ O
use -X- _ O
HttpURLConnection, -X- _ B-Entity
as -X- _ O
described -X- _ O
in -X- _ O
,stackoverflow.com/a/2938787/3281252,." -X- _ O

"@DavidUntama -X- _ O
Just -X- _ O
send -X- _ O
it -X- _ O
as -X- _ O
JSON -X- _ B-Entity
and -X- _ O
then -X- _ O
use -X- _ O
,GSON.fromJson, -X- _ B-Entity
on -X- _ O
your -X- _ O
server -X- _ O
to -X- _ O
parse -X- _ O
it.","What -X- _ O
is -X- _ O
,IOUtils, -X- _ B-Entity
in -X- _ O
your -X- _ O
answer?" -X- _ O

how -X- _ O
about -X- _ O
upload -X- _ O
file -X- _ O
to -X- _ O
server?,"@DavidUntama -X- _ O
Just -X- _ O
send -X- _ O
it -X- _ O
as -X- _ O
JSON -X- _ B-Entity
and -X- _ O
then -X- _ O
use -X- _ O
,GSON.fromJson, -X- _ B-Entity
on -X- _ O
your -X- _ O
server -X- _ O
to -X- _ O
parse -X- _ O
it." -X- _ O

"Best -X- _ O
Example -X- _ O
for -X- _ O
deprecated -X- _ O
httpClient, -X- _ B-Entity
NameValuePair. -X- _ O
Recommence -X- _ O
to -X- _ O
other.","@DavidUntama -X- _ O
Just -X- _ O
send -X- _ O
it -X- _ O
as -X- _ O
JSON -X- _ B-Entity
and -X- _ O
then -X- _ O
use -X- _ O
,GSON.fromJson, -X- _ B-Entity
on -X- _ O
your -X- _ O
server -X- _ O
to -X- _ O
parse -X- _ O
it." -X- _ O

Looks -X- _ O
like -X- _ O
the -X- _ O
proper -X- _ O
answer -X- _ O
to -X- _ O
this -X- _ O
question,"What -X- _ O
is -X- _ O
,IOUtils, -X- _ B-Entity
in -X- _ O
your -X- _ O
answer?" -X- _ O

"No, -X- _ O
it -X- _ O
doesnt -X- _ O
throw -X- _ O
any -X- _ O
exception -X- _ O
at -X- _ O
the -X- _ O
server -X- _ O
side. -X- _ O
It -X- _ O
seems -X- _ O
that -X- _ O
the -X- _ O
toSocket -X- _ O
outputstream -X- _ O
obj -X- _ O
still -X- _ O
works -X- _ O
at -X- _ O
the -X- _ O
server -X- _ O
side, -X- _ O
but -X- _ O
at -X- _ O
the -X- _ O
client -X- _ O
side -X- _ O
the -X- _ O
connection -X- _ O
is -X- _ O
closed.","No, -X- _ O
it -X- _ O
does -X- _ O
a -X- _ O
one -X- _ O
way -X- _ O
shutdown, -X- _ O
closing -X- _ O
the -X- _ O
input -X- _ O
half -X- _ O
of -X- _ O
the -X- _ O
socket -X- _ O
(so -X- _ O
that -X- _ O
you -X- _ O
cannot -X- _ O
receive -X- _ O
any -X- _ O
more -X- _ O
data), -X- _ O
but -X- _ O
still -X- _ O
letting -X- _ O
you -X- _ O
send -X- _ O
your -X- _ O
message -X- _ O
on -X- _ O
the -X- _ O
output -X- _ O
half, -X- _ O
which -X- _ O
I -X- _ O
thought -X- _ O
is -X- _ O
what -X- _ O
you -X- _ O
were -X- _ O
asking. -X- _ O
When -X- _ O
you -X- _ O
ultimately -X- _ O
call -X- _ O
close() -X- _ B-Entity
on -X- _ O
the -X- _ O
socket, -X- _ O
the -X- _ O
output -X- _ O
side -X- _ O
gets -X- _ O
closed -X- _ O
as -X- _ O
well." -X- _ O

"No, -X- _ O
it -X- _ O
does -X- _ O
a -X- _ O
one -X- _ O
way -X- _ O
shutdown, -X- _ O
closing -X- _ O
the -X- _ O
input -X- _ O
half -X- _ O
of -X- _ O
the -X- _ O
socket -X- _ O
(so -X- _ O
that -X- _ O
you -X- _ O
cannot -X- _ O
receive -X- _ O
any -X- _ O
more -X- _ O
data), -X- _ O
but -X- _ O
still -X- _ O
letting -X- _ O
you -X- _ O
send -X- _ O
your -X- _ O
message -X- _ O
on -X- _ O
the -X- _ O
output -X- _ O
half, -X- _ O
which -X- _ O
I -X- _ O
thought -X- _ O
is -X- _ O
what -X- _ O
you -X- _ O
were -X- _ O
asking. -X- _ O
When -X- _ O
you -X- _ O
ultimately -X- _ O
call -X- _ O
close() -X- _ B-Entity
on -X- _ O
the -X- _ O
socket, -X- _ O
the -X- _ O
output -X- _ O
side -X- _ O
gets -X- _ O
closed -X- _ O
as -X- _ O
well.","Yes, -X- _ O
closing -X- _ O
the -X- _ O
input -X- _ O
stream -X- _ O
closes -X- _ O
the -X- _ O
socket. -X- _ O
Ditto -X- _ O
the -X- _ O
output -X- _ O
stream. -X- _ O
So -X- _ O
of -X- _ O
course -X- _ O
what -X- _ O
you -X- _ O
should -X- _ O
close -X- _ O
is -X- _ O
always -X- _ O
the -X- _ O
output -X- _ O
stream, -X- _ O
so -X- _ O
It -X- _ O
gets -X- _ O
flushed." -X- _ O

I -X- _ O
am -X- _ O
sending -X- _ O
data -X- _ O
from -X- _ O
Android -X- _ O
app -X- _ O
to -X- _ O
PHP -X- _ O
using -X- _ O
HttpPost -X- _ B-Entity
and -X- _ O
HttpClient -X- _ B-Entity
but -X- _ O
these -X- _ O
methods -X- _ O
are -X- _ O
deprecated -X- _ O
in -X- _ O
the -X- _ O
new -X- _ O
update -X- _ O
of -X- _ O
API -X- _ O
22 -X- _ O
so -X- _ O
i -X- _ O
need -X- _ O
some -X- _ O
option -X- _ O
to -X- _ O
that,how -X- _ O
about -X- _ O
upload -X- _ O
file -X- _ O
to -X- _ O
server? -X- _ O

I -X- _ O
was -X- _ O
looking -X- _ O
for -X- _ O
a -X- _ O
way -X- _ O
to -X- _ O
close -X- _ O
the -X- _ O
OutputStream -X- _ O
without -X- _ O
closing -X- _ O
the -X- _ O
socket -X- _ O
and -X- _ O
it -X- _ O
did -X- _ O
the -X- _ O
trick! -X- _ O
Thank -X- _ O
a -X- _ O
lot -X- _ O
mate! -X- _ O
You -X- _ O
ended -X- _ O
an -X- _ O
interminable -X- _ O
quest...,"I -X- _ O
am -X- _ O
looking -X- _ O
for -X- _ O
the -X- _ O
same -X- _ O
@Gregordy -X- _ O
but -X- _ O
for -X- _ O
the -X- _ O
,BluetoothSocket,. -X- _ B-Entity
It -X- _ O
doesn't -X- _ O
have -X- _ O
method -X- _ O
,shutdownInput(),. -X- _ B-Entity
Do -X- _ O
you -X- _ O
have -X- _ O
any -X- _ O
idea?" -X- _ O

"Yes, -X- _ O
closing -X- _ O
the -X- _ O
input -X- _ O
stream -X- _ O
closes -X- _ O
the -X- _ O
socket. -X- _ O
Ditto -X- _ O
the -X- _ O
output -X- _ O
stream. -X- _ O
So -X- _ O
of -X- _ O
course -X- _ O
what -X- _ O
you -X- _ O
should -X- _ O
close -X- _ O
is -X- _ O
always -X- _ O
the -X- _ O
output -X- _ O
stream, -X- _ O
so -X- _ O
It -X- _ O
gets -X- _ O
flushed.","I -X- _ O
am -X- _ O
looking -X- _ O
for -X- _ O
the -X- _ O
same -X- _ O
@Gregordy -X- _ O
but -X- _ O
for -X- _ O
the -X- _ O
,BluetoothSocket,. -X- _ B-Entity
It -X- _ O
doesn't -X- _ O
have -X- _ O
method -X- _ O
,shutdownInput(),. -X- _ B-Entity
Do -X- _ O
you -X- _ O
have -X- _ O
any -X- _ O
idea?" -X- _ O

"Oh, -X- _ O
I -X- _ O
see -X- _ O
you've -X- _ O
added -X- _ O
your -X- _ O
own -X- _ O
answer -X- _ O
instead.",@matt -X- _ O
b: -X- _ O
is -X- _ O
this -X- _ O
true -X- _ O
of -X- _ O
the -X- _ O
HashSet -X- _ B-Entity
in -X- _ O
IBM's -X- _ O
JVM? -X- _ O
JRocket? -X- _ O
GNU -X- _ O
Classpath? -X- _ O
The -X- _ O
new -X- _ O
optimized -X- _ O
one -X- _ O
in -X- _ O
Sun's -X- _ O
Java -X- _ O
8? -X- _ O
Unless -X- _ O
this -X- _ O
is -X- _ O
in -X- _ O
the -X- _ O
JLS -X- _ O
you -X- _ O
can't -X- _ O
count -X- _ O
on -X- _ O
it. -X- _ O

You -X- _ O
should -X- _ O
not -X- _ O
count -X- _ O
on -X- _ O
addAll() -X- _ B-Entity
calling -X- _ O
add() -X- _ O
as -X- _ O
that -X- _ O
is -X- _ O
an -X- _ O
implementation -X- _ O
detail -X- _ O
and -X- _ O
may -X- _ O
not -X- _ O
always -X- _ O
be -X- _ O
true.,@matt -X- _ O
b: -X- _ O
is -X- _ O
this -X- _ O
true -X- _ O
of -X- _ O
the -X- _ O
HashSet -X- _ B-Entity
in -X- _ O
IBM's -X- _ O
JVM? -X- _ O
JRocket? -X- _ O
GNU -X- _ O
Classpath? -X- _ O
The -X- _ O
new -X- _ O
optimized -X- _ O
one -X- _ O
in -X- _ O
Sun's -X- _ O
Java -X- _ O
8? -X- _ O
Unless -X- _ O
this -X- _ O
is -X- _ O
in -X- _ O
the -X- _ O
JLS -X- _ O
you -X- _ O
can't -X- _ O
count -X- _ O
on -X- _ O
it. -X- _ O

"This -X- _ O
is -X- _ O
explicitly -X- _ O
advised -X- _ O
against -X- _ O
in -X- _ O
Effective -X- _ O
Java, -X- _ O
you -X- _ O
can -X- _ O
refer -X- _ O
to -X- _ O
it -X- _ O
for -X- _ O
the -X- _ O
reasons -X- _ O
why. -X- _ O
Extends -X- _ O
,AbstractSet, -X- _ B-Entity
and -X- _ O
wrap -X- _ O
an -X- _ O
existing -X- _ O
set -X- _ O
is -X- _ O
the -X- _ O
way -X- _ O
to -X- _ O
go.","Oh, -X- _ O
I -X- _ O
see -X- _ O
you've -X- _ O
added -X- _ O
your -X- _ O
own -X- _ O
answer -X- _ O
instead." -X- _ O

You -X- _ O
are -X- _ O
better -X- _ O
off -X- _ O
wrapping -X- _ O
a -X- _ O
Set -X- _ O
implementation.,"This -X- _ O
is -X- _ O
explicitly -X- _ O
advised -X- _ O
against -X- _ O
in -X- _ O
Effective -X- _ O
Java, -X- _ O
you -X- _ O
can -X- _ O
refer -X- _ O
to -X- _ O
it -X- _ O
for -X- _ O
the -X- _ O
reasons -X- _ O
why. -X- _ O
Extends -X- _ O
,AbstractSet, -X- _ B-Entity
and -X- _ O
wrap -X- _ O
an -X- _ O
existing -X- _ O
set -X- _ O
is -X- _ O
the -X- _ O
way -X- _ O
to -X- _ O
go." -X- _ O

"Actually, -X- _ O
addAll -X- _ B-Entity
and -X- _ O
the -X- _ O
constructors -X- _ O
don't -X- _ O
need -X- _ O
to -X- _ O
be -X- _ O
overridden -X- _ O
since -X- _ O
they -X- _ O
are -X- _ O
defined -X- _ O
in -X- _ O
AbstractSet -X- _ B-Entity
and -X- _ O
AbstractCollection -X- _ B-Entity
to -X- _ O
simply -X- _ O
call -X- _ O
the -X- _ O
add -X- _ O
method. -X- _ O
So -X- _ O
only -X- _ O
add -X- _ O
really -X- _ O
needs -X- _ O
to -X- _ O
be -X- _ O
overridden.","@cdmckay: -X- _ O
If -X- _ O
you -X- _ O
haven't -X- _ O
already -X- _ O
upvoted -X- _ O
Tom -X- _ O
Hawtin's -X- _ O
answer, -X- _ O
do -X- _ O
it -X- _ O
now! -X- _ O
:)" -X- _ O

"This -X- _ O
implementation -X- _ O
has -X- _ O
the -X- _ O
drawback -X- _ O
of -X- _ O
being -X- _ O
immutable, -X- _ O
too. -X- _ O
From -X- _ O
the -X- _ O
docs: -X- _ O
,For -X- _ O
this -X- _ O
reason, -X- _ O
and -X- _ O
to -X- _ O
avoid -X- _ O
general -X- _ O
confusion, -X- _ O
it -X- _ O
is -X- _ O
strongly -X- _ O
recommended -X- _ O
to -X- _ O
place -X- _ O
only -X- _ O
immutable -X- _ O
objects -X- _ O
into -X- _ O
this -X- _ O
collection.,. -X- _ O
Don't -X- _ O
think -X- _ O
that's -X- _ O
what -X- _ O
the -X- _ O
OP -X- _ O
was -X- _ O
asking -X- _ O
for.","This -X- _ O
is -X- _ O
explicitly -X- _ O
advised -X- _ O
against -X- _ O
in -X- _ O
Effective -X- _ O
Java, -X- _ O
you -X- _ O
can -X- _ O
refer -X- _ O
to -X- _ O
it -X- _ O
for -X- _ O
the -X- _ O
reasons -X- _ O
why. -X- _ O
Extends -X- _ O
,AbstractSet, -X- _ B-Entity
and -X- _ O
wrap -X- _ O
an -X- _ O
existing -X- _ O
set -X- _ O
is -X- _ O
the -X- _ O
way -X- _ O
to -X- _ O
go." -X- _ O

"The -X- _ O
Guava -X- _ B-Entity
Solution -X- _ O
won't -X- _ O
work -X- _ O
for -X- _ O
Guava -X- _ O
16+ -X- _ O
as -X- _ O
,Constraints, -X- _ O
was -X- _ O
removed -X- _ O
(see -X- _ O
,stackoverflow.com/a/33806747/2294031,). -X- _ O
,CollectionUtils.addIgnoreNull, -X- _ B-Entity
will -X- _ O
throw -X- _ O
no -X- _ O
exception -X- _ O
if -X- _ O
the -X- _ O
object -X- _ O
to -X- _ O
add -X- _ O
is -X- _ O
null -X- _ O
- -X- _ O
so -X- _ O
it -X- _ O
won't -X- _ O
fail -X- _ O
as -X- _ O
OP -X- _ O
intended.","@cdmckay: -X- _ O
If -X- _ O
you -X- _ O
haven't -X- _ O
already -X- _ O
upvoted -X- _ O
Tom -X- _ O
Hawtin's -X- _ O
answer, -X- _ O
do -X- _ O
it -X- _ O
now! -X- _ O
:)" -X- _ O

"Instead -X- _ O
of -X- _ O
calling -X- _ O
this -X- _ O
a -X- _ O
,Composition,, -X- _ O
I -X- _ O
would -X- _ O
say -X- _ O
it -X- _ O
would -X- _ O
be -X- _ O
more -X- _ O
appropriate -X- _ O
to -X- _ O
call -X- _ O
it -X- _ O
an -X- _ O
,Aggregation, -X- _ O
because -X- _ O
,Set, -X- _ O
class -X- _ O
,CAN -X- _ O
EXIST, -X- _ O
without -X- _ O
its -X- _ O
wrapper -X- _ O
class -X- _ O
i.e -X- _ O
,NoNullSet","This -X- _ B-Entity
is -X- _ O
explicitly -X- _ O
advised -X- _ O
against -X- _ O
in -X- _ O
Effective -X- _ O
Java, -X- _ O
you -X- _ O
can -X- _ O
refer -X- _ O
to -X- _ O
it -X- _ O
for -X- _ O
the -X- _ O
reasons -X- _ O
why. -X- _ O
Extends -X- _ O
,AbstractSet, -X- _ B-Entity
and -X- _ O
wrap -X- _ O
an -X- _ O
existing -X- _ O
set -X- _ O
is -X- _ O
the -X- _ O
way -X- _ O
to -X- _ O
go." -X- _ O

"It -X- _ O
should -X- _ O
throw -X- _ O
a -X- _ O
,NullPointerException, -X- _ B-Entity
as -X- _ O
defined -X- _ O
by -X- _ O
the -X- _ O
,Collection, -X- _ O
and -X- _ O
,Set, -X- _ O
documentations. -X- _ O
,@throws -X- _ O
NullPointerException -X- _ B-Entity
if -X- _ O
the -X- _ O
specified -X- _ O
element -X- _ O
is -X- _ O
null -X- _ O
and -X- _ O
this -X- _ O
set -X- _ O
does -X- _ O
not -X- _ O
permit -X- _ O
null -X- _ O
elements,.",You -X- _ O
are -X- _ O
better -X- _ O
off -X- _ O
wrapping -X- _ O
a -X- _ O
Set -X- _ O
implementation. -X- _ O

"I -X- _ O
disagree -X- _ O
with -X- _ O
throwing -X- _ O
an -X- _ O
,IllegalArgumentException,. -X- _ B-Entity
It -X- _ O
should -X- _ O
be -X- _ O
a -X- _ O
,NullPointerException,. -X- _ B-Entity
Although -X- _ O
it's -X- _ O
an -X- _ O
,endless -X- _ O
discussion,, -X- _ O
,Set.add(), -X- _ B-Entity
already -X- _ O
throws -X- _ O
a -X- _ O
NPE -X- _ O
,""if -X- _ O
the -X- _ O
specified -X- _ O
element -X- _ O
is -X- _ O
null -X- _ O
and -X- _ O
this -X- _ O
set -X- _ O
does -X- _ O
not -X- _ O
permit -X- _ O
null -X- _ O
elements"",. -X- _ O
You -X- _ O
would -X- _ O
be -X- _ O
creating -X- _ O
different -X- _ O
behaviour -X- _ O
for -X- _ O
the -X- _ O
same -X- _ O
thing -X- _ O
by -X- _ O
throwing -X- _ O
an -X- _ O
,IllegalArgumentException, -X- _ B-Entity
now.","It -X- _ O
should -X- _ O
throw -X- _ O
a -X- _ O
,NullPointerException, -X- _ B-Entity
as -X- _ O
defined -X- _ O
by -X- _ O
the -X- _ O
,Collection, -X- _ O
and -X- _ O
,Set, -X- _ O
documentations. -X- _ O
,@throws -X- _ O
NullPointerException -X- _ B-Entity
if -X- _ O
the -X- _ O
specified -X- _ O
element -X- _ O
is -X- _ O
null -X- _ O
and -X- _ O
this -X- _ O
set -X- _ O
does -X- _ O
not -X- _ O
permit -X- _ O
null -X- _ O
elements,." -X- _ O

"I'd -X- _ O
suggest -X- _ O
not -X- _ O
explicitly -X- _ O
allocating -X- _ O
a -X- _ O
HashSet, -X- _ B-Entity
but -X- _ O
instead -X- _ O
take -X- _ O
a -X- _ O
Set<E> -X- _ O
argument -X- _ O
in -X- _ O
the -X- _ O
constructor. -X- _ O
This -X- _ O
then -X- _ O
makes -X- _ O
NoNullSet -X- _ B-Entity
a -X- _ O
decorator -X- _ O
class -X- _ O
that -X- _ O
can -X- _ O
work -X- _ O
w/ -X- _ O
HashSet -X- _ B-Entity
or -X- _ O
TreeSet -X- _ B-Entity
or -X- _ O
EnumSet -X- _ B-Entity
or -X- _ O
whatever.","Oh, -X- _ O
I -X- _ O
see -X- _ O
you've -X- _ O
added -X- _ O
your -X- _ O
own -X- _ O
answer -X- _ O
instead." -X- _ O

"Guava -X- _ B-Entity
provides -X- _ O
a -X- _ O
,ForwardingSet, -X- _ B-Entity
class -X- _ O
that -X- _ O
forwards -X- _ O
all -X- _ O
calls -X- _ O
to -X- _ O
a -X- _ O
delegate -X- _ O
by -X- _ O
default. -X- _ O
Then -X- _ O
you -X- _ O
can -X- _ O
just -X- _ O
override -X- _ O
add -X- _ O
and -X- _ O
addAll.","Actually, -X- _ O
addAll -X- _ O
and -X- _ O
the -X- _ O
constructors -X- _ O
don't -X- _ O
need -X- _ O
to -X- _ O
be -X- _ O
overridden -X- _ O
since -X- _ O
they -X- _ O
are -X- _ O
defined -X- _ O
in -X- _ O
AbstractSet -X- _ B-Entity
and -X- _ O
AbstractCollection -X- _ B-Entity
to -X- _ O
simply -X- _ O
call -X- _ O
the -X- _ O
add -X- _ O
method. -X- _ O
So -X- _ O
only -X- _ O
add -X- _ O
really -X- _ O
needs -X- _ O
to -X- _ O
be -X- _ O
overridden." -X- _ O

classic -X- _ O
example -X- _ O
of -X- _ O
favoring -X- _ O
composition -X- _ O
over -X- _ O
inheritance..+1,"Actually, -X- _ O
addAll -X- _ O
and -X- _ O
the -X- _ O
constructors -X- _ O
don't -X- _ O
need -X- _ O
to -X- _ O
be -X- _ O
overridden -X- _ O
since -X- _ O
they -X- _ O
are -X- _ O
defined -X- _ O
in -X- _ O
AbstractSet -X- _ B-Entity
and -X- _ O
AbstractCollection -X- _ B-Entity
to -X- _ O
simply -X- _ O
call -X- _ O
the -X- _ O
add -X- _ O
method. -X- _ O
So -X- _ O
only -X- _ O
add -X- _ O
really -X- _ O
needs -X- _ O
to -X- _ O
be -X- _ O
overridden." -X- _ O
